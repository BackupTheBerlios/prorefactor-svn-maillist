From johnallengreen at berlios.de  Tue Feb  7 18:58:31 2006
From: johnallengreen at berlios.de (johnallengreen at BerliOS)
Date: Tue, 7 Feb 2006 18:58:31 +0100
Subject: [Prorefactor-svn] r43 - in trunk: org.prorefactor.core/src/org/prorefactor/treeparser01 org.prorefactor.doc org.prorefactor.refactor/prorefactor/projects/sports2000/pubs/data/pub org.prorefactor.refactor/prorefactor/projects/sports2000/pubs/data/rename/t01/orig org.prorefactor.refactor/src/org/prorefactor/refactor org.prorefactor.refactor/src/org/prorefactor/refactor/tfnames
Message-ID: <200602071758.k17HwVFg010570@sheep.berlios.de>

Author: johnallengreen
Date: 2006-02-07 18:58:12 +0100 (Tue, 07 Feb 2006)
New Revision: 43

Modified:
   trunk/org.prorefactor.core/src/org/prorefactor/treeparser01/TP01Support.java
   trunk/org.prorefactor.doc/manual.xml
   trunk/org.prorefactor.refactor/prorefactor/projects/sports2000/pubs/data/pub/test01.p.pub
   trunk/org.prorefactor.refactor/prorefactor/projects/sports2000/pubs/data/rename/t01/orig/t01.p.pub
   trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/PUB.java
   trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/tfnames/NamesLint.java
Log:
Fixed bug in tree parser. The "storetype" was not being set for field nodes. As a result, the "table and field names" refactoring was missing some changes, depending on which refactoring options were set.

Modified: trunk/org.prorefactor.core/src/org/prorefactor/treeparser01/TP01Support.java
===================================================================
--- trunk/org.prorefactor.core/src/org/prorefactor/treeparser01/TP01Support.java	2006-02-07 02:20:57 UTC (rev 42)
+++ trunk/org.prorefactor.core/src/org/prorefactor/treeparser01/TP01Support.java	2006-02-07 17:58:12 UTC (rev 43)
@@ -435,6 +435,7 @@
 		// Table field
 		if (result.field != null) {
 			refNode.setSymbol(result.field);
+			refNode.attrSet(IConstants.STORETYPE, result.field.getField().getTable().getStoretype());
 			result.field.noteReference(contextQualifier);
 		}
 

Modified: trunk/org.prorefactor.doc/manual.xml
===================================================================
--- trunk/org.prorefactor.doc/manual.xml	2006-02-07 02:20:57 UTC (rev 42)
+++ trunk/org.prorefactor.doc/manual.xml	2006-02-07 17:58:12 UTC (rev 43)
@@ -7,7 +7,7 @@
 
     <date>2006</date>
 
-    <pubdate>January 2006, ProRefactor version 1.2.4</pubdate>
+    <pubdate>February 2006, ProRefactor version 1.3.0</pubdate>
 
     <author>
       <firstname>John</firstname>
@@ -1564,12 +1564,15 @@
 
     <variablelist>
       <varlistentry>
-        <term>Version 1.2.4</term>
+        <term>Version 1.3.0</term>
 
         <listitem>
           <itemizedlist>
             <listitem>
-              <para>No feature enhancements - just internal changes.</para>
+              <para>IMPORTANT: Added data-type to the schemadump programs. You
+              must re-dump your schema before using this version of
+              ProRefactor. Added data type attribute to fields and variables
+              in the symbol table.</para>
             </listitem>
 
             <listitem>
@@ -1584,13 +1587,6 @@
             </listitem>
 
             <listitem>
-              <para>Added data-type to the schemadump programs. You must
-              re-dump your schema before using this version of ProRefactor.
-              Added data type attribute to fields and variables in the symbol
-              table.</para>
-            </listitem>
-
-            <listitem>
               <para>Some classes and class members have been deprecated, and
               will be removed soon. Please see the javadoc.</para>
             </listitem>
@@ -1602,10 +1598,23 @@
             </listitem>
 
             <listitem>
-              <para>Field and variable names referenced by the INPUT function
-              are no longer refactored. This is a (hopefully temporary)
-              workaround for a recently found bug.</para>
+              <para>Added support for frame scopes and the lookup of field
+              frames. This was a large task, requiring a lot of changes and
+              additions. With this, was able to fix a bug where the fields
+              referenced by the INPUT function were not being looked up
+              properly. They should have been looked up through the stack of
+              fields in frames, rather than through the usual field/variable
+              lookup methods. Thanks Bruce Craigie for the INPUT function bug
+              report.</para>
             </listitem>
+
+            <listitem>
+              <para>Fixed bug in tree parser. The "storetype" was not being
+              set for field nodes. As a result, the "table and field names"
+              refactoring was missing some changes, depending on which
+              refactoring options were set. Thanks Bruce Craigie for this bug
+              report.</para>
+            </listitem>
           </itemizedlist>
         </listitem>
       </varlistentry>

Modified: trunk/org.prorefactor.refactor/prorefactor/projects/sports2000/pubs/data/pub/test01.p.pub
===================================================================
(Binary files differ)

Modified: trunk/org.prorefactor.refactor/prorefactor/projects/sports2000/pubs/data/rename/t01/orig/t01.p.pub
===================================================================
(Binary files differ)

Modified: trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/PUB.java
===================================================================
--- trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/PUB.java	2006-02-07 02:20:57 UTC (rev 42)
+++ trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/PUB.java	2006-02-07 17:58:12 UTC (rev 43)
@@ -60,7 +60,7 @@
 		pubFile = new File(refpack.getProRefactorProjectDir() + "/pubs/" + relPath + ".pub");
 	}
 	
-	public static final int LAYOUT_VERSION = 3;
+	public static final int LAYOUT_VERSION = 4;
 
 	/** loadTo(PUBFILE_TIMESTAMP) - just check if the binary exists and
 	 * check that it is newer than the compile unit file. Does not read anything

Modified: trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/tfnames/NamesLint.java
===================================================================
--- trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/tfnames/NamesLint.java	2006-02-07 02:20:57 UTC (rev 42)
+++ trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/tfnames/NamesLint.java	2006-02-07 17:58:12 UTC (rev 43)
@@ -119,8 +119,8 @@
 		}
 
 		// Are we applying changes to work/temp tables?
-		if (	! settings.workTempTables
-			&&	node.attrGet(IConstants.STORETYPE) != IConstants.ST_DBTABLE
+		if (	(! settings.workTempTables)
+			&&	(node.attrGet(IConstants.STORETYPE) != IConstants.ST_DBTABLE)
 			) return;
 
 		currTarget.abbreviated = needsAbbrevFix(node);



From johnallengreen at berlios.de  Fri Feb 10 19:29:54 2006
From: johnallengreen at berlios.de (johnallengreen at BerliOS)
Date: Fri, 10 Feb 2006 19:29:54 +0100
Subject: [Prorefactor-svn] r44 - in trunk: . org.prolint.core org.prolint.core/META-INF org.prolint.core/src org.prolint.core/src/org org.prolint.core/src/org/prolint org.prolint.core/src/org/prolint/core org.prolint.core/src/org/prolint/eclipse org.prolint.core/src/org/prolint/rules org.prolint.core/src/org/prolint/unittest org.prolint.core/src/testdata org.prolint.core/src/testdata/abbrevnames org.prolint.core/src/testdata/junit_s2k org.prolint.core/src/testdata/simpleunit org.prorefactor.core org.prorefactor.core/META-INF org.prorefactor.doc org.prorefactor.doc/META-INF org.prorefactor.eclipse org.prorefactor.eclipse/META-INF org.prorefactor.eclipse/src/org/prorefactor/eclipse/actions org.prorefactor.eclipse/src/org/prorefactor/eclipse/wizards org.prorefactor.feature org.prorefactor.javadoc org.prorefactor.javadoc/META-INF org.prorefactor.lib org.prorefactor.lib/META-INF org.prorefactor.lib/antlr org.prorefactor.lib/junit org.prorefactor.refactor org.prorefactor.refactor/META-INF org.prore!
 factor.refactor/src/org/prorefactor/refactor org.prorefactor.refactor/src/org/prorefactor/refactor/util org.prorefactor.update
Message-ID: <200602101829.k1AITskX030456@sheep.berlios.de>

Author: johnallengreen
Date: 2006-02-10 19:28:17 +0100 (Fri, 10 Feb 2006)
New Revision: 44

Added:
   trunk/org.prolint.core/
   trunk/org.prolint.core/.classpath
   trunk/org.prolint.core/.project
   trunk/org.prolint.core/META-INF/
   trunk/org.prolint.core/META-INF/MANIFEST.MF
   trunk/org.prolint.core/build.properties
   trunk/org.prolint.core/hibernate2.jar
   trunk/org.prolint.core/plugin.xml
   trunk/org.prolint.core/src/
   trunk/org.prolint.core/src/log4j.properties
   trunk/org.prolint.core/src/org/
   trunk/org.prolint.core/src/org/prolint/
   trunk/org.prolint.core/src/org/prolint/core/
   trunk/org.prolint.core/src/org/prolint/core/FileStuff.java
   trunk/org.prolint.core/src/org/prolint/core/LintException.java
   trunk/org.prolint.core/src/org/prolint/core/LintRun.java
   trunk/org.prolint.core/src/org/prolint/core/StreamUtil.java
   trunk/org.prolint.core/src/org/prolint/core/TempMarker.hbm.xml
   trunk/org.prolint.core/src/org/prolint/core/TempMarker.java
   trunk/org.prolint.core/src/org/prolint/core/TempMarkerTable.java
   trunk/org.prolint.core/src/org/prolint/core/package.html
   trunk/org.prolint.core/src/org/prolint/core/tempmarker.cfg.xml
   trunk/org.prolint.core/src/org/prolint/eclipse/
   trunk/org.prolint.core/src/org/prolint/eclipse/ActionManager.java
   trunk/org.prolint.core/src/org/prolint/eclipse/ClearMarkersAction.java
   trunk/org.prolint.core/src/org/prolint/eclipse/LintAction.java
   trunk/org.prolint.core/src/org/prolint/eclipse/MarkerUtil.java
   trunk/org.prolint.core/src/org/prolint/eclipse/Plugin.java
   trunk/org.prolint.core/src/org/prolint/eclipse/package.html
   trunk/org.prolint.core/src/org/prolint/rules/
   trunk/org.prolint.core/src/org/prolint/rules/AbbrevSchemaNames.java
   trunk/org.prolint.core/src/org/prolint/rules/CuRule.java
   trunk/org.prolint.core/src/org/prolint/rules/NoEffect.java
   trunk/org.prolint.core/src/org/prolint/rules/NodeRule.java
   trunk/org.prolint.core/src/org/prolint/rules/Rule.java
   trunk/org.prolint.core/src/org/prolint/rules/package.html
   trunk/org.prolint.core/src/org/prolint/unittest/
   trunk/org.prolint.core/src/org/prolint/unittest/AbbrevNamesT.java
   trunk/org.prolint.core/src/org/prolint/unittest/AllLintTests.java
   trunk/org.prolint.core/src/org/prolint/unittest/NoEffectT.java
   trunk/org.prolint.core/src/org/prolint/unittest/TestProject.java
   trunk/org.prolint.core/src/org/prolint/unittest/package.html
   trunk/org.prolint.core/src/testdata/
   trunk/org.prolint.core/src/testdata/abbrevnames/
   trunk/org.prolint.core/src/testdata/abbrevnames/billto.p
   trunk/org.prolint.core/src/testdata/abbrevnames/customer.p
   trunk/org.prolint.core/src/testdata/abbrevnames/displaypostal.i
   trunk/org.prolint.core/src/testdata/abbrevnames/expect.txt
   trunk/org.prolint.core/src/testdata/junit_s2k/
   trunk/org.prolint.core/src/testdata/junit_s2k/progress.properties
   trunk/org.prolint.core/src/testdata/junit_s2k/proparse.properties
   trunk/org.prolint.core/src/testdata/junit_s2k/proparse.schema
   trunk/org.prolint.core/src/testdata/simpleunit/
   trunk/org.prolint.core/src/testdata/simpleunit/noeffect.expect
   trunk/org.prolint.core/src/testdata/simpleunit/noeffect.p
   trunk/org.prorefactor.core/META-INF/
   trunk/org.prorefactor.core/META-INF/MANIFEST.MF
   trunk/org.prorefactor.doc/META-INF/
   trunk/org.prorefactor.doc/META-INF/MANIFEST.MF
   trunk/org.prorefactor.javadoc/META-INF/
   trunk/org.prorefactor.javadoc/META-INF/MANIFEST.MF
   trunk/org.prorefactor.lib/META-INF/
   trunk/org.prorefactor.lib/META-INF/MANIFEST.MF
   trunk/org.prorefactor.lib/antlr/
   trunk/org.prorefactor.lib/antlr/LICENSE.txt
   trunk/org.prorefactor.lib/antlr/README.txt
   trunk/org.prorefactor.lib/antlr/antlr.jar
   trunk/org.prorefactor.lib/antlr/antlrsrc.zip
   trunk/org.prorefactor.lib/antlr/version.txt
   trunk/org.prorefactor.lib/junit/
   trunk/org.prorefactor.lib/junit/about.html
   trunk/org.prorefactor.lib/junit/junit.jar
   trunk/org.prorefactor.refactor/META-INF/
   trunk/org.prorefactor.refactor/META-INF/MANIFEST.MF
Removed:
   trunk/org.prorefactor.antlr/
   trunk/org.prorefactor.eclipse/build.xml
   trunk/org.prorefactor.refactor/build.xml
Modified:
   trunk/org.prorefactor.core/build.properties
   trunk/org.prorefactor.core/plugin.xml
   trunk/org.prorefactor.doc/build.properties
   trunk/org.prorefactor.doc/helpcontexts.xml
   trunk/org.prorefactor.doc/manual.xml
   trunk/org.prorefactor.doc/plugin.xml
   trunk/org.prorefactor.eclipse/META-INF/MANIFEST.MF
   trunk/org.prorefactor.eclipse/build.properties
   trunk/org.prorefactor.eclipse/plugin.xml
   trunk/org.prorefactor.eclipse/src/org/prorefactor/eclipse/actions/SubstituteAction.java
   trunk/org.prorefactor.eclipse/src/org/prorefactor/eclipse/wizards/RefactorDirectoryPage.java
   trunk/org.prorefactor.eclipse/src/org/prorefactor/eclipse/wizards/TextPage.java
   trunk/org.prorefactor.feature/feature.xml
   trunk/org.prorefactor.javadoc/build.properties
   trunk/org.prorefactor.javadoc/plugin.xml
   trunk/org.prorefactor.lib/.classpath
   trunk/org.prorefactor.lib/build.properties
   trunk/org.prorefactor.lib/plugin.xml
   trunk/org.prorefactor.refactor/.classpath
   trunk/org.prorefactor.refactor/build.properties
   trunk/org.prorefactor.refactor/plugin.xml
   trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/ReviewChangesDialog.java
   trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/util/Strings.java
   trunk/org.prorefactor.update/
   trunk/org.prorefactor.update/site.xml
Log:
Moved "org.prorefactor.antlr" project to just be a library in org.prorefactor.lib.
Added junit library to org.prorefactor.lib so that installing into a minimal Eclipse platform works.
Updated plugins to use new Eclipse 3.1 manifest formats.
Added org.prolint.core to this project for now. This seems easier, since it depends on ProRefactor anyway.
Updated ProRefactor version number to 1.3.0. Updated Prolint/Eclipse version number to 0.1.3.
Added a wizard and some better explanations in the UI for the SUBSTITUTE refactor.
A couple of minor updates for Eclipse 3.1 API changes.
Added a help context option to my wizard TextPage class.
Added setLayout to the shell in the ReviewChangesDialog so that it displays properly with new SWT API.



Property changes on: trunk/org.prolint.core
___________________________________________________________________
Name: svn:ignore
   + bin


Added: trunk/org.prolint.core/.classpath
===================================================================
--- trunk/org.prolint.core/.classpath	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/.classpath	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry exported="true" kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
+	<classpathentry kind="lib" path="hibernate2.jar"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Added: trunk/org.prolint.core/.project
===================================================================
--- trunk/org.prolint.core/.project	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/.project	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>org.prolint.core</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

Added: trunk/org.prolint.core/META-INF/MANIFEST.MF
===================================================================
--- trunk/org.prolint.core/META-INF/MANIFEST.MF	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/META-INF/MANIFEST.MF	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,21 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Prolint/Eclipse Core
+Bundle-SymbolicName: org.prolint; singleton:=true
+Bundle-Version: 0.1.3
+Bundle-ClassPath: core.jar,hibernate2.jar
+Bundle-Activator: org.prolint.eclipse.Plugin
+Bundle-Vendor: Prolint.org
+Bundle-Localization: plugin
+Require-Bundle: org.eclipse.core.resources;visibility:=reexport,
+ org.eclipse.ui;visibility:=reexport,
+ org.eclipse.core.runtime;visibility:=reexport,
+ org.prorefactor.lib;visibility:=reexport,
+ org.prorefactor.core;visibility:=reexport,
+ org.prorefactor.refactor;visibility:=reexport,
+ org.prorefactor.eclipse;visibility:=reexport
+Eclipse-AutoStart: true
+Export-Package: org.prolint.core,
+ org.prolint.eclipse,
+ org.prolint.rules,
+ org.prolint.unittest

Added: trunk/org.prolint.core/build.properties
===================================================================
--- trunk/org.prolint.core/build.properties	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/build.properties	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,15 @@
+source.core.jar = src/
+output.core.jar = bin/
+bin.includes = plugin.xml,\
+               core.jar,\
+               hibernate2.jar,\
+               .classpath,\
+               .project,\
+               META-INF/,\
+               build.properties
+src.includes = hibernate2.jar,\
+               .classpath,\
+               .project,\
+               META-INF/,\
+               build.properties,\
+               plugin.xml

Added: trunk/org.prolint.core/hibernate2.jar
===================================================================
(Binary files differ)


Property changes on: trunk/org.prolint.core/hibernate2.jar
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/org.prolint.core/plugin.xml
===================================================================
--- trunk/org.prolint.core/plugin.xml	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/plugin.xml	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?eclipse version="3.0"?>
+<plugin>
+
+   <extension
+         id="org.prolint.popup"
+         name="Prolint Popup Menus"
+         point="org.eclipse.ui.popupMenus">
+      <viewerContribution
+            targetID="org.eclipse.ui.views.ResourceNavigator"
+            id="org.prolint.popup.navigator">
+         <menu
+               label="Pro&amp;lint"
+               path="additions"
+               id="org.prolint.popup.navigator.menu1">
+            <separator name="separator1"/>
+         </menu>
+         <action
+               label="&amp;Clear Prolint Markers"
+               class="org.prolint.eclipse.ClearMarkersAction"
+               menubarPath="org.prolint.popup.navigator.menu1/separator1"
+               id="org.prolint.popup.navigator.clearMarkers"/>
+         <action
+               label="&amp;Lint"
+               class="org.prolint.eclipse.LintAction"
+               menubarPath="org.prolint.popup.navigator.menu1/separator1"
+               id="org.prolint.popup.navigator.lint"/>
+      </viewerContribution>
+   </extension>
+   <extension
+         id="prolintmarker"
+         name="Prolint Problem Marker"
+         point="org.eclipse.core.resources.markers">
+      <super type="org.eclipse.core.resources.problemmarker"/>
+      <persistent value="true"/>
+      <attribute name="prolintmarker.column"/>
+      <attribute name="prolintmarker.ruleid"/>
+      <super type="org.eclipse.core.resources.textmarker"/>
+   </extension>
+
+</plugin>

Added: trunk/org.prolint.core/src/log4j.properties
===================================================================
--- trunk/org.prolint.core/src/log4j.properties	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/log4j.properties	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,36 @@
+### direct log messages to stdout ###
+#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
+#log4j.appender.stdout.Target=System.out
+#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
+#log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n
+
+### direct messages to file hibernate.log ###
+log4j.appender.file=org.apache.log4j.FileAppender
+log4j.appender.file.File=prolint/hibernate.log
+log4j.appender.file.layout=org.apache.log4j.PatternLayout
+log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n
+
+### set log levels - for more verbose logging change 'info' to 'debug' ###
+
+log4j.rootLogger=warn, file
+
+log4j.logger.net.sf.hibernate=info
+
+### log just the SQL
+#log4j.logger.net.sf.hibernate.SQL=debug
+
+### log JDBC bind parameters ###
+log4j.logger.net.sf.hibernate.type=info
+
+### log schema export/update ###
+log4j.logger.net.sf.hibernate.tool.hbm2ddl=debug
+
+### log cache activity ###
+#log4j.logger.net.sf.hibernate.cache=debug
+
+### log jdbc resource acquisition
+#log4j.logger.net.sf.hibernate.impl.BatcherImpl=debug
+
+### enable the following line if you want to track down connection ###
+### leakages when using DriverManagerConnectionProvider ###
+#log4j.logger.net.sf.hibernate.connection.DriverManagerConnectionProvider=trace

Added: trunk/org.prolint.core/src/org/prolint/core/FileStuff.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/core/FileStuff.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/core/FileStuff.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,74 @@
+/* Created Mar 18, 2005
+ *
+ * Authors: John Green
+ *
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *
+ * Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.core;
+
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileReader;
+import java.io.IOException;
+
+import org.eclipse.core.resources.IFile;
+import org.prorefactor.eclipse.ResourceUtil;
+
+/** Long and short term extensions to org.prorefactor.refactor.FileStuff.
+ * Some of the methods added here may be migrated to ProRefactor. 
+ */
+public class FileStuff extends org.prorefactor.refactor.FileStuff {
+	
+	/** Get the character offset of the first character of desired line (zero relative).
+	 * For example, for line 1, this returns 0.
+	 * Proparse does not work with Mac style line termination, and neither does this.
+	 * @throws IOException if the file cannot be read or if the requested line number
+	 * does not exist in the file.
+	 * NOTE: If Proparse adds support for charpos (character offset) then we should
+	 * be able to stop using this (rather expensive) operation entirely.
+	 */
+	public static int calculateLineOffset(File file, int line) throws IOException {
+		if (line==1) return 0;
+		int currPos = -1;
+		int currLine = 1;
+		BufferedReader buff = new BufferedReader(new FileReader(file));
+		int c;
+		while ((c = buff.read()) != -1) {
+			currPos++;
+			if (c == '\n') {
+				currLine++;
+				if (currLine==line) {
+					buff.close();
+					return currPos + 1;
+				}
+			}
+		}
+		buff.close();
+		throw new IOException("No such line: " + line + " in file: " + file.getPath());
+	}
+
+	/** Find an IFile for a string filename, or null if not found.
+	 * Maybe later: Remove once it's been added to org.prorefactor.eclipse.ResourceUtil.
+	 */
+	public static IFile getIFileRelaxed(String filename) {
+		File file = FileStuff.findFile(filename);
+		if (file==null) return null;
+		return ResourceUtil.getIFile((FileStuff.fullpath(file)));
+	}
+
+}

Added: trunk/org.prolint.core/src/org/prolint/core/LintException.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/core/LintException.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/core/LintException.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,43 @@
+/* Created on Jan 25, 2005
+ * Authors: John Green
+ *
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *
+ * Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.core;
+
+
+/** Prolint exception */
+public class LintException extends Exception {
+
+	public LintException() {
+		super();
+	}
+
+	public LintException(String message) {
+		super(message);
+	}
+
+	public LintException(Throwable cause) {
+		super(cause);
+	}
+
+	public LintException(String message, Throwable cause) {
+		super(message, cause);
+	}
+
+}

Added: trunk/org.prolint.core/src/org/prolint/core/LintRun.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/core/LintRun.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/core/LintRun.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,274 @@
+/* Created on Jan 25, 2005
+ * Authors: John Green
+ *
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *    Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *    Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *    You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.core;
+
+import java.io.File;
+import java.io.IOException;
+import java.io.Writer;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Iterator;
+
+import net.sf.hibernate.HibernateException;
+
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.core.runtime.CoreException;
+import org.prolint.eclipse.ClearMarkersAction;
+import org.prolint.eclipse.Plugin;
+import org.prolint.rules.AbbrevSchemaNames;
+import org.prolint.rules.CuRule;
+import org.prolint.rules.NoEffect;
+import org.prolint.rules.NodeRule;
+import org.prolint.rules.Rule;
+import org.prorefactor.core.JPNode;
+import org.prorefactor.refactor.RefactorException;
+import org.prorefactor.refactor.source.CompileUnit;
+
+import com.joanju.ProparseLdr;
+
+
+/** This class stores the configuration for a lint run, and it contains
+ * the methods for launching lint against a given compile unit.
+ * The lint run keeps track of all files visited for all compile units.
+ * The first time a file is visited (think of include files), it
+ * is cleared of any old Prolint markers.
+ */
+public class LintRun {
+
+	public LintRun() throws HibernateException {
+		buildCuRulesList();
+		buildNodeRulesList();
+	}
+	
+	private int fileIndexSequence = 1;
+	private int ruleIndexSequence = 1;
+	private ArrayList cuRulesList = new ArrayList();
+	private HashMap indexToResourceMap = new HashMap();
+	private HashMap nodeRulesMap = new HashMap();
+	private HashMap ruleIndexMap = new HashMap();
+	private HashMap resourceToIndexMap = new HashMap();
+	private IFile [] currentUnitIFiles = null;
+	private TempMarkerTable tempMarkerTable = new TempMarkerTable();
+
+
+	
+	private void addCuRule(CuRule rule) {
+		if (rule==null) return;
+		indexRule(rule);
+		cuRulesList.add(rule);
+	}
+
+	/* Add a rule to the map of node types and node rules.
+	 * Note that <Rule>.create() will return null if the rule
+	 * is not active in the current Prolint configuration.
+	 */
+	private void addNodeRule(NodeRule rule) {
+		if (rule==null) return;
+		indexRule(rule);
+		Integer [] watchedTypes = rule.getWatchedNodeTypes();
+		for (int i = 0; i < watchedTypes.length; i++) {
+			Integer nodeType = watchedTypes[i];
+			ArrayList rulesArray = (ArrayList) nodeRulesMap.get(nodeType);
+			if (rulesArray==null) {
+				rulesArray = new ArrayList();
+				nodeRulesMap.put(nodeType, rulesArray);
+			}
+			rulesArray.add(rule);
+		}
+	}
+
+	/* Build the list of rules to launch against the full compile unit.
+	 * Later: Pull creation of rules lists out to separate classes, make configurable.
+	 */
+	private void buildCuRulesList() {
+		// example: addCuRule(new ...);
+	}
+	
+	/* Build the list of rules to launch against specific node types.
+	 * Later: Pull creation of rules lists out to separate classes, make configurable.
+	 * See Notes[1] at the bottom of this file for NodeRules implementation notes.
+	 */
+	private void buildNodeRulesList() {
+		addNodeRule(new AbbrevSchemaNames());
+		addNodeRule(new NoEffect());
+		// add more rules here ...
+	}
+
+	/* Run all CU rules for a given CU. */
+	private void checkCuRules(CompileUnit cu) throws HibernateException {
+		for (Iterator it = cuRulesList.iterator(); it.hasNext();) {
+			CuRule irule = (CuRule) it.next();
+			tempMarkerTable.storeMarkers(irule.run(cu));
+		}
+	}
+
+	/* Check an individual node's type for lint rules mapped to it. */
+	private void checkNodeRules(JPNode node) throws HibernateException {
+		ArrayList rulesList = (ArrayList) nodeRulesMap.get(new Integer(node.getType()));
+		if (rulesList==null) return;
+		for (Iterator it = rulesList.iterator(); it.hasNext();) {
+			NodeRule rule = (NodeRule) it.next();
+			tempMarkerTable.storeMarkers(rule.run(node));
+		}
+	}
+	
+	/* Build an index of all source files for the compile unit, and clear old Prolint problem
+	 * markers from those.
+	 * Returns a positional array of IFile objects, so that the IFile for a Proparse
+	 * file index can be retrieved quickly.
+	 */
+	private void clearAndIndexFiles(CompileUnit cu) {
+		ArrayList resourceList = new ArrayList();
+		String [] filenameArray = ProparseLdr.getInstance().getFilenameArray();
+		for (int i = 0; i < filenameArray.length; i++) {
+			String name = filenameArray[i];
+			IFile ifile = null;
+			if (name.length() > 0) ifile = FileStuff.getIFileRelaxed(name);
+			resourceList.add(ifile);
+			if (ifile==null) continue;
+			if (resourceToIndexMap.containsKey(ifile)) continue;
+			ClearMarkersAction.clear(ifile);
+			Integer index = new Integer(fileIndexSequence++);
+			resourceToIndexMap.put(ifile, index);
+			indexToResourceMap.put(index, ifile);
+		}
+		currentUnitIFiles = new IFile[resourceList.size()];
+		resourceList.toArray(currentUnitIFiles);
+	}
+	
+	/** Get the LintRun file index for the compile unit file index.
+	 * IMPORTANT: Check the return value for -1.
+	 * @return -1 if the IFile isn't available.
+	 */
+	public int getLintRunFileIndex(int cuFileIndex) {
+		IFile ifile = currentUnitIFiles[cuFileIndex];
+		if (ifile==null) return -1;
+		Integer retIndex = (Integer) resourceToIndexMap.get(ifile);
+		if (retIndex==null) return -1;
+		return retIndex.intValue();
+	}
+
+	private void indexRule(Rule rule) {
+		Integer index = new Integer(ruleIndexSequence++);
+		ruleIndexMap.put(index, rule);
+		rule.setLintRunIndex(index);
+		rule.setLintRun(this);
+	}
+
+	/** Launch lint against a single compile unit.
+	 * @param file The File object to lint. Must be a compile unit.
+	 * @param relPath A string representation of the file's relative path, for display purposes.
+	 * @throws LintException If any part of Prolint fails - no need to halt.
+	 * @throws RefactorException If the parse or tree-parse fails - no need to halt.
+	 * @throws HibernateException Should halt processing.
+	 */
+	public void lint(File file, String relPath)
+			throws LintException, RefactorException, HibernateException {
+		CompileUnit cu = new CompileUnit(file, null, CompileUnit.DEFAULT);
+		cu.treeParser01();
+		clearAndIndexFiles(cu);
+		// We'll run the "whole CU" rules first.
+		checkCuRules(cu);
+		// Now walk the syntax tree, checking for "one node" rules to call.
+		treeWalk(cu.getTopNode());
+	}
+	
+	/** Write a log of this run's TempMarkers to a stream writer.
+	 * @throws IOException
+	 * @see #toString(TempMarker) 
+	 */
+	public void logTempMarkers(Writer writer) throws IOException, HibernateException {
+		TempMarkerTable.QuerySession querySession = tempMarkerTable.getAll();
+		for (Iterator it = querySession.iterator(); it.hasNext();) {
+			writer.write(toString((TempMarker)it.next()));
+			writer.write(FileStuff.LINESEP);
+		}
+		querySession.close();
+	}
+
+	/** Get a String representation of a TempMarker.
+	 * All on one line - does not contain any line breaks.
+	 * Format is: rule-name file line column message 
+	 * @throws CoreException
+	 */
+	public String toString(TempMarker tempMarker) {
+		IFile ifile = (IFile) indexToResourceMap.get(new Integer(tempMarker.getFileIndex()));
+		Rule rule = (Rule) ruleIndexMap.get(new Integer(tempMarker.getRuleIndex()));
+		StringBuffer buff = new StringBuffer()
+			.append(rule.getName())
+			.append(" ")
+			.append(ifile.getProjectRelativePath())
+			.append(" ")
+			.append(tempMarker.getLine())
+			.append(" ")
+			.append(tempMarker.getColumn())
+			.append(" ")
+			.append(tempMarker.getMessage())
+			;
+		return buff.toString();
+	}
+	
+	/* Walk the syntax tree, checking each node type for rules to run against it. */
+	private void treeWalk(JPNode node) throws HibernateException {
+		if (node==null) return;
+		checkNodeRules(node);
+		// Depth-first
+		treeWalk(node.firstChild());
+		treeWalk(node.nextSibling());
+	}
+
+	/** Write all of the accumulated markers. 
+	 * @throws HibernateException
+	 * @throws CoreException*/
+	public void writeAllMarkers() throws HibernateException, CoreException, IOException {
+		TempMarkerTable.QuerySession querySession = tempMarkerTable.getAll();
+		for (Iterator it = querySession.iterator(); it.hasNext();) {
+			TempMarker tempMarker = (TempMarker) it.next();
+			IFile ifile = (IFile) indexToResourceMap.get(new Integer(tempMarker.getFileIndex()));
+			/* Mayber later: If support for char offset is added to Proparse, then we could
+			 * save ourselves a very expensive operation here by getting the charpos from
+			 * the Proparse token.
+			 */
+			int charStart =
+				FileStuff.calculateLineOffset(ifile.getLocation().toFile(), tempMarker.getLine())
+				+ tempMarker.getColumn() - 1;
+			Rule rule = (Rule) ruleIndexMap.get(new Integer(tempMarker.getRuleIndex()));
+			IMarker imarker = ifile.createMarker(Plugin.PROLINT_MARKER_ID);
+			imarker.setAttribute(IMarker.LINE_NUMBER, tempMarker.getLine());
+			imarker.setAttribute(IMarker.CHAR_START, charStart);
+			imarker.setAttribute(IMarker.CHAR_END, charStart + tempMarker.getNumchars() + 1);
+			imarker.setAttribute(IMarker.MESSAGE, tempMarker.getMessage());
+			imarker.setAttribute(Plugin.PROLINT_MARKER_COLUMN, tempMarker.getColumn());
+			imarker.setAttribute(Plugin.PROLINT_MARKER_RULEID, rule.getName());
+		}
+		querySession.close();
+	}
+
+}
+
+
+/*
+ * Notes[1]: Since there might be many (say, 20+) rules that need to be run for specific
+ * node types (rather than for the entier CU), I figured that it would be most efficient
+ * to look up a node's type in a HashMap for rules to run against it. One alternative
+ * would be to call twenty rules for each node, so each rule could check on the node
+ * for itself. Another alternative would be to walk the entire syntax tree 20 times,
+ * once for each rule.
+ * --john at joanju.com
+ */

Added: trunk/org.prolint.core/src/org/prolint/core/StreamUtil.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/core/StreamUtil.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/core/StreamUtil.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,49 @@
+/* Created Mar 24, 2005
+ * Authors: John Green
+ *
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *    Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *    Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *    You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.core;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+
+/** General purpose utilities for working with Streams. */
+public class StreamUtil {
+
+	/** Line by line comparison of two input streams.
+	 * Returns zero if the two streams are the same, or else the line number of the
+	 * first difference found. First line is line 1. If different line terminators
+	 * (ex: unix vs. DOS) are present, that difference will not be reported.
+	 * Number of lines in the two streams must be equal, otherwise last line counted
+	 * is reported.
+	 */
+	public static int lineOfDiff(InputStream stream1, InputStream stream2) throws IOException {
+		BufferedReader r1 = new BufferedReader(new InputStreamReader(stream1));
+		BufferedReader r2 = new BufferedReader(new InputStreamReader(stream2));
+		int line = 1;
+		String string1;
+		while ( (string1 = r1.readLine()) != null) {
+			if (! string1.equals(r2.readLine())) return line;
+			line++;
+		}
+		// Check that stream2 does not have more lines than stream1
+		if (r2.readLine()!=null) return line;
+		return 0;
+	}
+
+}

Added: trunk/org.prolint.core/src/org/prolint/core/TempMarker.hbm.xml
===================================================================
--- trunk/org.prolint.core/src/org/prolint/core/TempMarker.hbm.xml	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/core/TempMarker.hbm.xml	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,32 @@
+<?xml version="1.0"?>
+
+<!DOCTYPE hibernate-mapping PUBLIC 
+	"-//Hibernate/Hibernate Mapping DTD 2.0//EN"
+	"http://hibernate.sourceforge.net/hibernate-mapping-2.0.dtd">
+
+<hibernate-mapping >
+
+	<class name="org.prolint.core.TempMarker" table="TempMarker">
+
+		<id name="id" column="id" type="long">
+			<generator class="native"/>
+		</id>
+
+		<property name="fileIndex" type="int">
+			<column name="fileIndex" index="tmk1" unique-key="tmk1"/>
+		</property>
+		<property name="line" type="int">
+			<column name="line" index="tmk1" unique-key="tmk1" />
+		</property>
+		<property name="column" type="int">
+			<column name="column" index="tmk1" unique-key="tmk1" />
+		</property>
+		<property name="ruleIndex" type="int">
+			<column name="ruleIndex" index="tmk1" unique-key="tmk1" />
+		</property>
+		<property name="message" type="string" column="message" />
+		<property name="numchars" type="int" column="numchars" />
+		
+	</class>
+	
+</hibernate-mapping>

Added: trunk/org.prolint.core/src/org/prolint/core/TempMarker.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/core/TempMarker.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/core/TempMarker.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,77 @@
+/*
+ * Feb 18, 2005
+ *
+ */
+package org.prolint.core;
+
+/**
+ * Temporarily persistent objects which are used to avoid redundant markers from
+ * a lint run.
+ * <p>
+ * We keep these in a database on disk, rather than just in Java memory, because
+ * of the potential for any one large lint run to generate an enormous number of
+ * problem markers.
+ * </p>
+ * <p>
+ * We don't just use Eclipse's Marker interface to avoid duplicate markers,
+ * because there is no fast, indexed method for finding an existing marker for
+ * one resource, line, column, and problem type.
+ * <p>
+ * We have to consider duplicate markers, because a problem in one include file
+ * will be found when linting each of the compile units which reference it.
+ * </p>
+ * 
+ * 
+ */
+public class TempMarker {
+
+	public TempMarker() { }
+
+	private long id;
+	private int fileIndex;
+	private int line;
+	private int column;
+	private int numchars;
+	private int ruleIndex;
+	private String message;
+
+	public int getColumn() { return column; }
+	public int getFileIndex() { return fileIndex; }
+	public int getLine() { return line; }
+	/** Starting at the marker line/column, how many characters to highlight? */
+	public int getNumchars() { return numchars; }
+	public int getRuleIndex() { return ruleIndex; }
+	/** The record ID for database persistence. */
+	public long getId() { return id; }
+	public String getMessage() { return message; }
+
+	public TempMarker setColumn(int column) { this.column = column; return this;}
+	public TempMarker setFileIndex(int file) { this.fileIndex = file; return this;}
+	public TempMarker setLine(int line) { this.line = line; return this;}
+	/** Starting at the marker line/column, how many characters to highlight? */
+	public TempMarker setNumchars(int numchars) { this.numchars = numchars; return this; }
+	public TempMarker setRuleIndex(int problem) { this.ruleIndex = problem; return this;}
+	/** The record ID for database persistence. */
+	private TempMarker setId(long recordID) { this.id = recordID; return this;}
+	public TempMarker setMessage(String message) { this.message = message; return this; }
+	
+	public String toString() {
+		return "ID " + id + " " + fileIndex + ":" + line + ":" + column + " " + ruleIndex + " " + message;
+	}
+	
+	public boolean equals(Object obj) {
+		if (obj.getClass()!=TempMarker.class) return false;
+		TempMarker other = (TempMarker) obj;
+		return
+			(	this.fileIndex == other.fileIndex
+			&&	this.line == other.line
+			&&	this.column == other.column
+			&&	this.ruleIndex == other.ruleIndex
+			);
+	}
+	
+	public int hashCode() {
+		return (fileIndex * 1000 + line);
+	}
+
+}
\ No newline at end of file

Added: trunk/org.prolint.core/src/org/prolint/core/TempMarkerTable.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/core/TempMarkerTable.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/core/TempMarkerTable.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,91 @@
+/* Created on Mar 17, 2005
+ * Authors: John Green
+ *
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *
+ * Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.core;
+
+import java.io.File;
+import java.util.Iterator;
+import java.util.List;
+
+import net.sf.hibernate.HibernateException;
+import net.sf.hibernate.Session;
+import net.sf.hibernate.SessionFactory;
+import net.sf.hibernate.Transaction;
+import net.sf.hibernate.cfg.Configuration;
+import net.sf.hibernate.exception.GenericJDBCException;
+import net.sf.hibernate.tool.hbm2ddl.SchemaExport;
+
+
+/** A temp-table for storing all TempMarker objects until
+ * we are ready to create Eclipse markers for them all.
+ * See TempMarker class notes for rationale.
+ * This table of TempMarker objects is only used by LintRun,
+ * and it is not intended to allow for multiple concurrent instances.
+ */
+class TempMarkerTable {
+
+	public TempMarkerTable() throws HibernateException {
+		File dbDirFile = new File(DBDIR);
+		dbDirFile.mkdirs();
+		Configuration cfg = new Configuration();
+		cfg.configure(TempMarkerTable.class.getClassLoader().getResource(CONFIGFILE));
+		SchemaExport schemaExport = new SchemaExport(cfg);
+		schemaExport.drop(false, true);
+		schemaExport.create(false, true);
+		sessionFactory = cfg.buildSessionFactory();
+	}
+
+	private static String CONFIGFILE = "org/prolint/core/tempmarker.cfg.xml";
+	private static String DBDIR = "./prolint/tempmarkerdb/";
+	private SessionFactory sessionFactory;
+
+	class QuerySession {
+		QuerySession() throws HibernateException { }
+		private Session session = sessionFactory.openSession();
+		private Iterator iterator;
+		Iterator iterator() { return iterator; }
+		void close() throws HibernateException { session.close(); }
+	}
+	
+	QuerySession getAll() throws HibernateException {
+		QuerySession it = new QuerySession();
+		it.iterator = it.session.iterate("from TempMarker");
+		return it;
+	}
+
+	/** Store persistently any non-duplicate markers from the input list. */
+	void storeMarkers(List markerList) throws HibernateException {
+		if (markerList==null || markerList.size()==0) return;
+		Session session = sessionFactory.openSession();
+		for (Iterator it = markerList.iterator(); it.hasNext();) {
+			Transaction transaction = session.beginTransaction();
+			TempMarker marker = (TempMarker) it.next();
+			try {
+				session.save(marker);
+				transaction.commit();
+			} catch (GenericJDBCException e) {
+				// Might not be unique. We don't care.
+				transaction.rollback();
+			}
+		}
+		session.close();
+	}
+	
+}

Added: trunk/org.prolint.core/src/org/prolint/core/package.html
===================================================================
--- trunk/org.prolint.core/src/org/prolint/core/package.html	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/core/package.html	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,37 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
+<html>
+<head>
+<!--
+    Authors: John Green
+
+    Copyright (C) 2005 Prolint.org Contributors
+
+    This file is part of Prolint.
+
+    Prolint is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) any later version.
+
+    Prolint is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with Prolint; if not, write to the Free Software
+    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+-->
+</head>
+<body bgcolor="white">
+
+Provides Prolint core services.
+
+<h2>Package Specification</h2>
+
+<h2>Related Documentation</h2>
+
+<!-- Put @see and @since tags down here. -->
+
+</body>
+</html>

Added: trunk/org.prolint.core/src/org/prolint/core/tempmarker.cfg.xml
===================================================================
--- trunk/org.prolint.core/src/org/prolint/core/tempmarker.cfg.xml	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/core/tempmarker.cfg.xml	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE hibernate-configuration PUBLIC "-//Hibernate/Hibernate Configuration DTD 2.0//EN"
+   "http://hibernate.sourceforge.net/hibernate-configuration-2.0.dtd">
+<hibernate-configuration>
+	<session-factory>
+
+		<!-- properties -->
+		<property name="show_sql">false</property>
+		<property name="connection.driver_class">org.hsqldb.jdbcDriver</property>
+		<property name="connection.url">jdbc:hsqldb:file:./prolint/tempmarkerdb/tempmarker</property>
+		<property name="connection.username">sa</property>
+		<property name="dialect">net.sf.hibernate.dialect.HSQLDialect</property>
+
+		<!-- mapping files -->
+		<mapping resource="org/prolint/core/TempMarker.hbm.xml"/>
+
+	</session-factory>
+</hibernate-configuration>

Added: trunk/org.prolint.core/src/org/prolint/eclipse/ActionManager.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/eclipse/ActionManager.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/eclipse/ActionManager.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,47 @@
+/*
+ * Created on Jan 21, 2005
+ * Authors: John Green
+ * 
+ * Copyright (C) 2005 Prolint.org Contributors
+ *
+ * This file is part of Prolint.
+ *
+ * Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.eclipse;
+
+import org.eclipse.ui.IWorkbenchWindow;
+import org.prorefactor.eclipse.actions.IProRefactorAction;
+
+
+/** This subclass of ProRefactor's ActionManager is intended to serve
+ * as an interface to ProRefactor's class, to protect Prolint from
+ * unwanted changes, to allow Prolint to change how some of the functions
+ * work, etc.
+ * ProRefactor's ActionManager class is responsible for finding all compile
+ * units in the selected resources, setting up the "busy" state, launching
+ * the caller's processFile() method for each compile unit, showing  a
+ * progress meter, writing status and errors to the console, etc.
+ * Currently, only *.p and *.w files are considered to be "compile units".
+ * This may need to change, of course.
+ */
+public class ActionManager extends
+		org.prorefactor.eclipse.actions.ActionManager {
+
+	public ActionManager(IWorkbenchWindow window, IProRefactorAction action) {
+		super(window, action);
+	}
+
+}

Added: trunk/org.prolint.core/src/org/prolint/eclipse/ClearMarkersAction.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/eclipse/ClearMarkersAction.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/eclipse/ClearMarkersAction.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,87 @@
+/*
+ * Created on Jan 21, 2005
+ *
+ * Authors: John Green
+ *
+ * Copyright (C) 2005 Prolint.org Contributors
+ *
+ * This file is part of Prolint.
+ *
+ * Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.eclipse;
+
+import java.util.Iterator;
+
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.jface.action.IAction;
+import org.eclipse.jface.viewers.ISelection;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.ui.IViewActionDelegate;
+import org.eclipse.ui.IViewPart;
+import org.prolint.core.FileStuff;
+
+
+/** This class is responsible for clearing Prolint problem markers
+ * from the selected resources and the children of those resources.
+ */
+public class ClearMarkersAction implements IViewActionDelegate {
+
+	private ISelection currISelection;
+	
+
+	/** Clear Prolint markers for a relative or full path name.
+	 * Is recursive for directory names.
+	 */
+	public static void clear(String filename) {
+		IFile ifile = FileStuff.getIFileRelaxed(filename);
+		if (ifile==null) return;
+		clear(ifile);
+	}
+
+	/** Clear Prolint markers for a given resource.
+	 * Is recursive for directory names.
+	 */
+	public static void clear(IResource resource) {
+		try {
+			resource.deleteMarkers(Plugin.PROLINT_MARKER_ID, true, IResource.DEPTH_INFINITE);
+		} catch (CoreException e) {
+			Plugin.errorDialog(e.getMessage());
+			Plugin.log(e);
+		}
+	}
+
+	public void run(IAction action) {
+		if (currISelection==null) return;
+		IStructuredSelection selection = (IStructuredSelection) currISelection;
+		for (Iterator it = selection.iterator(); it.hasNext();) {
+			Object next = it.next();
+			if (!(next instanceof IResource)) continue;
+			IResource resource = (IResource)next;
+			clear(resource);
+		}
+	}
+
+
+	public void selectionChanged(IAction action, ISelection iselection) {
+		if (iselection instanceof IStructuredSelection) currISelection = iselection;
+	}
+
+	
+	public void init(IViewPart view) {}
+
+}

Added: trunk/org.prolint.core/src/org/prolint/eclipse/LintAction.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/eclipse/LintAction.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/eclipse/LintAction.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,110 @@
+/* Created on Jan 21, 2005
+ * Authors: John Green
+ *
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *
+ * Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.eclipse;
+
+import net.sf.hibernate.HibernateException;
+
+import org.eclipse.core.resources.IFile;
+import org.eclipse.jface.action.IAction;
+import org.eclipse.jface.viewers.ISelection;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.ui.IViewActionDelegate;
+import org.eclipse.ui.IViewPart;
+import org.eclipse.ui.IWorkbenchWindow;
+import org.prolint.core.LintException;
+import org.prolint.core.LintRun;
+import org.prorefactor.eclipse.actions.IProRefactorAction;
+import org.prorefactor.eclipse.actions.RefactorResult;
+import org.prorefactor.refactor.RefactorException;
+
+			
+/** This class is responsible for launching Prolint against the selected
+ * resources, and the children of those resources.
+ */
+public class LintAction implements IViewActionDelegate, IProRefactorAction {
+
+	private boolean errors = false;
+	private ActionManager manager = null;
+	private ISelection currISelection = null;
+	private IWorkbenchWindow window;
+	private LintRun lintRun;
+
+	public LintAction() { }
+
+	public void init(IViewPart view) {
+		window = view.getSite().getWorkbenchWindow();
+	}
+	
+	public RefactorResult processFile(int topNode) {
+		manager.console(" lint ");
+		RefactorResult ret = new RefactorResult();
+		IFile iFile = (IFile) manager.getCurrResource();
+		Exception logException = null;
+		try {
+			lintRun.lint(manager.getCurrFile(), iFile.getProjectRelativePath().toString());
+		} catch (LintException e) {
+			logException = e;
+		} catch (RefactorException e) {
+			logException = e;
+		} catch (HibernateException e) {
+			logException = e;
+			ret.exception = e; // causes processing to halt
+		}
+		if (logException!=null) {
+			Plugin.log(logException);
+			ret.message = logException.getMessage();
+			errors = true;
+		}
+		return ret;
+	}
+
+	public String processTargetSet() {
+		return null; // not used
+	}
+
+	public void run(IAction action) {
+		errors = false;
+		// manager.setup *first*, because it deals with errors from loading parser, etc.
+		manager = new ActionManager(window, this);
+		if (manager.setup(currISelection) < 1) return;
+		// We leave the parsing up to the LintRun object.
+		manager.doTheParse = false;
+		try {
+			lintRun = new LintRun();
+			manager.doRun();
+			lintRun.writeAllMarkers();
+		} catch (Exception e) {
+			// Creation of the LintRun object sets up a temp-table, which we
+			// could potentially get a HibernateException from.
+			Plugin.log(e);
+			if (e.getMessage()!=null) manager.console(e.getMessage());
+		}
+		if (errors) {
+			manager.reportError("There were errors. See the Console or the Error Log for details.");
+			return;
+		}
+	} // run
+
+	public void selectionChanged(IAction action, ISelection iselection) {
+		if (iselection instanceof IStructuredSelection) currISelection = iselection;
+	}
+
+}

Added: trunk/org.prolint.core/src/org/prolint/eclipse/MarkerUtil.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/eclipse/MarkerUtil.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/eclipse/MarkerUtil.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,65 @@
+/* Created Mar 23, 2005
+ * Authors: John Green
+ *
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *    Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *    Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *    You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.eclipse;
+
+import java.io.IOException;
+import java.io.Writer;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.CoreException;
+import org.prolint.core.FileStuff;
+
+/** Utilities for working with "Prolint Problem" Eclipse markers. */ 
+public class MarkerUtil {
+	
+	/** Write a log of Prolint markers to a stream writer.
+	 * @throws CoreException
+	 * @throws IOException
+	 * @see #toString(IMarker) 
+	 */
+	public static void writeMarkers(IResource resource, Writer writer)
+			throws IOException, CoreException {
+		IMarker [] markers = resource.findMarkers(Plugin.PROLINT_MARKER_ID, true, IResource.DEPTH_INFINITE);
+		for (int i = 0; i < markers.length; i++) {
+			writer.write(toString(markers[i]));
+			writer.write(FileStuff.LINESEP);
+		}
+	}
+
+	/** Get a String representation of a Prolint marker.
+	 * All on one line - does not contain any line breaks.
+	 * Format is: rule-name file line column message 
+	 * @throws CoreException
+	 */
+	public static String toString(IMarker marker) throws CoreException {
+		StringBuffer buff = new StringBuffer()
+			.append(marker.getAttribute(Plugin.PROLINT_MARKER_RULEID))
+			.append(" ")
+			.append(marker.getResource().getProjectRelativePath())
+			.append(" ")
+			.append(marker.getAttribute(IMarker.LINE_NUMBER))
+			.append(" ")
+			.append(marker.getAttribute(Plugin.PROLINT_MARKER_COLUMN))
+			.append(" ")
+			.append(marker.getAttribute(IMarker.MESSAGE))
+			;
+		return buff.toString();
+	}
+	
+}

Added: trunk/org.prolint.core/src/org/prolint/eclipse/Plugin.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/eclipse/Plugin.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/eclipse/Plugin.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,146 @@
+/* 
+ * Authors: John Green
+ *
+ * Copyright (C) 2005 Prolint.org Contributors
+ *
+ * This file is part of Prolint.
+ *
+ * Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+ 
+
+package org.prolint.eclipse;
+
+import java.io.File;
+import java.util.MissingResourceException;
+import java.util.ResourceBundle;
+
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.jface.dialogs.MessageDialog;
+import org.eclipse.ui.IWorkbenchPage;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.plugin.AbstractUIPlugin;
+import org.osgi.framework.BundleContext;
+
+/**
+ * The main plugin class to be used in the desktop.
+ */
+public class Plugin extends AbstractUIPlugin {
+
+	//The shared instance.
+	private static Plugin plugin;
+	//Resource bundle.
+	private ResourceBundle resourceBundle;
+
+	// What's the proper way for getting this? -John
+	private static String ID = "org.prolint";
+	
+	public static String PROLINT_MARKER_ID = "org.prolint.prolintmarker";
+	public static String PROLINT_MARKER_COLUMN = "org.prolint.prolintmarker.column";
+	public static String PROLINT_MARKER_RULEID = "org.prolint.prolintmarker.ruleid";
+
+	
+	/**
+	 * The constructor.
+	 */
+	public Plugin() {
+		super();
+		plugin = this;
+		try {
+			resourceBundle = ResourceBundle.getBundle("org.prolint.eclipse.PluginResources");
+		} catch (MissingResourceException x) {
+			resourceBundle = null;
+		}
+	}
+
+	/**
+	 * This method is called upon plug-in activation
+	 */
+	public void start(BundleContext context) throws Exception {
+		super.start(context);
+		// Truncate the hibernate log file at startup
+		File logfile = new File("prolint/hibernate.log");
+		logfile.getParentFile().mkdirs();
+		logfile.delete();
+	}
+
+	/**
+	 * This method is called when the plug-in is stopped
+	 */
+	public void stop(BundleContext context) throws Exception {
+		super.stop(context);
+	}
+
+	
+	/** Convenient dialog for displaying an error message.
+	 */
+	public static void errorDialog(String errMess) {
+		MessageDialog.openError(
+			PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell()
+			, "Prolint"
+			, errMess
+			);
+	}
+
+	/**
+	 * Returns the shared instance.
+	 */
+	public static Plugin getDefault() {
+		return plugin;
+	}
+
+	/**
+	 * Returns the string from the plugin's resource bundle,
+	 * or 'key' if not found.
+	 */
+	public static String getResourceString(String key) {
+		ResourceBundle bundle = Plugin.getDefault().getResourceBundle();
+		try {
+			return (bundle != null) ? bundle.getString(key) : key;
+		} catch (MissingResourceException e) {
+			return key;
+		}
+	}
+
+	/**
+	 * Returns the plugin's resource bundle,
+	 */
+	public ResourceBundle getResourceBundle() {
+		return resourceBundle;
+	}
+
+
+	/** Shortcut to get the active workbench page */
+	public static IWorkbenchPage getActivePage() {
+		return getDefault().getWorkbench().getActiveWorkbenchWindow().getActivePage();
+	}
+	
+
+	/** Convenience method for writing an Exception to the Error Log */
+	public static void log(Exception e) {
+		plugin.getLog().log(
+			new Status(
+				IStatus.ERROR
+				, Plugin.ID
+				, IStatus.ERROR
+				, ( e.getMessage()==null ? "" : e.getMessage() )
+				, e 
+				)
+			);
+	}
+
+
+}

Added: trunk/org.prolint.core/src/org/prolint/eclipse/package.html
===================================================================
--- trunk/org.prolint.core/src/org/prolint/eclipse/package.html	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/eclipse/package.html	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,37 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
+<html>
+<head>
+<!--
+    Authors: John Green
+
+    Copyright (C) 2005 Prolint.org Contributors
+
+    This file is part of Prolint.
+
+    Prolint is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) any later version.
+
+    Prolint is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with Prolint; if not, write to the Free Software
+    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+-->
+</head>
+<body bgcolor="white">
+
+Provides the interface from Prolint to Eclipse.
+
+<h2>Package Specification</h2>
+
+<h2>Related Documentation</h2>
+
+<!-- Put @see and @since tags down here. -->
+
+</body>
+</html>

Added: trunk/org.prolint.core/src/org/prolint/rules/AbbrevSchemaNames.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/rules/AbbrevSchemaNames.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/rules/AbbrevSchemaNames.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,64 @@
+/* Created on Jan 25, 2005
+ * Authors: John Green
+ *
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *    Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *    Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *    You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.rules;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import org.prolint.core.TempMarker;
+import org.prorefactor.core.IConstants;
+import org.prorefactor.core.JPNav;
+import org.prorefactor.core.JPNode;
+import org.prorefactor.core.TokenTypes;
+
+
+/** Tests for abbreviated schema names (table and field) in a compile unit. */
+public class AbbrevSchemaNames extends NodeRule {
+	
+	private static final String RULENAME = "abbrevname";
+	
+	private static Integer [] watchedTypes = {
+			new Integer(TokenTypes.Field_ref)
+			, new Integer(TokenTypes.RECORD_NAME)
+		};
+
+	public String getName() { return RULENAME; }
+
+	public Integer[] getWatchedNodeTypes() { return watchedTypes; }
+
+	public List run(JPNode node) {
+		int nodeType = node.getType();
+		assert nodeType==TokenTypes.Field_ref || nodeType==TokenTypes.RECORD_NAME;
+		if (node.attrGet(IConstants.ABBREVIATED) != IConstants.TRUE) return null;
+		JPNode idNode = node;
+		if (nodeType==TokenTypes.Field_ref) idNode = JPNav.findFieldRefIdNode(node);
+		int lintRunFileIndex = lintRun.getLintRunFileIndex(idNode.getFileIndex());
+		if (lintRunFileIndex == -1) return null;
+		TempMarker tempMarker = new TempMarker()
+			.setFileIndex(lintRunFileIndex)
+			.setLine(idNode.getLine())
+			.setColumn(idNode.getColumn())
+			.setRuleIndex(lintRunIndex.intValue())
+			.setNumchars(idNode.getText().length())
+			.setMessage("abbrevname: " + idNode.getText() + " is abbreviated");
+		ArrayList retList = new ArrayList();
+		retList.add(tempMarker);
+		return retList;
+	}
+
+}

Added: trunk/org.prolint.core/src/org/prolint/rules/CuRule.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/rules/CuRule.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/rules/CuRule.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,37 @@
+/* Created on Jan 25, 2005
+ * Authors: John Green
+ * 
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *    Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *    Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *    You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.rules;
+
+import java.util.List;
+
+import org.prorefactor.refactor.source.CompileUnit;
+
+
+/** Abstract base class for Prolint rules which must be launced against an entire compile unit.
+ * LintRun does not launch rules by name. Instead, it launches a list
+ * of ICuRule objects and a list of INodeRule objects.
+ * @see org.prolint.core.LintRun
+ */
+public abstract class CuRule extends Rule {
+
+	/** Launch the lint rule object for a given compile unit.
+	 * Returns a List of TempMarker objects.
+	 */
+	public abstract List run(CompileUnit cu);
+
+}

Added: trunk/org.prolint.core/src/org/prolint/rules/NoEffect.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/rules/NoEffect.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/rules/NoEffect.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,107 @@
+/* Created on Apr 11, 2005
+ * Authors: John Green
+ *
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *    Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *    Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *    You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.rules;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import org.prolint.core.TempMarker;
+import org.prorefactor.core.JPNode;
+import org.prorefactor.core.TokenTypes;
+
+import com.joanju.ProparseLdr;
+
+
+/** Tests for statements that have no effect
+ *
+ * To Do Later: Make the "nobracketlist" configurable like Prolint/4GL. 
+ */
+public class NoEffect extends NodeRule {
+	
+	private static final String RULENAME = "noeffect";
+	
+	private static Integer [] watchedTypes = {
+			new Integer(TokenTypes.Expr_statement)
+		};
+
+	public String getName() { return RULENAME; }
+
+	public Integer[] getWatchedNodeTypes() { return watchedTypes; }
+
+	public List run(JPNode node) {
+		int nodeType = node.getType();
+		assert nodeType==TokenTypes.Expr_statement;
+		if (mightHaveSideEffects(node)) return null;
+		/* "Expr_statement" is a synthetic node, so it won't have a line
+		 * number. Get the first non-synthetic node.
+		 */
+		JPNode realNode = node.firstNaturalChild();
+		int lintRunFileIndex = lintRun.getLintRunFileIndex(realNode.getFileIndex());
+		if (lintRunFileIndex == -1) return null;
+		TempMarker tempMarker = new TempMarker()
+			.setFileIndex(lintRunFileIndex)
+			.setLine(realNode.getLine())
+			.setColumn(realNode.getColumn())
+			.setRuleIndex(lintRunIndex.intValue())
+			.setNumchars(realNode.getText().length())
+			.setMessage("noeffect: Statement has no effect"); // Begins with rule name for sorting.
+		ArrayList retList = new ArrayList();
+		retList.add(tempMarker);
+		return retList;
+	}
+
+
+	private boolean mightHaveSideEffects(JPNode node) {
+		ProparseLdr parser = ProparseLdr.getInstance();
+		final String qname = "rule_noeffect";
+		int nodeHandle = node.getHandle();
+		/* User-defined functions and the following built-in functions might have an effect. */
+		if (parser.queryCreate(nodeHandle, qname, "USER_FUNC") > 0) return true;
+		if (parser.queryCreate(nodeHandle, qname, "DYNAMICFUNCTION") > 0) return true;
+		if (parser.queryCreate(nodeHandle, qname, "ETIME") > 0) return true;
+		if (parser.queryCreate(nodeHandle, qname, "SETUSERID") > 0) return true;
+		if (parser.queryCreate(nodeHandle, qname, "SUPER") > 0) return true;
+		/* A statement like handle:READ-ONLY has no effect, 
+	     * a statement like handle:GET-FIRST() does have effect,
+	     * so look for OBJCOLON _not_ followed by node type "Method_param_list"
+	     */
+		int resultHandle = parser.getHandle();
+		int numResults = parser.queryCreate(nodeHandle, qname, "OBJCOLON");
+		for (int i = 1; i <= numResults; i++) {
+			parser.queryGetResult(qname, i, resultHandle);
+			parser.nodeNextSiblingI(resultHandle, resultHandle);
+			/* methods are supposed to have (), but these can be omitted if there are
+			 * no parameters. When omitted, noeffect will raise a warning.
+			 * Try to suppress the warning for some of commonly used methods.
+			 * Re-use the same list of methods in rule 'nobrackets'
+			 */
+			final String nobracketlist = "QUERY-OPEN,GET-NEXT,GET-FIRST,GET-PREV,GET-LAST,CLOSE-QUERY,SELECT-ALL";
+			if (nobracketlist.indexOf(parser.getNodeText(resultHandle).toUpperCase()) >=0) return true;
+			/* From "widattr" in the tree spec: 
+			 *   (OBJCOLON . #(Array_subscript...)? #(Method_param_list...)? )+ 
+			 * First, move to the method or attribute name
+			 * node - the . (i.e. any) token after the OBJCOLON. Then, simply check next
+			 * sibling twice. First time might be Array_subscript.
+			 */
+			if (parser.nodeNextSibling(resultHandle,resultHandle).equals("Method_param_list")) return true;
+			if (parser.nodeNextSibling(resultHandle,resultHandle).equals("Method_param_list")) return true;
+		}
+		return false;
+	}
+
+}

Added: trunk/org.prolint.core/src/org/prolint/rules/NodeRule.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/rules/NodeRule.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/rules/NodeRule.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,48 @@
+/* Created on Feb 3, 2005
+ * Authors: John Green
+ * 
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *
+ * Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.rules;
+
+import java.util.List;
+
+import org.prorefactor.core.JPNode;
+
+
+
+/** Abstract base class for Prolint rules which must be launched against an individual node.
+ * LintRun does not launch rules by name. Instead, it launches a list of
+ * CuRule objects and a list of NodeRule objects.
+ * @see org.prolint.core.LintRun
+ */
+public abstract class NodeRule extends Rule {
+
+	/** Get an array of Integer objects which represents the node types that this
+	 * lint rule is interested in.
+	 * Frequently, there is only one node type that the rule is watching for.
+	 * The implementing class would typically just define a static array, and return it.
+	 */
+	public abstract Integer [] getWatchedNodeTypes();
+
+	/** Launch the lint rule object for a given node. 
+	 * Returns a List of TempMarker objects.
+	 */
+	public abstract List run(JPNode node);
+
+}

Added: trunk/org.prolint.core/src/org/prolint/rules/Rule.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/rules/Rule.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/rules/Rule.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,59 @@
+/* Created Mar 17, 2005
+ * Authors: John Green
+ * 
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *
+ * Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.rules;
+
+import org.prolint.core.LintRun;
+
+
+/** Abstract Prolint rule.
+ * This class is not intended to be subclassed by the client.
+ * See NodeRule and CuRule, which are intended to be subclassed.
+ */
+public abstract class Rule {
+
+	protected LintRun lintRun = null;
+	protected Integer lintRunIndex = null; 	// See implementation Note[1] at end of file.
+
+	/** All rules have an identifying short name. */
+	public abstract String getName();
+	
+	/** All rules are associated with a LintRun */
+	public LintRun getLintRun() { return lintRun; }
+
+	/** For each IRule created for a LintRun, an Integer index is kept. */
+	public Integer getLintRunIndex() { return lintRunIndex; }
+
+	/** @see #getLintRun() */
+	public Rule setLintRun(LintRun lintRun) { this.lintRun = lintRun; return this; }
+
+	/** @see #getLintRunIndex() */
+	public Rule setLintRunIndex(Integer index) { this.lintRunIndex = index; return this; }
+
+}
+
+
+/*
+ * Note[1]
+ * Storing an integer index for every TempMarker record in our 
+ * temp-table is much more efficient than storing the string name
+ * would have been. This saves us the overhead of writing a bunch
+ * of strings to disk for something that is short-lived anyway.
+ */

Added: trunk/org.prolint.core/src/org/prolint/rules/package.html
===================================================================
--- trunk/org.prolint.core/src/org/prolint/rules/package.html	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/rules/package.html	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,37 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
+<html>
+<head>
+<!--
+    Authors: John Green
+
+    Copyright (C) 2005 Prolint.org Contributors
+
+    This file is part of Prolint.
+
+    Prolint is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) any later version.
+
+    Prolint is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with Prolint; if not, write to the Free Software
+    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+-->
+</head>
+<body bgcolor="white">
+
+Provides Prolint rules.
+
+<h2>Package Specification</h2>
+
+<h2>Related Documentation</h2>
+
+<!-- Put @see and @since tags down here. -->
+
+</body>
+</html>

Added: trunk/org.prolint.core/src/org/prolint/unittest/AbbrevNamesT.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/unittest/AbbrevNamesT.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/unittest/AbbrevNamesT.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,96 @@
+/* Created Mar 18, 2005
+ * Authors: John Green
+ *
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *    Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *    Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *    You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.unittest;
+
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileWriter;
+import java.io.InputStream;
+
+import org.eclipse.core.resources.IFolder;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.prolint.core.FileStuff;
+import org.prolint.core.LintRun;
+import org.prolint.core.StreamUtil;
+import org.prolint.eclipse.MarkerUtil;
+import org.prorefactor.core.unittest.UnitTestBase2;
+
+
+/** Test the Lint rule for abbreviated table/field names
+ * within a JUnit plug-in runtime test workbench.
+ */
+public class AbbrevNamesT extends UnitTestBase2 {
+
+	public AbbrevNamesT(String arg0) {
+		super(arg0);
+	}
+
+	public static void main(String[] args) { }
+	
+	public void test01() throws Exception {
+		
+		String projectName = "junit_s2k";
+		
+		// Create the project in the runtime workspace
+		TestProject project = new TestProject(projectName);
+		project.createDirectory("abbrevnames");
+		project.createFile("testdata/abbrevnames/billto.p", "abbrevnames/billto.p");
+		project.createFile("testdata/abbrevnames/customer.p", "abbrevnames/customer.p");
+		project.createFile("testdata/abbrevnames/displaypostal.i", "abbrevnames/displaypostal.i");
+
+		// Prepare and check the list of files to lint
+		String [] unitNames = {
+				"abbrevnames/customer.p"
+				, "abbrevnames/billto.p"
+				};
+		File [] files = new File[unitNames.length];
+		for (int i = 0; i < unitNames.length; i++) {
+			files[i] = FileStuff.findFile(unitNames[i]);
+			assertNotNull("Unit test configuration error", files[i]);
+		}
+
+		// We lint everything twice, so that we can test that the old markers get cleared.
+		for (int j = 0; j < 2; j++) {
+			LintRun lintRun = new LintRun();
+			for (int i = 0; i < files.length; i++) {
+				lintRun.lint(files[i], unitNames[i]);
+			}
+			lintRun.writeAllMarkers();
+		}
+
+		/* Report on the markers, compare to expected:
+		 * 1. Get the "abbrevnames" folder.
+		 * 2. Set up a scratch file for reporting to.
+		 * 3. Report all Prolint markers in abbrevnames folder.
+		 * 4. Close the output.
+		 * 5. Read the "expect" file on the classpath.
+		 * 6. Assert no differences between output and expected.
+		 */
+		IFolder folder = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName).getFolder("abbrevnames");
+		File outFile = new File("prolint/tmp/abbrevnamestest.txt");
+		outFile.getParentFile().mkdirs();
+		BufferedWriter writer = new BufferedWriter(new FileWriter(outFile));
+		MarkerUtil.writeMarkers(folder, writer);
+		writer.close();
+		InputStream expectStream = AbbrevNamesT.class.getClassLoader().getResourceAsStream("testdata/abbrevnames/expect.txt");
+		assertEquals("Difference at line", 0, StreamUtil.lineOfDiff(expectStream, new FileInputStream(outFile)));
+		
+	}
+
+}

Added: trunk/org.prolint.core/src/org/prolint/unittest/AllLintTests.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/unittest/AllLintTests.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/unittest/AllLintTests.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,38 @@
+/* Created Mar 18, 2005
+ * Authors: John Green
+ *
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *    Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *    Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *    You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+package org.prolint.unittest;
+
+
+import junit.framework.Test;
+import junit.framework.TestSuite;
+
+
+/** Launch all Prolint unit tests */
+public class AllLintTests {
+
+	public static Test suite() {
+		TestSuite suite = new TestSuite("All Lint tests");
+		//$JUnit-BEGIN$
+		suite.addTest(new TestSuite(AbbrevNamesT.class));
+		suite.addTest(new TestSuite(NoEffectT.class));
+		//$JUnit-END$
+		return suite;
+	}
+
+}

Added: trunk/org.prolint.core/src/org/prolint/unittest/NoEffectT.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/unittest/NoEffectT.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/unittest/NoEffectT.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,86 @@
+/* Created Apr 18, 2005
+ * Authors: John Green
+ *
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *    Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *    Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *    You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.unittest;
+
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileWriter;
+import java.io.InputStream;
+
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.prolint.core.FileStuff;
+import org.prolint.core.LintRun;
+import org.prolint.core.StreamUtil;
+import org.prolint.eclipse.MarkerUtil;
+import org.prorefactor.core.unittest.UnitTestBase2;
+
+
+/** Rule "noeffect" unit test. */
+public class NoEffectT extends UnitTestBase2 {
+
+	public NoEffectT(String arg0) {
+		super(arg0);
+	}
+
+	public static void main(String[] args) { }
+	
+	public void test01() throws Exception {
+
+		final String projectName = "junit_s2k";
+		final String directoryName = "simpleunit";
+		final String cuName = "simpleunit/noeffect.p";
+		final String dataFileName = "testdata/" + cuName;
+		final String expectFileName = "testdata/simpleunit/noeffect.expect";
+		final String resultsFileName = "prolint/tmp/noeffecttest.txt";
+		
+		// Create the project in the runtime workspace.
+		TestProject project = new TestProject(projectName);
+		project.createDirectory(directoryName);
+		project.createFile(dataFileName, cuName);
+
+		// Find the File to lint.
+		File sourceFile = FileStuff.findFile(cuName);
+		assertNotNull("Unit test configuration error", sourceFile);
+
+		// Run the lint.
+		LintRun lintRun = new LintRun();
+		lintRun.lint(sourceFile, cuName);
+		lintRun.writeAllMarkers();
+
+		/* Report on the markers, compare to expected:
+		 * 1. Get the Resource.
+		 * 2. Set up a scratch file for reporting to.
+		 * 3. Report all Prolint markers in the resource.
+		 * 4. Close the output.
+		 * 5. Read the "expect" file on the classpath.
+		 * 6. Assert no differences between output and expected.
+		 */
+		IResource resource = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName).getFile(cuName);
+		File outFile = new File(resultsFileName);
+		outFile.getParentFile().mkdirs();
+		BufferedWriter writer = new BufferedWriter(new FileWriter(outFile));
+		MarkerUtil.writeMarkers(resource, writer);
+		writer.close();
+		InputStream expectStream = NoEffectT.class.getClassLoader().getResourceAsStream(expectFileName);
+		assertEquals("Difference at line", 0, StreamUtil.lineOfDiff(expectStream, new FileInputStream(outFile)));
+		
+	}
+
+}

Added: trunk/org.prolint.core/src/org/prolint/unittest/TestProject.java
===================================================================
--- trunk/org.prolint.core/src/org/prolint/unittest/TestProject.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/unittest/TestProject.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,152 @@
+/* Created Apr 4, 2005
+ * Authors: John Green
+ *
+ * Copyright (C) 2005 Prolint.org Contributors
+ * This file is part of Prolint.
+ *    Prolint is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *    Prolint is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *    You should have received a copy of the GNU Lesser General Public
+ * License along with Prolint; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+package org.prolint.unittest;
+
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.URL;
+
+import org.apache.commons.io.FileUtils;
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.resources.IFolder;
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IProjectDescription;
+import org.eclipse.core.resources.IWorkspace;
+import org.eclipse.core.resources.IWorkspaceRoot;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.CoreException;
+import org.prorefactor.refactor.RefactorSession;
+import org.prorefactor.refactor.settings.ProgressProjectSettings;
+import org.prorefactor.refactor.settings.ProparseProjectSettings;
+
+
+/** Provides methods for creating, populating, and destroying
+ * a project containing test code.
+ * Each Prolint test that requires "sample code" to run against
+ * should create and destroy its own TestProject.
+ * <p>
+ * Much of the complexity in building test projects comes from
+ * the fact that at "JUnit Plug-in Runtime", there may be no
+ * easy place for us to copy the test project's files from; those
+ * files and folders might only exist in the org.prolint.core jar
+ * file! This class provides a method for copying a resource from
+ * the class path into source files in the project directory.
+ */
+public class TestProject {
+
+	/** Basic constructor.
+	 * The creation of a new TestProject implies that any old instance
+	 * of that project should be discarded. After all, it's just a
+	 * test project, and previous test runs might have crashed without
+	 * finishing their cleanup. This also saves us from needing a
+	 * try/finally block in each test - we don't have to worry so much
+	 * about cleaning up after each test run.
+	 * <p>
+	 * The project gets created in the default (workspace) directory.
+	 * <p>
+	 * Creating a TestProject sets up some defaults:
+	 * 1. It copies ProRefactor settings files from resources on Prolint's classpath
+	 * which must be in the directory: testdata/XXyourProjectNameXX.
+	 * The files are: progress.properties, proparse.properties, proparse.schema
+	 * 2. It overrides the project's PROPATH, setting it to the project directory.
+	 * 3. It loads all of these project settings into Proparse and ProRefactor.
+	 * <p>
+	 * Be careful not to have two TestProject instances of the same name
+	 * at the same time!
+	 * @throws Exception
+	 */
+	public TestProject(String projectName) throws Exception {
+		IWorkspace workspace = ResourcesPlugin.getWorkspace();
+		IWorkspaceRoot root = workspace.getRoot();
+		project = root.getProject(projectName);
+		if (project!=null) project.delete(true, null);
+		project = root.getProject(projectName);
+		final IProjectDescription description = workspace.newProjectDescription(projectName);
+		project.create(description, null);
+		project.open(null);
+		String settingResourceDir = "testdata/" + projectName + "/";
+		// Copy progress.properties, set the propath.
+		String progressSettingsFilename = RefactorSession.getProgressSettingsFilename(projectName);
+		copyProjectSettings(settingResourceDir + "progress.properties", progressSettingsFilename);
+		ProgressProjectSettings progressSettings = new ProgressProjectSettings(progressSettingsFilename);
+		progressSettings.loadSettings();
+		progressSettings.propath = project.getLocation().toOSString();
+		progressSettings.saveSettings();
+		// Copy proparse.properties, get the schema filename.
+		String proparseSettingsFilename = RefactorSession.getProparseSettingsFilename(projectName);
+		copyProjectSettings(settingResourceDir + "proparse.properties", proparseSettingsFilename);
+		ProparseProjectSettings proparseSettings = new ProparseProjectSettings(proparseSettingsFilename, projectName);
+		proparseSettings.loadSettings();
+		String schemaFilename = proparseSettings.schemaFile;
+		// Copy proparse.schema
+		copyProjectSettings(settingResourceDir + "proparse.schema", schemaFilename);
+		// Now load all of our project settings
+		RefactorSession.getInstance().loadProjectForced(projectName);
+	}
+
+	private IProject project;
+	
+	private void copyProjectSettings(String resourceName, String fileName) throws IOException {
+		URL url = getClass().getClassLoader().getResource(resourceName);
+		if (url != null) {
+			File file = new File(fileName);
+			FileUtils.copyURLToFile(url, file);
+		}
+	}
+
+	/** Create a directory in the project directory 
+	 * @throws CoreException*/
+	public void createDirectory(String name) throws CoreException {
+		IFolder folder = project.getFolder(name);
+		if (! folder.exists())
+			folder.create(true, true, null);
+	}
+	
+	/** Create a file in the project from an input stream.
+	 * @throws CoreException
+	 */
+	public IFile createFile(InputStream stream, String name) throws CoreException {
+		IFile file = project.getFile(name);
+		file.create(stream, true, null);
+		return file;
+	}
+	
+	/** Create a file in the project from a resource in the org.prolint.core classpath.
+	 * In other words, the original source file must be from the "src" directory.
+	 * If you are creating a file from something that is not in the org.prolint.core
+	 * classpath, then @see #createFile(InputStream, String).
+	 * @param prolintPluginResource ex: "testdata/myDir/myTestFile.p"
+	 * @param projectFileName ex: "myDir/myTest.p"
+	 * @throws CoreException
+	 */
+	public IFile createFile(String prolintPluginResource, String projectFileName) throws CoreException {
+		return createFile(
+				getClass().getClassLoader().getResourceAsStream(prolintPluginResource)
+				, projectFileName
+				);
+	}
+	
+	public void delete() throws CoreException {
+		project.delete(true, null);
+	}
+	
+	public IProject getProject() { return project; }
+	
+	
+}

Added: trunk/org.prolint.core/src/org/prolint/unittest/package.html
===================================================================
--- trunk/org.prolint.core/src/org/prolint/unittest/package.html	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/org/prolint/unittest/package.html	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,37 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
+<html>
+<head>
+<!--
+    Authors: John Green
+
+    Copyright (C) 2005 Prolint.org Contributors
+
+    This file is part of Prolint.
+
+    Prolint is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) any later version.
+
+    Prolint is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with Prolint; if not, write to the Free Software
+    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+-->
+</head>
+<body bgcolor="white">
+
+Provides Prolint unit tests.
+
+<h2>Package Specification</h2>
+
+<h2>Related Documentation</h2>
+
+<!-- Put @see and @since tags down here. -->
+
+</body>
+</html>

Added: trunk/org.prolint.core/src/testdata/abbrevnames/billto.p
===================================================================
--- trunk/org.prolint.core/src/testdata/abbrevnames/billto.p	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/testdata/abbrevnames/billto.p	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,2 @@
+find first bill.
+{abbrevnames/displaypostal.i}

Added: trunk/org.prolint.core/src/testdata/abbrevnames/customer.p
===================================================================
--- trunk/org.prolint.core/src/testdata/abbrevnames/customer.p	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/testdata/abbrevnames/customer.p	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,2 @@
+find first cust.
+{abbrevnames/displaypostal.i}

Added: trunk/org.prolint.core/src/testdata/abbrevnames/displaypostal.i
===================================================================
--- trunk/org.prolint.core/src/testdata/abbrevnames/displaypostal.i	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/testdata/abbrevnames/displaypostal.i	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1 @@
+display postal.
\ No newline at end of file

Added: trunk/org.prolint.core/src/testdata/abbrevnames/expect.txt
===================================================================
--- trunk/org.prolint.core/src/testdata/abbrevnames/expect.txt	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/testdata/abbrevnames/expect.txt	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,3 @@
+abbrevname abbrevnames/displaypostal.i 1 9 abbrevname: postal is abbreviated
+abbrevname abbrevnames/customer.p 1 12 abbrevname: cust is abbreviated
+abbrevname abbrevnames/billto.p 1 12 abbrevname: bill is abbreviated

Added: trunk/org.prolint.core/src/testdata/junit_s2k/progress.properties
===================================================================
--- trunk/org.prolint.core/src/testdata/junit_s2k/progress.properties	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/testdata/junit_s2k/progress.properties	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,7 @@
+# Don't bother setting the propath here, because the TestProject
+# object takes care of setting the propath to the project directory.
+batch_mode=false
+database_aliases=
+proversion=9.1D
+opsys=WIN32
+window_system=MS-WIN95

Added: trunk/org.prolint.core/src/testdata/junit_s2k/proparse.properties
===================================================================
--- trunk/org.prolint.core/src/testdata/junit_s2k/proparse.properties	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/testdata/junit_s2k/proparse.properties	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,8 @@
+#Proparse/Refactor Project Settings
+#Tue Mar 22 16:29:07 PST 2005
+r_code_dir=
+indent_tab=false
+keywordall=
+capitalize_keywords=false
+schema_file=prorefactor/projects/junit_s2k/proparse.schema
+indent_spaces=2

Added: trunk/org.prolint.core/src/testdata/junit_s2k/proparse.schema
===================================================================
--- trunk/org.prolint.core/src/testdata/junit_s2k/proparse.schema	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/testdata/junit_s2k/proparse.schema	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,1897 @@
+:: sports2000 1
+: Benefits 6657
+DependentCare 6664
+EmpNum 6658
+HealthCare 6659
+LifeInsurance 6660
+MedicalSpending 6663
+Pension401K 6661
+StockPurchase 6662
+: BillTo 6693
+Address 6697
+Address2 6698
+BillToID 6695
+City 6699
+Contact 6702
+CustNum 6694
+Name 6696
+Phone 6703
+PostalCode 6701
+State 6700
+: Bin 6828
+BinName 6834
+BinNum 6833
+Itemnum 6831
+Qty 6832
+WarehouseNum 6830
+: Customer 5642
+Address 6372
+Address2 6373
+Balance 6382
+City 6374
+Comments 6380
+Contact 6378
+Country 6376
+CreditLimit 6381
+CustNum 6370
+Discount 6384
+EmailAddress 6387
+Fax 6386
+Name 6371
+Phone 6377
+PostalCode 6385
+SalesRep 6379
+State 6375
+Terms 6383
+: Department 6613
+DeptCode 6614
+DeptName 6615
+: Employee 6544
+Address 6548
+Address2 6549
+Birthdate 6567
+City 6550
+DeptCode 6553
+EmpNum 6565
+FirstName 6547
+HomePhone 6561
+LastName 6546
+Position 6560
+PostalCode 6552
+SickDaysLeft 6564
+StartDate 6566
+State 6551
+VacationDaysLeft 6563
+WorkPhone 6562
+: Family 6603
+BenefitDate 6607
+Birthdate 6606
+CoveredOnBenefits 6608
+EmpNum 6609
+Relation 6605
+RelativeName 6604
+: Feedback 6520
+Comments 6531
+Company 6522
+Contact 6521
+Department 6532
+EmailAddress 6528
+Fax 6530
+Phone 6529
+Rating 6533
+: InventoryTrans 6848
+BinNum 6852
+InvTransNum 6850
+InvType 6856
+Itemnum 6854
+Ordernum 6858
+PONum 6857
+Qty 6853
+TransDate 6855
+Transtime 6859
+WarehouseNum 6851
+: Invoice 6325
+Adjustment 6333
+Amount 6331
+CustNum 6329
+InvoiceDate 6330
+Invoicenum 6328
+OrderNum 6334
+ShipCharge 6335
+TotalPaid 6332
+: Item 6411
+Allocated 6421
+CatDescription 6419
+Category1 6424
+Category2 6425
+CatPage 6417
+ItemName 6416
+Itemnum 6415
+Minqty 6432
+Onhand 6420
+OnOrder 6423
+Price 6418
+ReOrder 6422
+Special 6426
+Weight 6427
+: LocalDefault 6478
+Country 6480
+CurrencySymbol 6498
+DateFormat 6497
+LocalDefNum 6499
+PostalFormat 6484
+PostalLabel 6483
+Region1Label 6481
+Region2Label 6482
+TelFormat 6496
+: Order 6707
+BillToID 6760
+Carrier 6755
+Creditcard 6764
+CustNum 6710
+Instructions 6756
+OrderDate 6752
+Ordernum 6709
+OrderStatus 6762
+PO 6757
+PromiseDate 6754
+SalesRep 6759
+ShipDate 6753
+ShipToID 6761
+Terms 6758
+WarehouseNum 6763
+: OrderLine 6445
+Discount 6454
+ExtendedPrice 6455
+Itemnum 6451
+Linenum 6450
+OrderLineStatus 6456
+Ordernum 6449
+Price 6452
+Qty 6453
+: POLine 6880
+Discount 6885
+ExtendedPrice 6886
+Itemnum 6882
+Linenum 6881
+POLineStatus 6888
+PONum 6887
+Price 6883
+Qty 6884
+: PurchaseOrder 6860
+DateEntered 6863
+PONum 6862
+POStatus 6866
+ReceiveDate 6865
+SupplierIDNum 6864
+: RefCall 6502
+CallDate 6506
+CallNum 6504
+CustNum 6505
+Parent 6508
+SalesRep 6507
+Txt 6509
+: Salesrep 6465
+MonthQuota 6469
+Region 6467
+RepName 6466
+SalesRep 6468
+: ShipTo 6667
+Address 6671
+Address2 6672
+City 6673
+Comments 6688
+Contact 6670
+CustNum 6668
+Name 6689
+Phone 6676
+PostalCode 6675
+ShipToID 6669
+State 6674
+: State 6472
+Region 6475
+State 6473
+StateName 6474
+: Supplier 6776
+Address 6788
+Address2 6789
+City 6790
+Comments 6796
+Country 6792
+Discount 6799
+LoginDate 6795
+Name 6787
+Password 6794
+Phone 6793
+PostalCode 6798
+ShipAmount 6797
+State 6791
+SupplierIDNum 6786
+: SupplierItemXref 6892
+Itemnum 6894
+SupplierIDNum 6893
+: TimeSheet 6575
+AMTimeIn 6579
+AMTimeOut 6580
+DayRecorded 6577
+EmpNum 6576
+OvertimeHours 6592
+PMTimeIn 6581
+PMTimeOut 6582
+RegularHours 6583
+TypeRecorded 6578
+: Vacation 6596
+EmpNum 6597
+EndDate 6599
+StartDate 6598
+: Warehouse 6802
+Address 6818
+Address2 6819
+City 6820
+Country 6817
+Phone 6823
+PostalCode 6822
+State 6821
+WarehouseName 6816
+WarehouseNum 6804
+:: dictdb 0
+: SYSATTACHTBLS 4288
+DB_LINK 4294
+LINKOWNER 4293
+OWNER 4289
+REMOWNER 4291
+REMTBL 4292
+TBL 4290
+: SYSBIGINTSTAT 6157
+COLID 6159
+RSSID 6179
+TBLID 6158
+VAL1 6160
+VAL10 6178
+VAL2 6161
+VAL3 6162
+VAL4 6163
+VAL5 6164
+VAL6 6165
+VAL7 6166
+VAL8 6176
+VAL9 6177
+: SYSCALCTABLE 4261
+FLD 4262
+: SYSCHARSTAT 6071
+COLID 6081
+RSSID 6092
+TBLID 6080
+VAL1 6082
+VAL10 6091
+VAL2 6083
+VAL3 6084
+VAL4 6085
+VAL5 6086
+VAL6 6087
+VAL7 6088
+VAL8 6089
+VAL9 6090
+: SYSCOLAUTH 4121
+COL 4035
+GRANTEE 4032
+GRANTOR 4122
+REF 4037
+SEL 4038
+TBL 4034
+TBLOWNER 4033
+UPD 4036
+: SYSCOLSTAT 5891
+COLID 5893
+COLTYPE 5894
+RSSID 5895
+TBLID 5892
+: SYSCOLUMNS 960
+CHARSET 1328
+COL 1320
+COLLATION 1329
+COLTYPE 1323
+DFLT_VALUE 1327
+ID 1319
+NULLFLAG 1326
+OWNER 1322
+SCALE 1325
+TBL 1321
+WIDTH 1324
+: SYSCOLUMNS_FULL 4417
+ARRAY_EXTENT 4434
+CHARSET 4427
+COL 4419
+COLLATION 4428
+COLTYPE 4422
+COL_LABEL 4483
+COL_LABEL_SA 4490
+COL_SUBTYPE 4429
+DESCRIPTION 4482
+DFLT_VALUE 4426
+DFLT_VALUE_SA 4485
+DISPLAY_ORDER 4433
+FIELD_RPOS 4432
+FORMAT 4431
+FORMAT_SA 4487
+HELP 4481
+HELP_SA 4489
+ID 4418
+LABEL 4430
+LABEL_SA 4486
+NULLFLAG 4425
+OWNER 4421
+SCALE 4424
+TBL 4420
+USER_MISC 4491
+VALEXP 4435
+VALMSG 4480
+VALMSG_SA 4488
+VIEW_AS 4484
+WIDTH 4423
+: SYSDATATYPES 4205
+AUTOINCR 4258
+CASESENSITIVE 4213
+CREATEPARAMS 4211
+DATATYPE 4207
+DHTYPENAME 4206
+LITERALPREFIX 4209
+LITERALSUFFIX 4210
+LOCALTYPENAME 4259
+NULLABLE 4212
+ODBCMONEY 4257
+SEARCHABLE 4214
+TYPEPRECISION 4208
+UNSIGNEDATTR 4256
+: SYSDATESTAT 6018
+COLID 6020
+RSSID 6031
+TBLID 6019
+VAL1 6021
+VAL10 6030
+VAL2 6022
+VAL3 6023
+VAL4 6024
+VAL5 6025
+VAL6 6026
+VAL7 6027
+VAL8 6028
+VAL9 6029
+: SYSDBAUTH 4102
+DBA_ACC 4104
+GRANTEE 4103
+RES_ACC 4105
+: SYSDBLINKS 4049
+DB_LINK 4051
+HOST 4054
+OWNER 4050
+PASSWORD 4053
+USERNAME 4052
+: SYSFLOATSTAT 6033
+COLID 6035
+RSSID 6054
+TBLID 6034
+VAL1 6036
+VAL10 6053
+VAL2 6037
+VAL3 6038
+VAL4 6039
+VAL5 6048
+VAL6 6049
+VAL7 6050
+VAL8 6051
+VAL9 6052
+: SYSIDXSTAT 4272
+IDXID 4274
+NLEAF 4275
+NLEVELS 4276
+RECSZ 4277
+RSSID 4278
+TBLID 4273
+: SYSINDEXES 2787
+ABBREVIATE 2804
+ACTIVE 2801
+COLNAME 2794
+desc 2803
+ID 2788
+IDXCOMPRESS 2797
+IDXMETHOD 2798
+IDXNAME 2790
+IDXORDER 2796
+IDXOWNER 2791
+IDXSEGID 2789
+IDXSEQ 2799
+IDXTYPE 2795
+INDEX_USER_MISC 2806
+IXCOL_USER_MISC 2807
+RSSID 2800
+TBL 2792
+TBLOWNER 2793
+UNSORTED 2805
+WORDIDX 2802
+: SYSINTSTAT 5934
+COLID 5936
+RSSID 5988
+TBLID 5935
+VAL1 5937
+VAL10 5987
+VAL2 5938
+VAL3 5939
+VAL4 5940
+VAL5 5941
+VAL6 5942
+VAL7 5984
+VAL8 5985
+VAL9 5986
+: SYSNCHARSTAT 6181
+COLID 6183
+RSSID 6194
+TBLID 6182
+VAL1 6184
+VAL10 6193
+VAL2 6185
+VAL3 6186
+VAL4 6187
+VAL5 6188
+VAL6 6189
+VAL7 6190
+VAL8 6191
+VAL9 6192
+: SYSNUMSTAT 5990
+COLID 5992
+RSSID 6016
+TBLID 5991
+VAL1 5993
+VAL10 6002
+VAL2 5994
+VAL3 5995
+VAL4 5996
+VAL5 5997
+VAL6 5998
+VAL7 5999
+VAL8 6000
+VAL9 6001
+: SYSNVARCHARSTAT 6196
+COLID 6198
+RSSID 6218
+TBLID 6197
+VAL1 6208
+VAL10 6217
+VAL2 6209
+VAL3 6210
+VAL4 6211
+VAL5 6212
+VAL6 6213
+VAL7 6214
+VAL8 6215
+VAL9 6216
+: SYSPROCBIN 4355
+ID 4357
+PROC_BIN 4360
+PROC_TYPE 4358
+RSSID 4356
+SEQ 4359
+: SYSPROCCOLUMNS 4306
+ARGTYPE 4321
+COL 4308
+DATATYPE 4320
+DFLT_VALUE 4325
+ID 4307
+NULLFLAG 4324
+PROC_ID 4309
+RSSID 4310
+SCALE 4323
+WIDTH 4322
+: SYSPROCEDURES 4296
+CREATOR 4299
+HAS_RESULTSET 4303
+HAS_RETURN_VAL 4304
+OWNER 4300
+PROC_ID 4297
+PROC_NAME 4298
+PROC_TYPE 4302
+RSSID 4301
+: SYSPROCTEXT 4362
+ID 4364
+PROC_TEXT 4367
+PROC_TYPE 4365
+RSSID 4363
+SEQ 4366
+: SYSREALSTAT 6094
+COLID 6096
+RSSID 6116
+TBLID 6095
+VAL1 6097
+VAL10 6115
+VAL2 6098
+VAL3 6099
+VAL4 6100
+VAL5 6101
+VAL6 6102
+VAL7 6112
+VAL8 6113
+VAL9 6114
+: SYSSMINTSTAT 5912
+COLID 5921
+RSSID 5932
+TBLID 5920
+VAL1 5922
+VAL10 5931
+VAL2 5923
+VAL3 5924
+VAL4 5925
+VAL5 5926
+VAL6 5927
+VAL7 5928
+VAL8 5929
+VAL9 5930
+: SYSSYNONYMS 4040
+ISPUBLIC 4046
+SCREATOR 4043
+SNAME 4041
+SOWNER 4042
+SREMDB 4047
+STBL 4044
+STBLOWNER 4045
+: SYSTABAUTH 4107
+ALT 4118
+DEL 4113
+EXE 4116
+GRANTEE 4109
+GRANTOR 4108
+INS 4112
+NDX 4117
+REF 4119
+SEL 4115
+TBL 4111
+TBLOWNER 4110
+UPD 4114
+: SYSTABLES 959
+CREATOR 1300
+HAS_CCNSTRS 1315
+HAS_FCNSTRS 1314
+HAS_PCNSTRS 1313
+HAS_UCNSTRS 1316
+ID 1298
+OWNER 1301
+RSSID 1318
+SEGID 1312
+TBL 1299
+TBLTYPE 1302
+TBL_STATUS 1317
+: SYSTABLES_FULL 4369
+CAN_DUMP 4399
+CAN_LOAD 4400
+CREATOR 4372
+DESCRIPTION 4391
+DUMP_NAME 4397
+FILE_LABEL 4398
+FILE_LABEL_SA 4402
+FROZEN 4396
+HAS_CCNSTRS 4386
+HAS_FCNSTRS 4385
+HAS_PCNSTRS 4384
+HAS_UCNSTRS 4387
+HIDDEN 4395
+ID 4370
+LAST_CHANGE 4394
+OWNER 4373
+PRIME_INDEX 4390
+RSSID 4389
+SEGID 4375
+TBL 4371
+TBLTYPE 4374
+TBL_STATUS 4388
+USER_MISC 4403
+VALEXP 4392
+VALMSG 4393
+VALMSG_SA 4401
+: SYSTBLSTAT 4264
+CARD 4266
+NPAGES 4267
+PAGESZ 4269
+RECSZ 4268
+RSSID 4270
+TBLID 4265
+: SYSTIMESTAT 6056
+COLID 6058
+RSSID 6069
+TBLID 6057
+VAL1 6059
+VAL10 6068
+VAL2 6060
+VAL3 6061
+VAL4 6062
+VAL5 6063
+VAL6 6064
+VAL7 6065
+VAL8 6066
+VAL9 6067
+: SYSTINYINTSTAT 6133
+COLID 6144
+RSSID 6155
+TBLID 6134
+VAL1 6145
+VAL10 6154
+VAL2 6146
+VAL3 6147
+VAL4 6148
+VAL5 6149
+VAL6 6150
+VAL7 6151
+VAL8 6152
+VAL9 6153
+: SYSTRIGCOLS 4341
+COLID 4353
+OWNER 4352
+TRIGGERNAME 4342
+: SYSTRIGGER 4327
+FIRE_4GL 4339
+OWNER 4330
+REFERS_TO_NEW 4336
+REFERS_TO_OLD 4335
+RSSID 4338
+STATEMENT_OR_ROW 4337
+TBL 4331
+TBLOWNER 4332
+TRIGGERID 4328
+TRIGGERNAME 4329
+TRIGGER_EVENT 4334
+TRIGGER_TIME 4333
+: SYSTSSTAT 6118
+COLID 6120
+RSSID 6131
+TBLID 6119
+VAL1 6121
+VAL10 6130
+VAL2 6122
+VAL3 6123
+VAL4 6124
+VAL5 6125
+VAL6 6126
+VAL7 6127
+VAL8 6128
+VAL9 6129
+: SYSVARCHARSTAT 5897
+COLID 5899
+RSSID 5910
+TBLID 5898
+VAL1 5900
+VAL10 5909
+VAL2 5901
+VAL3 5902
+VAL4 5903
+VAL5 5904
+VAL6 5905
+VAL7 5906
+VAL8 5907
+VAL9 5908
+: SYSVIEWS 961
+CREATOR 1331
+OWNER 1332
+SEQ 1333
+VIEWNAME 1330
+VIEWTEXT 1334
+: SYS_CHKCOL_USAGE 4199
+CNSTRNAME 4202
+COLNAME 4203
+OWNER 4200
+TBLNAME 4201
+: SYS_CHK_CONSTRS 4176
+CHKCLAUSE 4181
+CHKSEQ 4180
+CNSTRNAME 4179
+OWNER 4177
+TBLNAME 4178
+: SYS_KEYCOL_USAGE 4160
+CNSTRNAME 4163
+COLNAME 4164
+COLPOSITION 4165
+OWNER 4161
+TBLNAME 4162
+: SYS_REF_CONSTRS 4167
+CNSTRNAME 4170
+DELETERULE 4174
+OWNER 4168
+REFCNSTRNAME 4173
+REFOWNER 4171
+REFTBLNAME 4172
+TBLNAME 4169
+: SYS_TBL_CONSTRS 4192
+CNSTRNAME 4195
+CNSTRTYPE 4196
+IDXNAME 4197
+OWNER 4193
+TBLNAME 4194
+: _ActAILog 1479
+_AiLog-AIWWrites 2157
+_AiLog-BBuffWaits 2160
+_AiLog-BytesWritn 2159
+_AiLog-ForceWaits 2208
+_AiLog-Id 2155
+_AiLog-Misc 2211
+_AiLog-NoBufAvail 2161
+_AiLog-PartialWrt 2162
+_AiLog-RecWriten 2158
+_AiLog-TotWrites 2156
+_AiLog-Trans 2209
+_AiLog-UpTime 2210
+: _ActBILog 1478
+_BiLog-BBuffWaits 2147
+_BiLog-BIWWrites 2127
+_BiLog-BytesRead 2145
+_BiLog-BytesWrtn 2129
+_BiLog-ClstrClose 2146
+_BiLog-EBuffWaits 2148
+_BiLog-ForceWaits 2149
+_BiLog-ForceWrts 2150
+_BiLog-Id 2125
+_BiLog-Misc 2154
+_BiLog-PartialWrts 2151
+_BiLog-RecRead 2144
+_BiLog-RecWriten 2128
+_BiLog-TotalWrts 2126
+_BiLog-TotReads 2130
+_BiLog-Trans 2152
+_BiLog-UpTime 2153
+: _ActBuffer 1476
+_Buffer-APWEnq 2094
+_Buffer-Chkpts 2088
+_Buffer-Deferred 2091
+_Buffer-Flushed 2090
+_Buffer-Id 2083
+_Buffer-LogicRds 2084
+_Buffer-LogicWrts 2085
+_Buffer-LRUSkips 2092
+_Buffer-LRUWrts 2093
+_Buffer-Marked 2089
+_Buffer-Misc 2097
+_Buffer-OSRds 2086
+_Buffer-OSWrts 2087
+_Buffer-Trans 2095
+_Buffer-UpTime 2096
+: _ActIndex 1484
+_Index-Create 2344
+_Index-Delete 2345
+_Index-Find 2343
+_Index-Free 2348
+_Index-Id 2342
+_Index-Misc 2351
+_Index-Remove 2346
+_Index-Splits 2347
+_Index-Trans 2349
+_Index-UpTime 2350
+: _ActIOFile 1482
+_IOFile-BufReads 2309
+_IOFile-BufWrites 2307
+_IOFile-Extends 2305
+_IOFile-FileName 2258
+_IOFile-Id 2257
+_IOFile-Misc 2312
+_IOFile-Reads 2259
+_IOFile-Trans 2306
+_IOFile-UbufReads 2310
+_IOFile-UbufWrites 2308
+_IOFile-UpTime 2311
+_IOFile-Writes 2304
+: _ActIOType 1481
+_IOType-AiRds 2249
+_IOType-AiWrts 2253
+_IOType-BiRds 2248
+_IOType-BiWrts 2252
+_IOType-DataReads 2247
+_IOType-DataWrts 2251
+_IOType-Id 2245
+_IOType-IdxRds 2246
+_IOType-IdxWrts 2250
+_IOType-Misc 2256
+_IOType-Trans 2254
+_IOType-UpTime 2255
+: _ActLock 1480
+_Lock-CanclReq 2225
+_Lock-Downgrade 2226
+_Lock-ExclFind 2243
+_Lock-ExclLock 2218
+_Lock-ExclReq 2214
+_Lock-ExclWait 2222
+_Lock-Id 2212
+_Lock-Misc 2242
+_Lock-RecGetLock 2220
+_Lock-RecGetReq 2216
+_Lock-RecGetWait 2224
+_Lock-RedReq 2227
+_Lock-ShrFind 2244
+_Lock-ShrLock 2217
+_Lock-ShrReq 2213
+_Lock-ShrWait 2221
+_Lock-Trans 2240
+_Lock-UpgLock 2219
+_Lock-UpgReq 2215
+_Lock-UpgWait 2223
+_Lock-UpTime 2241
+: _ActOther 1486
+_Other-Commit 2381
+_Other-FlushMblk 2384
+_Other-Id 2380
+_Other-Misc 2387
+_Other-Trans 2385
+_Other-Undo 2382
+_Other-UpTime 2386
+_Other-Wait 2383
+: _ActPWs 1477
+_PW-ApwQWrites 2114
+_PW-BuffsScaned 2117
+_PW-BufsCkp 2118
+_PW-Checkpoints 2119
+_PW-CkpQWrites 2115
+_PW-DBWrites 2112
+_PW-Flushed 2121
+_PW-Id 2098
+_PW-Marked 2120
+_PW-Misc 2124
+_PW-ScanCycles 2116
+_PW-ScanWrites 2113
+_PW-TotDBWrites 2099
+_PW-Trans 2122
+_PW-UpTime 2123
+: _ActRecord 1485
+_Record-BytesCreat 2374
+_Record-BytesDel 2375
+_Record-BytesRead 2373
+_Record-BytesUpd 2376
+_Record-FragCreat 2370
+_Record-FragDel 2371
+_Record-FragRead 2369
+_Record-FragUpd 2372
+_Record-Id 2352
+_Record-Misc 2379
+_Record-RecCreat 2355
+_Record-RecDel 2368
+_Record-RecRead 2353
+_Record-RecUpd 2354
+_Record-Trans 2377
+_Record-UpTime 2378
+: _ActServer 1475
+_Server-ByteRec 2030
+_Server-ByteSent 2031
+_Server-Id 2027
+_Server-Misc 2082
+_Server-MsgRec 2028
+_Server-MsgSent 2029
+_Server-QryRec 2034
+_Server-RecRec 2032
+_Server-RecSent 2033
+_Server-TimeSlice 2035
+_Server-Trans 2080
+_Server-UpTime 2081
+: _ActSpace 1483
+_Space-AllocNewRm 2317
+_Space-BackAdd 2336
+_Space-BytesAlloc 2320
+_Space-DbExd 2314
+_Space-Examined 2321
+_Space-FromFree 2319
+_Space-FromRm 2318
+_Space-Front2Back 2337
+_Space-FrontAdd 2323
+_Space-Id 2313
+_Space-Locked 2338
+_Space-Misc 2341
+_Space-Removed 2322
+_Space-RetFree 2316
+_Space-TakeFree 2315
+_Space-Trans 2339
+_Space-UpTime 2340
+: _ActSummary 1474
+_Summary-AiWrites 2020
+_Summary-BiReads 2018
+_Summary-BiWrites 2019
+_Summary-Chkpts 2021
+_Summary-Commits 1932
+_Summary-DbAccesses 2025
+_Summary-DbReads 2016
+_Summary-DbWrites 2017
+_Summary-Flushed 2022
+_Summary-Id 1931
+_Summary-Misc 2026
+_Summary-RecCreat 1936
+_Summary-RecDel 1937
+_Summary-RecLock 1938
+_Summary-RecReads 1934
+_Summary-RecUpd 1935
+_Summary-RecWait 1939
+_Summary-TransComm 2023
+_Summary-Undos 1933
+_Summary-UpTime 2024
+: _Area 955
+_Area-attrib 1267
+_Area-block 1266
+_Area-blocksize 1269
+_Area-extents 1281
+_Area-misc 1282
+_Area-name 1264
+_Area-number 1263
+_Area-recbits 1280
+_Area-system 1268
+_Area-type 1265
+_Area-version 1262
+: _AreaExtent 956
+_Area-number 1286
+_Area-recid 1283
+_Extent-attrib 1288
+_Extent-misc 1292
+_Extent-number 1285
+_Extent-path 1291
+_Extent-size 1290
+_Extent-system 1289
+_Extent-type 1287
+_Extent-version 1284
+: _AreaStatus 1511
+_AreaStatus-Areaname 2597
+_AreaStatus-Areanum 2596
+_AreaStatus-Extents 2600
+_AreaStatus-Freenum 2602
+_AreaStatus-Hiwater 2599
+_AreaStatus-Id 2595
+_AreaStatus-Lastextent 2601
+_AreaStatus-Rmnum 2603
+_AreaStatus-Totblocks 2598
+: _Block 1487
+_Block-Area 2407
+_Block-BkupCtr 2404
+_Block-Block 2408
+_Block-ChainType 2403
+_Block-Dbkey 2401
+_Block-Id 2400
+_Block-Misc 2409
+_Block-NextDbkey 2405
+_Block-Type 2402
+_Block-Update 2406
+: _BuffStatus 1467
+_BfStatus-APWQ 1792
+_BfStatus-CKPMarked 1795
+_BfStatus-CKPQ 1793
+_BfStatus-HashSize 1776
+_BfStatus-Id 1774
+_BfStatus-LastCkpNum 1796
+_BfStatus-LRU 1778
+_BfStatus-Misc 1797
+_BfStatus-ModBuffs 1794
+_BfStatus-TotBufs 1775
+_BfStatus-UsedBuffs 1777
+: _Checkpoint 1490
+_Checkpoint-ApwQ 2451
+_Checkpoint-CptQ 2449
+_Checkpoint-Dirty 2448
+_Checkpoint-Flush 2464
+_Checkpoint-Id 2445
+_Checkpoint-Len 2447
+_Checkpoint-Misc 2465
+_Checkpoint-Scan 2450
+_Checkpoint-Time 2446
+: _Connect 1464
+_Connect-2phase 1605
+_Connect-Batch 1606
+_Connect-Device 1519
+_Connect-Disconnect 1602
+_Connect-Id 1515
+_Connect-Interrupt 1604
+_Connect-Misc 1607
+_Connect-Name 1518
+_Connect-Pid 1521
+_Connect-Resync 1603
+_Connect-semid 1601
+_Connect-SemNum 1600
+_Connect-Server 1522
+_Connect-Time 1520
+_Connect-TransId 1525
+_Connect-Type 1517
+_Connect-Usr 1516
+_Connect-Wait 1524
+_Connect-Wait1 1523
+: _Db 940
+_Db-addr 1165
+_Db-coll-name 1186
+_Db-collate 1185
+_Db-comm 1167
+_Db-local 1172
+_Db-misc1 1169
+_Db-misc2 1170
+_Db-name 1164
+_Db-res1 1173
+_Db-res2 1174
+_Db-revision 1168
+_Db-slave 1171
+_Db-type 1166
+_Db-xl-name 1184
+_Db-xlate 1175
+_User-Misc 1187
+: _DbStatus 1466
+_DbStatus-AiBlkSize 1741
+_DbStatus-BiBlkSize 1739
+_DbStatus-BiClSize 1740
+_DbStatus-BiOpen 1763
+_DbStatus-BiSize 1772
+_DbStatus-BiTrunc 1764
+_DbStatus-CacheStamp 1745
+_DbStatus-Changed 1735
+_DbStatus-ClVersMinor 1733
+_DbStatus-Codepage 1765
+_DbStatus-Collation 1766
+_DbStatus-CreateDate 1762
+_DbStatus-DbBlkSize 1712
+_DbStatus-DbVers 1731
+_DbStatus-DbVersMinor 1732
+_DbStatus-EmptyBlks 1714
+_DbStatus-fbDate 1760
+_DbStatus-FreeBlks 1715
+_DbStatus-HiWater 1738
+_DbStatus-ibDate 1761
+_DbStatus-ibSeq 1736
+_DbStatus-Id 1708
+_DbStatus-Integrity 1737
+_DbStatus-IntFlags 1711
+_DbStatus-LastOpen 1743
+_DbStatus-LastTable 1730
+_DbStatus-LastTran 1729
+_DbStatus-Misc 1773
+_DbStatus-MostLocks 1769
+_DbStatus-NumAreas 1767
+_DbStatus-NumLocks 1768
+_DbStatus-NumSems 1771
+_DbStatus-PrevOpen 1744
+_DbStatus-RMFreeBlks 1728
+_DbStatus-SharedMemVer 1770
+_DbStatus-ShmVers 1734
+_DbStatus-starttime 1742
+_DbStatus-state 1709
+_DbStatus-tainted 1710
+_DbStatus-TotalBlks 1713
+: _Field 932
+_Can-Read 1063
+_Can-Write 1064
+_Charset 1106
+_Col-label 1070
+_Col-label-SA 1105
+_Collation 1107
+_Data-Type 1045
+_Decimals 1061
+_Desc 1069
+_dtype 1046
+_Extent 1065
+_Fetch-Type 1108
+_Field-Name 1044
+_Field-Physpos 1110
+_field-rpos 1060
+_File-recid 1043
+_Fld-case 1076
+_Fld-misc1 1074
+_Fld-misc2 1075
+_Fld-res1 1077
+_Fld-res2 1078
+_Fld-stdtype 1071
+_Fld-stlen 1072
+_Fld-stoff 1073
+_For-Allocated 1098
+_For-Id 1079
+_For-Itype 1093
+_For-Maxsize 1097
+_For-Name 1091
+_For-Primary 1088
+_For-Retrieve 1095
+_For-Scale 1090
+_For-Separator 1096
+_For-Spacing 1089
+_For-Type 1092
+_For-Xpos 1094
+_Format 1058
+_Format-SA 1102
+_Help 1068
+_Help-SA 1104
+_Initial 1047
+_Initial-SA 1100
+_Label 1056
+_Label-SA 1101
+_Mandatory 1057
+_Order 1062
+_sys-field 1059
+_User-Misc 1111
+_Valexp 1066
+_Valmsg 1067
+_Valmsg-SA 1103
+_View-As 1099
+_Width 1109
+: _Field-Trig 950
+_Event 1228
+_Field-Recid 1225
+_Field-Rpos 1227
+_File-Recid 1226
+_Override 1230
+_Proc-Name 1229
+_Trig-Crc 1231
+: _File 930
+_Cache 1005
+_Can-Create 987
+_Can-Delete 990
+_Can-Dump 1026
+_Can-Load 1027
+_Can-Read 988
+_Can-Write 989
+_CRC 1002
+_Creator 1033
+_DB-lang 998
+_Db-recid 992
+_Desc 991
+_dft-pk 981
+_Dump-name 1001
+_Field-map 1032
+_Fil-misc1 995
+_Fil-misc2 996
+_Fil-res1 1003
+_Fil-res2 1004
+_File-Label 1025
+_File-Label-SA 1029
+_File-Name 978
+_File-Number 980
+_For-Cnt1 1008
+_For-Cnt2 1009
+_For-Flag 1007
+_For-Format 1012
+_For-Id 1015
+_For-Info 1013
+_For-Name 1010
+_For-Number 1024
+_For-Owner 1011
+_For-Size 1006
+_For-Type 1014
+_Frozen 1000
+_Has-Ccnstrs 1034
+_Has-Fcnstrs 1035
+_Has-Pcnstrs 1036
+_Has-Ucnstrs 1037
+_Hidden 999
+_ianum 1030
+_Last-change 997
+_numfld 986
+_numkcomp 983
+_numkey 982
+_numkfld 984
+_Owner 1038
+_Prime-Index 979
+_Rssid 1039
+_Tbl-Status 1040
+_Tbl-Type 1041
+_Template 985
+_User-Misc 1042
+_Valexp 993
+_Valmsg 994
+_Valmsg-SA 1028
+_Version 1031
+: _File-Trig 948
+_Event 1221
+_File-Recid 1220
+_Override 1223
+_Proc-Name 1222
+_Trig-Crc 1224
+: _Filelist 1472
+_FileList-BlkSize 1906
+_FileList-Extend 1904
+_FileList-Id 1902
+_FileList-LogicalSz 1905
+_FileList-Misc 1922
+_FileList-Name 1921
+_FileList-Openmode 1920
+_FileList-Size 1903
+: _Index 934
+_Active 1127
+_Desc 1131
+_File-recid 1120
+_For-Name 1132
+_For-Type 1133
+_I-misc1 1125
+_I-misc2 1126
+_I-res1 1128
+_I-res2 1129
+_ianum 1134
+_Idx-CRC 1135
+_idx-num 1124
+_Idxmethod 1137
+_Idxowner 1136
+_Index-Name 1121
+_num-comp 1123
+_Unique 1122
+_User-Misc 1138
+_Wordidx 1130
+: _Index-Field 936
+_Abbreviate 1143
+_Ascending 1142
+_Field-recid 1141
+_If-misc1 1153
+_If-misc2 1154
+_If-res1 1155
+_If-res2 1156
+_Index-recid 1139
+_Index-Seq 1140
+_Unsorted 1152
+_User-Misc 1157
+: _IndexStat 1504
+_IndexStat-blockdelete 2530
+_IndexStat-create 2515
+_IndexStat-delete 2528
+_IndexStat-id 2513
+_IndexStat-read 2514
+_IndexStat-split 2529
+: _Latch 1505
+_Latch-Busy 2539
+_Latch-Hold 2533
+_Latch-Id 2531
+_Latch-Lock 2537
+_Latch-LockedT 2540
+_Latch-LockT 2541
+_Latch-Name 2532
+_Latch-Qhold 2534
+_Latch-Spin 2538
+_Latch-Type 2535
+_Latch-Wait 2536
+_Latch-WaitT 2542
+: _License 1493
+_Lic-ActiveConns 2499
+_Lic-BatchConns 2502
+_Lic-CurrConns 2505
+_Lic-Id 2497
+_Lic-MaxActive 2500
+_Lic-MaxBatch 2503
+_Lic-MaxCurrent 2506
+_Lic-MinActive 2501
+_Lic-MinBatch 2504
+_Lic-MinCurrent 2507
+_Lic-ValidUsers 2498
+: _Lock 1491
+_Lock-Chain 2472
+_Lock-Flags 2473
+_Lock-Id 2466
+_Lock-Misc 2474
+_Lock-Name 2468
+_Lock-RecId 2471
+_Lock-Table 2470
+_Lock-Type 2469
+_Lock-Usr 2467
+: _LockReq 1489
+_LockReq-ExclFind 2443
+_LockReq-Id 2433
+_LockReq-Misc 2442
+_LockReq-Name 2435
+_LockReq-Num 2434
+_LockReq-RecLock 2436
+_LockReq-RecWait 2437
+_LockReq-SchLock 2440
+_LockReq-SchWait 2441
+_LockReq-ShrFind 2444
+_LockReq-TrnLock 2438
+_LockReq-TrnWait 2439
+: _Logging 1468
+_Logging-2PC 1835
+_Logging-2PCNickName 1836
+_Logging-2PCPriority 1837
+_Logging-AiBegin 1826
+_Logging-AiBlkSize 1833
+_Logging-AiBuffs 1832
+_Logging-AiCurrExt 1831
+_Logging-AiExtents 1830
+_Logging-AiGenNum 1829
+_Logging-AiIO 1825
+_Logging-AiJournal 1824
+_Logging-AiLogSize 1834
+_Logging-AiNew 1827
+_Logging-AiOpen 1828
+_Logging-BiBlkSize 1803
+_Logging-BiBuffs 1809
+_Logging-BiBytesFree 1807
+_Logging-BiClAge 1802
+_Logging-BiClSize 1804
+_Logging-BiExtents 1805
+_Logging-BiFullBuffs 1810
+_Logging-BiIO 1801
+_Logging-BiLogSize 1806
+_Logging-CommitDelay 1800
+_Logging-CrashProt 1799
+_Logging-Id 1798
+_Logging-LastCkp 1808
+_Logging-Misc 1838
+: _MstrBlk 1465
+_MstrBlk-aiblksize 1617
+_MstrBlk-biblksize 1615
+_MstrBlk-biopen 1704
+_MstrBlk-biprev 1706
+_MstrBlk-bistate 1696
+_MstrBlk-cfilnum 1619
+_MstrBlk-crdate 1698
+_MstrBlk-dbstate 1610
+_MstrBlk-dbvers 1609
+_MstrBlk-fbdate 1701
+_MstrBlk-hiwater 1614
+_MstrBlk-ibdate 1702
+_MstrBlk-ibseq 1697
+_MstrBlk-Id 1608
+_MstrBlk-integrity 1612
+_MstrBlk-lasttask 1618
+_MstrBlk-Misc 1707
+_MstrBlk-oppdate 1700
+_MstrBlk-oprdate 1699
+_MstrBlk-rlclsize 1616
+_MstrBlk-rltime 1705
+_MstrBlk-tainted 1611
+_MstrBlk-timestamp 1703
+_MstrBlk-totblks 1613
+: _MyConnection 1510
+_MyConn-Id 2578
+_MyConn-NumSeqBuffers 2593
+_MyConn-Pid 2592
+_MyConn-UsedSeqBuffers 2594
+_MyConn-UserId 2579
+: _Repl-Agent 1514
+_ReplAgt-AgentID 2670
+_ReplAgt-AgentName 2671
+_ReplAgt-BlocksACK 2691
+_ReplAgt-BlocksProcessed 2690
+_ReplAgt-BlocksReceived 2689
+_ReplAgt-CommStatus 2696
+_ReplAgt-ConnectTime 2672
+_ReplAgt-DBName 2673
+_ReplAgt-LastTRID 2693
+_ReplAgt-Method 2694
+_ReplAgt-NotesProcessed 2692
+_ReplAgt-Port 2688
+_ReplAgt-ReservedChar 2697
+_ReplAgt-ReservedInt 2698
+_ReplAgt-ServerHost 2674
+_ReplAgt-Status 2695
+: _Repl-AgentControl 1513
+_ReplAgtCtl-AgentID 2656
+_ReplAgtCtl-AgentName 2657
+_ReplAgtCtl-BlocksACK 2663
+_ReplAgtCtl-BlocksSent 2662
+_ReplAgtCtl-CommStatus 2667
+_ReplAgtCtl-ConnectTime 2658
+_ReplAgtCtl-LastBlockSentAt 2664
+_ReplAgtCtl-Method 2665
+_ReplAgtCtl-Port 2661
+_ReplAgtCtl-RemoteDBName 2659
+_ReplAgtCtl-RemoteHost 2660
+_ReplAgtCtl-ReservedChar 2668
+_ReplAgtCtl-ReservedInt 2669
+_ReplAgtCtl-status 2666
+: _Repl-Server 1512
+_ReplSrv-AgentCount 2605
+_ReplSrv-BlocksSent 2606
+_ReplSrv-id 2604
+_ReplSrv-LastBlockSentAt 2608
+_ReplSrv-ReservedChar 2609
+_ReplSrv-ReservedInt 2610
+_ReplSrv-StartTime 2607
+: _Resrc 1506
+_Resrc-Id 2543
+_Resrc-lock 2545
+_Resrc-Name 2544
+_Resrc-time 2547
+_Resrc-wait 2546
+: _Segments 1469
+_Segment-ByteFree 1856
+_Segment-BytesUsed 1842
+_Segment-Id 1839
+_Segment-Misc 1857
+_Segment-SegId 1840
+_Segment-SegSize 1841
+: _Sequence 952
+_Cycle-Ok 1238
+_Db-recid 1249
+_Seq-Incr 1235
+_Seq-Init 1234
+_Seq-Max 1237
+_Seq-Min 1236
+_Seq-Misc 1248
+_Seq-Name 1233
+_Seq-Num 1232
+_User-Misc 1250
+: _Servers 1470
+_Server-CurrUsers 1864
+_Server-Id 1858
+_Server-Logins 1863
+_Server-MaxUsers 1865
+_Server-Misc 1867
+_Server-Num 1859
+_Server-Pid 1860
+_Server-PortNum 1866
+_Server-Protocol 1862
+_Server-Type 1861
+: _Startup 1471
+_Startup-AiBuffs 1871
+_Startup-AiName 1869
+_Startup-APWBuffs 1897
+_Startup-APWMaxWrites 1898
+_Startup-APWQTime 1895
+_Startup-APWSTime 1896
+_Startup-BiBuffs 1872
+_Startup-BiDelay 1891
+_Startup-BiIO 1894
+_Startup-BiName 1873
+_Startup-BiTrunc 1874
+_Startup-Buffs 1870
+_Startup-CrashProt 1888
+_Startup-Directio 1900
+_Startup-Id 1868
+_Startup-LockTable 1889
+_Startup-MaxClients 1890
+_Startup-MaxServers 1892
+_Startup-MaxUsers 1893
+_Startup-Misc 1901
+_Startup-Spin 1899
+: _StatBase 1508
+_IndexBase 2570
+_StatBase-id 2568
+_TableBase 2569
+: _StorageObject 954
+_Area-number 1256
+_Db-recid 1251
+_Object-associate 1255
+_Object-associate-type 1254
+_Object-attrib 1259
+_Object-block 1257
+_Object-misc 1261
+_Object-number 1253
+_Object-root 1258
+_Object-system 1260
+_Object-type 1252
+: _Sysattachtbls 3680
+_Dblink 3686
+_Linkowner 3685
+_Owner 3681
+_Remowner 3683
+_Remtbl 3684
+_Tbl 3682
+: _Sysbigintstat 5449
+_Colid 5451
+_Rssid 5462
+_Tblid 5450
+_Val1 5452
+_Val10 5461
+_Val2 5453
+_Val3 5454
+_Val4 5455
+_Val5 5456
+_Val6 5457
+_Val7 5458
+_Val8 5459
+_Val9 5460
+: _Syscalctable 3512
+_Fld 3513
+: _Syscharstat 5230
+_Colid 5232
+_Rssid 5281
+_Tblid 5231
+_Val1 5233
+_Val10 5280
+_Val2 5234
+_Val3 5235
+_Val4 5236
+_Val5 5237
+_Val6 5238
+_Val7 5239
+_Val8 5240
+_Val9 5241
+: _Syschkcolusage 3271
+_Cnstrname 3274
+_Colname 3275
+_Owner 3272
+_Tblname 3273
+: _Syschkconstrs 3183
+_Chkclause 3188
+_Chkseq 3187
+_Cnstrname 3186
+_Owner 3184
+_Tblname 3185
+: _Syscolauth 2887
+_Col 2892
+_Grantee 2889
+_Grantor 2888
+_Ref 2894
+_Sel 2895
+_Tbl 2891
+_Tblowner 2890
+_Upd 2893
+: _Syscolstat 4844
+_Colid 4846
+_Coltype 4847
+_Rssid 4848
+_Tblid 4845
+: _Sysdatatypes 3445
+_Autoincr 3489
+_Casesensitive 3453
+_Createparams 3451
+_Datatype 3447
+_Dhtypename 3446
+_Literalprefix 3449
+_Literalsuffix 3450
+_Localtypename 3490
+_Nullable 3452
+_Odbcmoney 3488
+_Searchable 3454
+_Typeprecision 3448
+_Unsignedattr 3455
+: _Sysdatestat 5066
+_Colid 5068
+_Rssid 5079
+_Tblid 5067
+_Val1 5069
+_Val10 5078
+_Val2 5070
+_Val3 5071
+_Val4 5072
+_Val5 5073
+_Val6 5074
+_Val7 5075
+_Val8 5076
+_Val9 5077
+: _Sysdbauth 2819
+_Dbaacc 2821
+_Grantee 2820
+_Resacc 2822
+: _Sysdblinks 3052
+_Dblink 3054
+_Host 3057
+_Owner 3053
+_Pwd 3056
+_Username 3055
+: _Sysfloatstat 5156
+_Colid 5158
+_Rssid 5169
+_Tblid 5157
+_Val1 5159
+_Val10 5168
+_Val2 5160
+_Val3 5161
+_Val4 5162
+_Val5 5163
+_Val6 5164
+_Val7 5165
+_Val8 5166
+_Val9 5167
+: _Sysidxstat 3596
+_Idxid 3598
+_Nleaf 3599
+_Nlevels 3600
+_Recsz 3601
+_Rssid 3602
+_Tblid 3597
+: _Sysintstat 3041
+_Colid 3059
+_Rssid 5000
+_Tblid 3058
+_Val1 3060
+_Val10 4999
+_Val2 3069
+_Val3 4992
+_Val4 4993
+_Val5 4994
+_Val6 4995
+_Val7 4996
+_Val8 4997
+_Val9 4998
+: _Syskeycolusage 3063
+_Cnstrname 3066
+_Colname 3067
+_Colposition 3068
+_Owner 3064
+_Tblname 3065
+: _Sysncharstat 5536
+_Colid 5538
+_Rssid 5549
+_Tblid 5537
+_Val1 5539
+_Val10 5548
+_Val2 5540
+_Val3 5541
+_Val4 5542
+_Val5 5543
+_Val6 5544
+_Val7 5545
+_Val8 5546
+_Val9 5547
+: _Sysnumstat 5006
+_Colid 5008
+_Rssid 5060
+_Tblid 5007
+_Val1 5009
+_Val10 5059
+_Val2 5010
+_Val3 5011
+_Val4 5012
+_Val5 5013
+_Val6 5014
+_Val7 5056
+_Val8 5057
+_Val9 5058
+: _Sysnvarcharstat 5555
+_Colid 5557
+_Rssid 5639
+_Tblid 5556
+_Val1 5558
+_Val10 5638
+_Val2 5559
+_Val3 5560
+_Val4 5632
+_Val5 5633
+_Val6 5634
+_Val7 5635
+_Val8 5636
+_Val9 5637
+: _Sysprocbin 4011
+_Id 4013
+_Procbin 4016
+_Proctype 4014
+_Rssid 4012
+_Seq 4015
+: _Sysproccolumns 3706
+_Argtype 3812
+_Col 3808
+_Datatype 3811
+_Dfltvalue 3816
+_Id 3707
+_Nullflag 3815
+_Procid 3809
+_Rssid 3810
+_Scale 3814
+_Width 3813
+: _Sysprocedures 3692
+_Creator 3695
+_Hasresultset 3699
+_Hasreturnval 3700
+_Owner 3696
+_Procid 3693
+_Procname 3694
+_Proctype 3698
+_Rssid 3697
+: _Sysproctext 4022
+_Id 4024
+_Proctext 4027
+_Proctype 4025
+_Rssid 4023
+_Seq 4026
+: _Sysrealstat 5287
+_Colid 5289
+_Rssid 5300
+_Tblid 5288
+_Val1 5290
+_Val10 5299
+_Val2 5291
+_Val3 5292
+_Val4 5293
+_Val5 5294
+_Val6 5295
+_Val7 5296
+_Val8 5297
+_Val9 5298
+: _Sysrefconstrs 3170
+_Cnstrname 3173
+_Deleterule 3177
+_Owner 3171
+_Refcnstrname 3176
+_Refowner 3174
+_Reftblname 3175
+_Tblname 3172
+: _Syssmintstat 3883
+_Colid 3885
+_Rssid 3267
+_Tblid 3884
+_Val1 4017
+_Val10 3266
+_Val2 4018
+_Val3 4019
+_Val4 4028
+_Val5 4029
+_Val6 3591
+_Val7 3592
+_Val8 3593
+_Val9 3603
+: _Syssynonyms 2901
+_Ispublic 2907
+_Screator 2904
+_Sname 2902
+_Sowner 2903
+_Sremdb 2908
+_Stbl 2905
+_Stblowner 2906
+: _Systabauth 2828
+_Alt 2880
+_Del 2834
+_Exe 2837
+_Grantee 2830
+_Grantor 2829
+_Ins 2833
+_Ndx 2838
+_Ref 2881
+_Sel 2836
+_Tbl 2832
+_Tblowner 2831
+_Upd 2835
+: _Systblconstrs 3194
+_Cnstrname 3197
+_Cnstrtype 3264
+_Idxname 3265
+_Owner 3195
+_Tblname 3196
+: _Systblstat 3584
+_Card 3586
+_Npages 3587
+_Pagesz 3589
+_Recsz 3588
+_Rssid 3590
+_Tblid 3585
+: _Systimestat 5175
+_Colid 5177
+_Rssid 5224
+_Tblid 5176
+_Val1 5178
+_Val10 5223
+_Val2 5179
+_Val3 5216
+_Val4 5217
+_Val5 5218
+_Val6 5219
+_Val7 5220
+_Val8 5221
+_Val9 5222
+: _Systinyintstat 5392
+_Colid 5394
+_Rssid 5443
+_Tblid 5393
+_Val1 5395
+_Val10 5442
+_Val2 5396
+_Val3 5397
+_Val4 5398
+_Val5 5399
+_Val6 5400
+_Val7 5401
+_Val8 5440
+_Val9 5441
+: _Systrigcols 3879
+_Colid 3882
+_Owner 3881
+_Triggername 3880
+: _Systrigger 3822
+_Fire_4GL 3873
+_Owner 3825
+_Referstonew 3831
+_Referstoold 3830
+_Rssid 3872
+_Statementorrow 3832
+_Tbl 3826
+_Tblowner 3827
+_Triggerevent 3829
+_Triggerid 3823
+_Triggername 3824
+_Triggertime 3828
+: _Systsstat 5306
+_Colid 5308
+_Rssid 5386
+_Tblid 5307
+_Val1 5376
+_Val10 5385
+_Val2 5377
+_Val3 5378
+_Val4 5379
+_Val5 5380
+_Val6 5381
+_Val7 5382
+_Val8 5383
+_Val9 5384
+: _Sysvarcharstat 4854
+_Colid 4856
+_Rssid 3514
+_Tblid 4855
+_Val1 4857
+_Val10 3493
+_Val2 4858
+_Val3 4859
+_Val4 4860
+_Val5 4861
+_Val6 4862
+_Val7 4863
+_Val8 3491
+_Val9 3492
+: _Sysviews 958
+_Creator 1294
+_Owner 1295
+_Seq 1296
+_Viewname 1293
+_Viewtext 1297
+: _TableStat 1494
+_TableStat-create 2511
+_TableStat-delete 2512
+_TableStat-id 2508
+_TableStat-read 2509
+_TableStat-update 2510
+: _Trans 1492
+_Trans-Coord 2482
+_Trans-CoordTx 2483
+_Trans-counter 2480
+_Trans-Duration 2484
+_Trans-Flags 2477
+_Trans-Id 2475
+_Trans-Misc 2496
+_Trans-Num 2479
+_Trans-State 2476
+_Trans-txtime 2481
+_Trans-Usrnum 2478
+: _TxeLock 1507
+_Txe-Id 2560
+_Txe-Locks 2562
+_Txe-Lockss 2563
+_Txe-Time 2566
+_Txe-Type 2561
+_Txe-Wait-Time 2567
+_Txe-Waits 2564
+_Txe-Waitss 2565
+: _User 938
+_Password 1159
+_U-misc1 1161
+_U-misc2 1162
+_User-Misc 1163
+_User-Name 1160
+_Userid 1158
+: _UserIO 1488
+_UserIO-AiRead 2418
+_UserIO-AiWrite 2419
+_UserIO-BiRead 2416
+_UserIO-BiWrite 2417
+_UserIO-DbAccess 2413
+_UserIO-DbRead 2414
+_UserIO-DbWrite 2415
+_UserIO-Id 2410
+_UserIO-Misc 2432
+_UserIO-Name 2412
+_UserIO-Usr 2411
+: _UserLock 1473
+_UserLock-Chain 1928
+_UserLock-Flags 1929
+_UserLock-Id 1923
+_UserLock-Misc 1930
+_UserLock-Name 1925
+_UserLock-Recid 1926
+_UserLock-Type 1927
+_UserLock-Usr 1924
+: _UserStatus 1509
+_UserStatus-Counter 2575
+_UserStatus-ObjectId 2572
+_UserStatus-ObjectType 2573
+_UserStatus-Operation 2577
+_UserStatus-State 2574
+_UserStatus-Target 2576
+_UserStatus-UserId 2571
+: _View 942
+_Auth-Id 1188
+_Base-Tables 1190
+_Can-Create 1196
+_Can-Delete 1197
+_Can-Read 1194
+_Can-Write 1195
+_Desc 1199
+_Group-By 1192
+_Updatable 1198
+_View-Def 1193
+_View-Name 1189
+_Where-Cls 1191
+: _View-Col 944
+_Auth-Id 1200
+_Base-Col 1203
+_Can-Create 1205
+_Can-Write 1204
+_Col-Name 1202
+_Vcol-Order 1206
+_View-Name 1201
+: _View-Ref 946
+_Auth-Id 1216
+_Base-Col 1219
+_Ref-Table 1218
+_View-Name 1217

Added: trunk/org.prolint.core/src/testdata/simpleunit/noeffect.expect
===================================================================
--- trunk/org.prolint.core/src/testdata/simpleunit/noeffect.expect	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/testdata/simpleunit/noeffect.expect	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,4 @@
+noeffect simpleunit/noeffect.p 23 1 noeffect: Statement has no effect
+noeffect simpleunit/noeffect.p 24 12 noeffect: Statement has no effect
+noeffect simpleunit/noeffect.p 27 1 noeffect: Statement has no effect
+noeffect simpleunit/noeffect.p 47 15 noeffect: Statement has no effect

Added: trunk/org.prolint.core/src/testdata/simpleunit/noeffect.p
===================================================================
--- trunk/org.prolint.core/src/testdata/simpleunit/noeffect.p	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prolint.core/src/testdata/simpleunit/noeffect.p	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,50 @@
+/* noeffect.i:  testcases for rule "noeffect"
+   warn about statements that have no effect, because they are probably typos  */
+RETURN.   
+                                         
+DEFINE VARIABLE i_noeffect AS INTEGER   NO-UNDO.
+DEFINE VARIABLE c_noeffect AS CHARACTER NO-UNDO.
+DEFINE VARIABLE h_noeffect AS HANDLE    NO-UNDO.       
+
+FUNCTION UdfNoEffect RETURNS LOGICAL:
+  /* test */
+  RETURN TRUE.
+END.
+
+CURRENT-LANGUAGE = h_noeffect:SCREEN-VALUE.
+CURRENT-LANGUAGE = "Dutch":U.               
+
+/* the following 4 statements have effect: */                                                                                
+UPDATE i_noeffect.
+DISPLAY i_noeffect ENTERED.
+DISPLAY i_noeffect NOT ENTERED.
+i_noeffect = h_noeffect:NUM-RESULTS.
+/* ...but these two should raise a warning: */
+i_noeffect.
+i_noeffect + 12.
+
+/* handle:property has no effect, it just returns a value */
+h_noeffect:READ-ONLY.
+/* but handle:method is supposed to have some effect: */
+h_noeffect:CLEAR().                              
+/* just like a function call: */
+UdfNoEffect().                  
+ 
+/* if h_noeffect is a query object handle, the following 
+   statements are effective but they still raise a warning
+   because someone forgot to add the parentheses... */
+h_noeffect:query-open.
+h_noeffect:get-first.
+h_noeffect:get-next.
+                                      
+/* this is better: */
+h_noeffect:query-open().
+h_noeffect:get-first().
+h_noeffect:get-next().
+
+/* a statement similar to this one was found in profiler.p: */ 
+IF c_noeffect EQ ? THEN 
+   c_noeffect EQ "".
+                               
+
+      
\ No newline at end of file

Added: trunk/org.prorefactor.core/META-INF/MANIFEST.MF
===================================================================
--- trunk/org.prorefactor.core/META-INF/MANIFEST.MF	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.core/META-INF/MANIFEST.MF	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,19 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: ProRefactor Core
+Bundle-SymbolicName: org.prorefactor.core
+Bundle-Version: 1.3.0
+Bundle-ClassPath: core.jar
+Bundle-Vendor: ProRefactor.org
+Bundle-Localization: plugin
+Export-Package: com.joanju,
+ org.prorefactor.core,
+ org.prorefactor.core.fun,
+ org.prorefactor.core.schema,
+ org.prorefactor.core.unittest,
+ org.prorefactor.nodetypes,
+ org.prorefactor.treeparser,
+ org.prorefactor.treeparser01,
+ org.prorefactor.treeparserbase,
+ org.prorefactor.widgettypes
+Require-Bundle: org.prorefactor.lib;visibility:=reexport

Modified: trunk/org.prorefactor.core/build.properties
===================================================================
--- trunk/org.prorefactor.core/build.properties	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.core/build.properties	2006-02-10 18:28:17 UTC (rev 44)
@@ -6,13 +6,21 @@
                data/,\
                proparse.schema,\
                *.zip,\
-               *.html
+               *.html,\
+               META-INF/,\
+               .classpath,\
+               .project,\
+               build.properties
 source.core.jar = src/
-src.includes = src/,\
-               proparse_jni.dll,\
+src.includes = proparse_jni.dll,\
                proparse.schema,\
                proparse.dll,\
                plugin.xml,\
                data/,\
-               about.html
+               about.html,\
+               .classpath,\
+               .project,\
+               META-INF/,\
+               build.properties,\
+               core.jar
 jars.compile.order = 

Modified: trunk/org.prorefactor.core/plugin.xml
===================================================================
--- trunk/org.prorefactor.core/plugin.xml	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.core/plugin.xml	2006-02-10 18:28:17 UTC (rev 44)
@@ -1,22 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <?eclipse version="3.0"?>
-<plugin
-   id="org.prorefactor.core"
-   name="ProRefactor Core"
-   version="1.2.4"
-   provider-name="ProRefactor.org"
-   class="">
+<plugin>
 
-   <runtime>
-      <library name="core.jar">
-         <export name="*"/>
-      </library>
-   </runtime>
-
-   <requires>
-      <import plugin="org.junit" export="true"/>
-      <import plugin="org.prorefactor.antlr" export="true"/>
-      <import plugin="org.prorefactor.lib" export="true"/>
-   </requires>
-
 </plugin>

Added: trunk/org.prorefactor.doc/META-INF/MANIFEST.MF
===================================================================
--- trunk/org.prorefactor.doc/META-INF/MANIFEST.MF	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.doc/META-INF/MANIFEST.MF	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,9 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: ProRefactor Documentation
+Bundle-SymbolicName: org.prorefactor.doc; singleton:=true
+Bundle-Version: 1.3.0
+Bundle-Vendor: ProRefactor.org
+Bundle-Localization: plugin
+Require-Bundle: org.eclipse.help
+Eclipse-AutoStart: true

Modified: trunk/org.prorefactor.doc/build.properties
===================================================================
--- trunk/org.prorefactor.doc/build.properties	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.doc/build.properties	2006-02-10 18:28:17 UTC (rev 44)
@@ -8,8 +8,25 @@
                joanju.css,\
                joanju.xsl,\
                joanjupdf.xsl,\
+               toc.xml,\
+               doc.zip,\
+               .project,\
+               META-INF/,\
+               images/,\
+               screenshots/
+src.includes = .project,\
+               META-INF/,\
+               Makefile,\
+               about.html,\
+               build.properties,\
+               doc.zip,\
+               helpcontexts.xml,\
+               images/,\
+               joanju.css,\
+               joanju.xsl,\
+               joanjupdf.xsl,\
                manual.xml,\
-               pdf.bat,\
+               plugin.xml,\
+               screenshots/,\
                toc.xml,\
-               doc.zip,\
-               .project
+               pdf.bat

Modified: trunk/org.prorefactor.doc/helpcontexts.xml
===================================================================
--- trunk/org.prorefactor.doc/helpcontexts.xml	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.doc/helpcontexts.xml	2006-02-10 18:28:17 UTC (rev 44)
@@ -7,5 +7,11 @@
 		<topic href="sec_output_directory.html"
 			label="Output Directory wizard page" />
 	</context>
+	<context id="substituteRefactoring">
+		<description>SUBSTITUTE Refactoring</description>
+		<topic href="sec_substitute_refactoring.html"
+			label="Substitute Refactoring" />
+	</context>
+	
 
 </contexts>

Modified: trunk/org.prorefactor.doc/manual.xml
===================================================================
--- trunk/org.prorefactor.doc/manual.xml	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.doc/manual.xml	2006-02-10 18:28:17 UTC (rev 44)
@@ -856,7 +856,7 @@
       </section>
     </section>
 
-    <section>
+    <section id="sec_substitute_refactoring">
       <title>SUBSTITUTE Refactoring</title>
 
       <para>This refactoring is intended to be used as part of a legacy code
@@ -1569,13 +1569,19 @@
         <listitem>
           <itemizedlist>
             <listitem>
-              <para>IMPORTANT: Added data-type to the schemadump programs. You
-              must re-dump your schema before using this version of
-              ProRefactor. Added data type attribute to fields and variables
-              in the symbol table.</para>
+              <para>IMPORTANT: Added data-type to the schemadump programs. If
+              updating from an older verion of ProRefactor, you must re-dump
+              your schema before using this version of ProRefactor. Added data
+              type attribute to fields and variables in the symbol
+              table.</para>
             </listitem>
 
             <listitem>
+              <para>IMPORTANT: ProRefactor 1.3 requires Java 5.0 or
+              later.</para>
+            </listitem>
+
+            <listitem>
               <para>Added new sub-project named org.eclipse.lib, which
               contains common third party libraries like Jakarta Commons and
               Hibernate.</para>
@@ -1615,6 +1621,14 @@
               refactoring options were set. Thanks Bruce Craigie for this bug
               report.</para>
             </listitem>
+
+            <listitem>
+              <para>Added the early proof of concept Prolint/Eclipse to this
+              project. Prolint/Eclipse is dependent on ProRefactor, but it's
+              not yet decided if the two should be part of the same project.
+              Prolint/Eclipse is in early development, and not yet generally
+              useful for real work.</para>
+            </listitem>
           </itemizedlist>
         </listitem>
       </varlistentry>

Modified: trunk/org.prorefactor.doc/plugin.xml
===================================================================
--- trunk/org.prorefactor.doc/plugin.xml	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.doc/plugin.xml	2006-02-10 18:28:17 UTC (rev 44)
@@ -1,14 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <?eclipse version="3.0"?>
-<plugin
-   id="org.prorefactor.doc"
-   name="ProRefactor Documentation"
-   version="1.2.4"
-   provider-name="ProRefactor.org">
-   <requires>
-      <import plugin="org.eclipse.help"/>
-   </requires>
-   <extension
+<plugin>
+    <extension
          point="org.eclipse.help.toc">
       <toc
             primary="true"

Modified: trunk/org.prorefactor.eclipse/META-INF/MANIFEST.MF
===================================================================
--- trunk/org.prorefactor.eclipse/META-INF/MANIFEST.MF	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.eclipse/META-INF/MANIFEST.MF	2006-02-10 18:28:17 UTC (rev 44)
@@ -1,27 +1,28 @@
 Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
 Bundle-Name: ProRefactor
-Bundle-SymbolicName: org.prorefactor.eclipse; singleton=true
-Bundle-Version: 1.2.4
+Bundle-SymbolicName: org.prorefactor.eclipse; singleton:=true
+Bundle-Version: 1.3.0
 Bundle-ClassPath: eclipse.jar
 Bundle-Activator: org.prorefactor.eclipse.Plugin
 Bundle-Vendor: ProRefactor.org
 Bundle-Localization: plugin
-Require-Bundle: org.eclipse.jface.text;reprovide=true,
- org.eclipse.ui.workbench.texteditor;reprovide=true,
- org.eclipse.ui.editors;reprovide=true,
- org.eclipse.core.resources;reprovide=true,
- org.eclipse.ui;reprovide=true,
- org.prorefactor.refactor;reprovide=true,
- org.prorefactor.core;reprovide=true,
- org.eclipse.search;reprovide=true,
- org.eclipse.compare;reprovide=true,
- org.eclipse.ui.ide;reprovide=true,
- org.eclipse.ui.console;reprovide=true,
- org.eclipse.core.runtime;reprovide=true,
- org.prorefactor.doc,
- org.eclipse.help
+Require-Bundle: org.eclipse.ui;visibility:=reexport,
+ org.eclipse.core.runtime;visibility:=reexport,
+ org.eclipse.help;visibility:=reexport,
+ org.eclipse.jface;visibility:=reexport,
+ org.eclipse.jface.text;visibility:=reexport,
+ org.eclipse.core.resources;visibility:=reexport,
+ org.eclipse.text;visibility:=reexport,
+ org.eclipse.ui.workbench.texteditor;visibility:=reexport,
+ org.eclipse.compare;visibility:=reexport,
+ org.eclipse.ui.workbench;visibility:=reexport,
+ org.eclipse.ui.console;visibility:=reexport,
+ org.eclipse.ui.ide;visibility:=reexport,
+ org.prorefactor.core;visibility:=reexport,
+ org.prorefactor.refactor;visibility:=reexport
 Eclipse-AutoStart: true
-Provide-Package: org.prorefactor.eclipse,
+Export-Package: org.prorefactor.eclipse,
  org.prorefactor.eclipse.actions,
  org.prorefactor.eclipse.dialogs,
  org.prorefactor.eclipse.messages,

Modified: trunk/org.prorefactor.eclipse/build.properties
===================================================================
--- trunk/org.prorefactor.eclipse/build.properties	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.eclipse/build.properties	2006-02-10 18:28:17 UTC (rev 44)
@@ -1,6 +1,5 @@
 bin.includes = plugin.xml,\
                *.jar,\
-               *.zip,\
                *.html,\
                *.ini,\
                *.mappings,\
@@ -8,14 +7,25 @@
                icons/,\
                about.properties,\
                welcome.xml,\
-               plugin.properties
+               plugin.properties,\
+               build.properties,\
+               META-INF/,\
+               .template,\
+               .project,\
+               .classpath
 source.eclipse.jar = src/
 src.includes = *.html,\
                about.ini,\
                about.mappings,\
                about.properties,\
                frog32.gif,\
-               src/,\
                welcome.xml,\
                plugin.properties,\
-               icons/
+               icons/,\
+               eclipse.jar,\
+               plugin.xml,\
+               .classpath,\
+               .project,\
+               .template,\
+               META-INF/,\
+               build.properties

Deleted: trunk/org.prorefactor.eclipse/build.xml
===================================================================
--- trunk/org.prorefactor.eclipse/build.xml	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.eclipse/build.xml	2006-02-10 18:28:17 UTC (rev 44)
@@ -1,235 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project name="org.prorefactor.eclipse" default="build.jars" basedir=".">
-
-	<property name="basews" value="${ws}"/>
-	<property name="baseos" value="${os}"/>
-	<property name="basearch" value="${arch}"/>
-	<property name="basenl" value="${nl}"/>
-
-	<!-- Compiler settings. -->
-	<property name="javacFailOnError" value="false"/>
-	<property name="javacDebugInfo" value="on"/>
-	<property name="javacVerbose" value="true"/>
-	<property name="javacSource" value="1.3"/>
-	<property name="javacTarget" value="1.2"/>
-	<property name="compilerArg" value=""/>
-	<path id="path_bootclasspath">
-		<fileset dir="${java.home}/lib">
-			<include name="*.jar"/>
-		</fileset>
-	</path>
-	<property name="bootclasspath" refid="path_bootclasspath"/>
-
-	<target name="init" depends="properties">
-		<condition property="pluginTemp" value="${buildTempFolder}/plugins">
-			<isset property="buildTempFolder"/>
-		</condition>
-		<property name="pluginTemp" value="${basedir}"/>
-		<condition property="build.result.folder" value="${pluginTemp}/org.prorefactor.eclipse">
-			<isset property="buildTempFolder"/>
-		</condition>
-		<property name="build.result.folder" value="${basedir}"/>
-		<property name="temp.folder" value="${basedir}/temp.folder"/>
-		<property name="plugin.destination" value="${basedir}"/>
-	</target>
-
-	<target name="properties" if="eclipse.running">
-		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
-
-	</target>
-
-	<target name="build.update.jar" depends="init" description="Build the plug-in: org.prorefactor.eclipse for an update site.">
-		<delete dir="${temp.folder}"/>
-		<mkdir dir="${temp.folder}"/>
-		<antcall target="build.jars"/>
-		<antcall target="gather.bin.parts">
-			<param name="destination.temp.folder" value="${temp.folder}/"/>
-		</antcall>
-		<zip destfile="${plugin.destination}/org.prorefactor.eclipse_1.2.4.jar" basedir="${temp.folder}/org.prorefactor.eclipse_1.2.4" filesonly="false" whenempty="skip" update="false"/>
-		<delete dir="${temp.folder}"/>
-	</target>
-
-	<target name="eclipse.jar" depends="init" unless="eclipse.jar" description="Create jar: org.prorefactor.eclipse eclipse.jar.">
-		<delete dir="${temp.folder}/eclipse.jar.bin"/>
-		<mkdir dir="${temp.folder}/eclipse.jar.bin"/>
-		<!-- compile the source code -->
-		<javac destdir="${temp.folder}/eclipse.jar.bin" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bootclasspath}" source="${javacSource}" target="${javacTarget}"		>
-			<compilerarg line="${compilerArg}"/>
-			<classpath>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.jface.text/progfile/eclipse/plugins/org.eclipse.jface.text_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.jface.text/org.eclipse.jface.text_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.runtime/progfile/eclipse/plugins/org.eclipse.core.runtime_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.runtime/org.eclipse.core.runtime_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.osgi/progfile/eclipse/plugins/org.eclipse.osgi_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.osgi/org.eclipse.osgi_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.text/progfile/eclipse/plugins/org.eclipse.text_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.text/org.eclipse.text_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.swt/@dot"/>
-				<pathelement path="..\..\..\progfile\eclipse\plugins\org.eclipse.swt.win32.win32.x86_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.jface/progfile/eclipse/plugins/org.eclipse.jface_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.jface/org.eclipse.jface_3.1.0.jar"/>
-				<pathelement path="..\..\..\progfile\eclipse\plugins\org.eclipse.core.commands_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.workbench.texteditor/progfile/eclipse/plugins/org.eclipse.ui.workbench.texteditor_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.workbench.texteditor/org.eclipse.ui.workbench.texteditor_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui/progfile/eclipse/plugins/org.eclipse.ui_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui/org.eclipse.ui_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.help/progfile/eclipse/plugins/org.eclipse.help_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.help/org.eclipse.help_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.workbench/progfile/eclipse/plugins/org.eclipse.ui.workbench_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.workbench/compatibility.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.workbench/org.eclipse.ui.workbench_3.1.0.jar"/>
-				<pathelement path="../../../progfile/eclipse/plugins/org.eclipse.ui.workbench.compatibility_3.1.0/compatibility.jar"/>
-				<pathelement path="../../../progfile/eclipse/plugins/org.eclipse.ui.workbench.compatibility_3.1.0/org.eclipse.ui.workbench_3.1.0.jar"/>
-				<pathelement path="../../../progfile/eclipse/plugins/org.eclipse.ui.workbench.compatibility_3.1.0/@dot"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.expressions/progfile/eclipse/plugins/org.eclipse.core.expressions_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.expressions/org.eclipse.core.expressions_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.resources/progfile/eclipse/plugins/org.eclipse.core.resources_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.resources/org.eclipse.core.resources_3.1.0.jar"/>
-				<pathelement path="..\..\..\progfile\eclipse\plugins\org.eclipse.core.resources.compatibility_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.resources.win32/org.eclipse.core.resources_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.resources.win32/progfile/eclipse/plugins/org.eclipse.core.resources.win32_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.resources.win32/org.eclipse.core.resources.win32_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.runtime.compatibility/progfile/eclipse/plugins/org.eclipse.core.runtime.compatibility_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.runtime.compatibility/org.eclipse.core.runtime.compatibility_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.update.configurator/progfile/eclipse/plugins/org.eclipse.update.configurator_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.update.configurator/org.eclipse.update.configurator_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ant.core/progfile/eclipse/plugins/org.eclipse.ant.core_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ant.core/org.eclipse.ant.core_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.variables/progfile/eclipse/plugins/org.eclipse.core.variables_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.variables/org.eclipse.core.variables_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.editors/progfile/eclipse/plugins/org.eclipse.ui.editors_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.editors/org.eclipse.ui.editors_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.ide/progfile/eclipse/plugins/org.eclipse.ui.ide_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.ide/org.eclipse.ui.ide_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.win32/org.eclipse.ui.ide_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.win32/progfile/eclipse/plugins/org.eclipse.ui.win32_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.win32/org.eclipse.ui.win32_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.views/progfile/eclipse/plugins/org.eclipse.ui.views_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.views/org.eclipse.ui.views_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.update.core/progfile/eclipse/plugins/org.eclipse.update.core_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.update.core/org.eclipse.update.core_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.update.core.win32/org.eclipse.update.core_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.update.core.win32/@dot"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.update.ui/progfile/eclipse/plugins/org.eclipse.update.ui_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.update.ui/org.eclipse.update.ui_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.forms/progfile/eclipse/plugins/org.eclipse.ui.forms_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.forms/org.eclipse.ui.forms_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.filebuffers/progfile/eclipse/plugins/org.eclipse.core.filebuffers_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.filebuffers/org.eclipse.core.filebuffers_3.1.0.jar"/>
-				<pathelement path="../org.prorefactor.refactor/bin"/>
-				<pathelement path="../org.prorefactor.refactor/refactor.jar"/>
-				<pathelement path="../org.prorefactor.core/bin"/>
-				<pathelement path="../org.prorefactor.core/core.jar"/>
-				<pathelement path="../../../progfile/eclipse/plugins/org.junit_3.8.1/progfile/eclipse/plugins/org.junit_3.8.1/junit.jar"/>
-				<pathelement path="../../../progfile/eclipse/plugins/org.junit_3.8.1/junit.jar"/>
-				<pathelement path="../org.prorefactor.antlr/antlr.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/cglib-full-2.0.2.jar"/>
-				<pathelement path="../org.prorefactor.lib/hsqldb/hsqldb.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/commons-logging-1.0.4.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/dom4j-1.4.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/ehcache-0.9.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/jdbc2_0-stdext.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/jta.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/odmg-3.0.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/xerces-2.4.0.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/xml-apis.jar"/>
-				<pathelement path="../org.prorefactor.lib/jakarta/commons-collections/commons-collections.jar"/>
-				<pathelement path="../org.prorefactor.lib/jakarta/commons-io/commons-io.jar"/>
-				<pathelement path="../org.prorefactor.lib/jakarta/commons-lang/commons-lang.jar"/>
-				<pathelement path="../org.prorefactor.lib/stringtemplate/stringtemplate.jar"/>
-				<pathelement path="../org.prorefactor.lib/bin/"/>
-				<pathelement path="../org.prorefactor.lib/prorefactor.lib.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.search/progfile/eclipse/plugins/org.eclipse.search_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.search/org.eclipse.search_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.compare/progfile/eclipse/plugins/org.eclipse.compare_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.compare/org.eclipse.compare_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.console/progfile/eclipse/plugins/org.eclipse.ui.console_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.ui.console/org.eclipse.ui.console_3.1.0.jar"/>
-				<pathelement path="../org.prorefactor.doc/@dot"/>
-			</classpath>
-			<src path="src/"			/>
-			</javac>
-		<!-- Copy necessary resources -->
-		<copy todir="${temp.folder}/eclipse.jar.bin" failonerror="true" overwrite="false">
-			<fileset dir="src/" excludes="**/*.java, **/package.htm*,null"			/>
-		</copy>
-		<mkdir dir="${build.result.folder}"/>
-		<jar destfile="${build.result.folder}/eclipse.jar" basedir="${temp.folder}/eclipse.jar.bin"/>
-		<delete dir="${temp.folder}/eclipse.jar.bin"/>
-	</target>
-
-	<target name="eclipsesrc.zip" depends="init" unless="eclipsesrc.zip">
-		<mkdir dir="${build.result.folder}"/>
-		<zip destfile="${build.result.folder}/eclipsesrc.zip" filesonly="false" whenempty="skip" update="false">
-			<fileset dir="src/" includes="**/*.java"			/>
-		</zip>
-	</target>
-
-	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: org.prorefactor.eclipse.">
-		<available property="eclipse.jar" file="${build.result.folder}/eclipse.jar"/>
-		<antcall target="eclipse.jar"/>
-	</target>
-
-	<target name="build.sources" depends="init">
-		<available property="eclipsesrc.zip" file="${build.result.folder}/eclipsesrc.zip"/>
-		<antcall target="eclipsesrc.zip"/>
-	</target>
-
-	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
-		<mkdir dir="${destination.temp.folder}/org.prorefactor.eclipse_1.2.4"/>
-		<copy todir="${destination.temp.folder}/org.prorefactor.eclipse_1.2.4" failonerror="true" overwrite="false">
-			<fileset dir="${build.result.folder}" includes="eclipse.jar"			/>
-		</copy>
-		<copy todir="${destination.temp.folder}/org.prorefactor.eclipse_1.2.4" failonerror="true" overwrite="false">
-			<fileset dir="${basedir}" includes="plugin.xml,*.jar,*.zip,*.html,*.ini,*.mappings,*.gif,icons/,about.properties,welcome.xml,plugin.properties"			/>
-		</copy>
-	</target>
-
-	<target name="build.zips" depends="init">
-	</target>
-
-	<target name="gather.sources" depends="init" if="destination.temp.folder">
-		<mkdir dir="${destination.temp.folder}/org.prorefactor.eclipse_1.2.4"/>
-		<copy file="${build.result.folder}/eclipsesrc.zip" todir="${destination.temp.folder}/org.prorefactor.eclipse_1.2.4" failonerror="false" overwrite="false"/>
-		<copy todir="${destination.temp.folder}/org.prorefactor.eclipse_1.2.4" failonerror="false" overwrite="false">
-			<fileset dir="${basedir}" includes="*.html,about.ini,about.mappings,about.properties,frog32.gif,src/,welcome.xml,plugin.properties,icons/"			/>
-		</copy>
-	</target>
-
-	<target name="gather.logs" depends="init" if="destination.temp.folder">
-		<mkdir dir="${destination.temp.folder}/org.prorefactor.eclipse_1.2.4"/>
-		<copy file="${temp.folder}/eclipse.jar.bin.log" todir="${destination.temp.folder}/org.prorefactor.eclipse_1.2.4" failonerror="false" overwrite="false"/>
-	</target>
-
-	<target name="clean" depends="init" description="Clean the plug-in: org.prorefactor.eclipse of all the zips, jars and logs created.">
-		<delete file="${build.result.folder}/eclipse.jar"/>
-		<delete file="${build.result.folder}/eclipsesrc.zip"/>
-		<delete file="${plugin.destination}/org.prorefactor.eclipse_1.2.4.jar"/>
-		<delete file="${plugin.destination}/org.prorefactor.eclipse_1.2.4.zip"/>
-		<delete dir="${temp.folder}"/>
-	</target>
-
-	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
-		<eclipse.convertPath fileSystemPath="C:/work/prorefactor/org.prorefactor.eclipse" property="resourcePath"/>
-		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
-	</target>
-
-	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: org.prorefactor.eclipse.">
-		<delete dir="${temp.folder}"/>
-		<mkdir dir="${temp.folder}"/>
-		<antcall target="build.jars"/>
-		<antcall target="build.sources"/>
-		<antcall target="gather.bin.parts">
-			<param name="destination.temp.folder" value="${temp.folder}/"/>
-		</antcall>
-		<antcall target="gather.sources">
-			<param name="destination.temp.folder" value="${temp.folder}/"/>
-		</antcall>
-		<delete>
-			<fileset dir="${temp.folder}" includes="**/*.bin.log"			/>
-		</delete>
-		<zip destfile="${plugin.destination}/org.prorefactor.eclipse_1.2.4.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip" update="false"/>
-		<delete dir="${temp.folder}"/>
-	</target>
-
-</project>

Modified: trunk/org.prorefactor.eclipse/plugin.xml
===================================================================
--- trunk/org.prorefactor.eclipse/plugin.xml	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.eclipse/plugin.xml	2006-02-10 18:28:17 UTC (rev 44)
@@ -97,9 +97,9 @@
             </separator>
          </menu>
          <action
-               label="&amp;SUBSTITUTE Refactoring"
+               label="&amp;SUBSTITUTE (from string concatenation) Refactoring..."
                class="org.prorefactor.eclipse.actions.SubstituteAction"
-               tooltip="SUBSTITUTE Refactor"
+               tooltip="SUBSTITUTE (from string concatenation) Refactor"
                menubarPath="org.prorefactor.MainMenu/separator1"
                id="org.prorefactor.actions.substitute">
          </action>
@@ -326,9 +326,9 @@
             </separator>
          </menu>
          <action
-               label="&amp;SUBSTITUTE Refactoring"
+               label="&amp;SUBSTITUTE (from string concatenation) Refactoring..."
                class="org.prorefactor.eclipse.actions.SubstituteAction"
-               tooltip="SUBSTITUTE Refactor"
+               tooltip="SUBSTITUTE (from string concatenation) Refactor"
                menubarPath="org.prorefactor.popup.NavMenu/separator1"
                id="org.prorefactor.popup.NavMenu.substitute">
          </action>
@@ -453,7 +453,8 @@
          point="org.eclipse.help.contexts">
       <contexts
             file="helpcontexts.xml"
-            plugin="org.prorefactor.doc"/>
+            plugin="org.prorefactor.doc">
+      </contexts>
    </extension>
 
 </plugin>

Modified: trunk/org.prorefactor.eclipse/src/org/prorefactor/eclipse/actions/SubstituteAction.java
===================================================================
--- trunk/org.prorefactor.eclipse/src/org/prorefactor/eclipse/actions/SubstituteAction.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.eclipse/src/org/prorefactor/eclipse/actions/SubstituteAction.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -1,7 +1,7 @@
 /* Created 2003
  * John Green
  *
- * Copyright (C) 2003 Joanju Limited
+ * Copyright (C) 2003, 2006 Joanju Limited
  * All rights reserved. This program and the accompanying materials 
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -16,10 +16,14 @@
 import org.eclipse.jface.action.IAction;
 import org.eclipse.jface.viewers.ISelection;
 import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.jface.wizard.WizardDialog;
 import org.eclipse.ui.IViewActionDelegate;
 import org.eclipse.ui.IViewPart;
 import org.eclipse.ui.IWorkbenchWindow;
 import org.eclipse.ui.IWorkbenchWindowActionDelegate;
+import org.eclipse.ui.PlatformUI;
+import org.prorefactor.eclipse.wizards.RefactorWizard;
+import org.prorefactor.eclipse.wizards.TextPage;
 import org.prorefactor.refactor.substitute.SubstituteLint;
 import org.prorefactor.refactor.substitute.SubstituteTarget;
 import org.prorefactor.refactor.substitute.SubstituteWrap;
@@ -37,14 +41,22 @@
 public class SubstituteAction
 	implements IWorkbenchWindowActionDelegate, IViewActionDelegate, IProRefactorAction {
 
+	public SubstituteAction() { }
+
+	static {
+		zzHelpText();
+	}
+
+	private static String HELP_TEXT;
+	private static final String TITLE = "SUBSTITUTE Refactoring";
+	private static final String CONTEXT_HELP_ID = "org.prorefactor.doc.substituteRefactoring";
+
 	private ISelection currISelection = null;
 	private ActionManager manager = null;
 	private ProparseLdr parser = null;
 	private TreeSet targetSet = null;
 	private IWorkbenchWindow window;
 
-	public SubstituteAction() { }
-
 	/**
 	 * We can use this method to dispose of any system
 	 * resources we previously allocated.
@@ -56,8 +68,8 @@
 	public void init(IViewPart view) {
 		this.window = view.getSite().getWorkbenchWindow();
 	}
-	public void init(IWorkbenchWindow window) {
-		this.window = window;
+	public void init(IWorkbenchWindow windowIn) {
+		this.window = windowIn;
 	}
 
 	public RefactorResult processFile(int topNode) {
@@ -109,6 +121,22 @@
 		manager = new ActionManager(window, this);
 		if (manager.setup(currISelection) < 1) return;
 		if (parser==null) parser = ProparseLdr.getInstance();
+
+		// Create and run the wizard
+		RefactorWizard wizard = new RefactorWizard();
+		TextPage textPage = new TextPage("text_page");
+		textPage.setTitle(TITLE);
+		wizard.setHelpAvailable(true);
+		wizard.addPage(textPage);
+		WizardDialog dialog = new WizardDialog(window.getShell(), wizard);
+		// Create the dialog, to set a size, before filling the Text page with text.
+		// Otherwise, the Text page will force the dialog to the full screen width.
+		dialog.create();
+		textPage.setText(HELP_TEXT);
+		textPage.setHelpContext(CONTEXT_HELP_ID);
+		dialog.open();
+		if (!wizard.didFinish()) return;
+
 		manager.doRun();
 	}
 
@@ -116,4 +144,17 @@
 		if (iselection instanceof IStructuredSelection) currISelection = iselection;
 	}
 
+	
+	static void zzHelpText() {
+		HELP_TEXT = 
+			"This refactoring replaces string concatenations with the SUBSTITUTE function.\n\n"
+			+ "For example:\n"
+			+ "\t\"File: \" + filename:SCREEN-VALUE + \" was not found.\n"
+			+ "should be replaced with:\n"
+			+ "\tSUBSTITUTE(\"File: &1 was not found.\", filename:SCREEN-VALUE)\n\n"
+			+ "Press the Help button for documentation on this topic."
+			;
+	}
+
+	
 }
\ No newline at end of file

Modified: trunk/org.prorefactor.eclipse/src/org/prorefactor/eclipse/wizards/RefactorDirectoryPage.java
===================================================================
--- trunk/org.prorefactor.eclipse/src/org/prorefactor/eclipse/wizards/RefactorDirectoryPage.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.eclipse/src/org/prorefactor/eclipse/wizards/RefactorDirectoryPage.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -30,7 +30,7 @@
 import org.eclipse.swt.widgets.Label;
 import org.eclipse.swt.widgets.Listener;
 import org.eclipse.swt.widgets.Text;
-import org.eclipse.ui.help.WorkbenchHelp;
+import org.eclipse.ui.PlatformUI;
 
 
 public class RefactorDirectoryPage extends WizardPage {
@@ -58,7 +58,7 @@
 	public void createControl(Composite parent) {
 		Composite composite = new Composite(parent, SWT.NULL);
 		composite.setFont(parent.getFont());
-		WorkbenchHelp.setHelp(composite, CONTEXT_HELP_ID);
+		PlatformUI.getWorkbench().getHelpSystem().setHelp(composite, CONTEXT_HELP_ID);
 
 		initializeDialogUnits(parent);
 

Modified: trunk/org.prorefactor.eclipse/src/org/prorefactor/eclipse/wizards/TextPage.java
===================================================================
--- trunk/org.prorefactor.eclipse/src/org/prorefactor/eclipse/wizards/TextPage.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.eclipse/src/org/prorefactor/eclipse/wizards/TextPage.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -16,6 +16,7 @@
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.swt.widgets.Text;
 import org.eclipse.swt.layout.FillLayout;
+import org.eclipse.ui.PlatformUI;
 
 
 /** A wizard page which displays a read-only edit widget full of text.
@@ -36,6 +37,7 @@
 	}
 
 	private String displayText = "";
+	private String helpContext = null;
 	private Text text;
 
 
@@ -61,6 +63,19 @@
 		text.setText(displayText);
 	}
 
+	
+	@Override
+	public void performHelp() {
+		if (helpContext!=null) PlatformUI.getWorkbench().getHelpSystem().displayHelp(helpContext);
+	}
+	
+	
+	public void setHelpContext(String helpContext) {
+		this.helpContext = helpContext;
+		PlatformUI.getWorkbench().getHelpSystem().setHelp(getControl(), helpContext);
+	}
+
+	
 	public void setText(String theText) {
 		displayText = theText;
 		text.setText(displayText);

Modified: trunk/org.prorefactor.feature/feature.xml
===================================================================
--- trunk/org.prorefactor.feature/feature.xml	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.feature/feature.xml	2006-02-10 18:28:17 UTC (rev 44)
@@ -2,16 +2,17 @@
 <feature
       id="org.prorefactor"
       label="org.prorefactor"
-      version="1.2.4"
+      version="1.3.0"
       provider-name="ProRefactor.org"
       plugin="org.prorefactor.eclipse">
 
    <description url="http://www.prorefactor.org/">
-      ProRefactor.org - code analysis and refactoring for the Progress 4GL.
+      ProRefactor.org - code analysis and refactoring
+for Progress OpenEdge ABL.
    </description>
 
    <copyright>
-      Copyright (C) 2002-2005 Joanju and others
+      Copyright (C) 2002-2006 Joanju and others
    </copyright>
 
    <license url="license.html">
@@ -48,55 +49,58 @@
    </license>
 
    <requires>
-      <import plugin="org.junit"/>
       <import plugin="org.eclipse.jface.text"/>
       <import plugin="org.eclipse.ui.workbench.texteditor"/>
-      <import plugin="org.eclipse.ui.editors"/>
       <import plugin="org.eclipse.core.resources"/>
       <import plugin="org.eclipse.ui"/>
-      <import plugin="org.eclipse.search"/>
       <import plugin="org.eclipse.compare"/>
       <import plugin="org.eclipse.ui.ide"/>
       <import plugin="org.eclipse.ui.console"/>
       <import plugin="org.eclipse.core.runtime"/>
+      <import plugin="org.eclipse.help"/>
       <import plugin="org.eclipse.swt"/>
-      <import plugin="org.eclipse.jface"/>
    </requires>
 
    <plugin
          id="org.prorefactor.core"
          download-size="0"
          install-size="0"
-         version="1.2.3"/>
+         version="0.0.0"/>
 
    <plugin
          id="org.prorefactor.eclipse"
          download-size="0"
          install-size="0"
-         version="1.2.3"/>
+         version="0.0.0"/>
 
    <plugin
          id="org.prorefactor.javadoc"
          download-size="0"
          install-size="0"
-         version="1.2.3"/>
+         version="0.0.0"/>
 
    <plugin
          id="org.prorefactor.refactor"
          download-size="0"
          install-size="0"
-         version="1.2.3"/>
+         version="0.0.0"/>
 
    <plugin
-         id="org.prorefactor.antlr"
+         id="org.prorefactor.doc"
          download-size="0"
          install-size="0"
-         version="2.7.4"/>
+         version="0.0.0"/>
 
    <plugin
-         id="org.prorefactor.doc"
+         id="org.prorefactor.lib"
          download-size="0"
          install-size="0"
-         version="1.2.3"/>
+         version="0.0.0"/>
 
+   <plugin
+         id="org.prolint"
+         download-size="0"
+         install-size="0"
+         version="0.0.0"/>
+
 </feature>

Added: trunk/org.prorefactor.javadoc/META-INF/MANIFEST.MF
===================================================================
--- trunk/org.prorefactor.javadoc/META-INF/MANIFEST.MF	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.javadoc/META-INF/MANIFEST.MF	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,9 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: ProRefactor Javadoc
+Bundle-SymbolicName: org.prorefactor.javadoc; singleton:=true
+Bundle-Version: 1.3.0
+Bundle-Vendor: ProRefactor.org
+Bundle-Localization: plugin
+Require-Bundle: org.eclipse.help
+Eclipse-AutoStart: true

Modified: trunk/org.prorefactor.javadoc/build.properties
===================================================================
--- trunk/org.prorefactor.javadoc/build.properties	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.javadoc/build.properties	2006-02-10 18:28:17 UTC (rev 44)
@@ -5,4 +5,13 @@
                .project,\
                build.properties,\
                build.xml,\
-               javadoc.xml
+               javadoc.xml,\
+               META-INF/
+src.includes = .project,\
+               META-INF/,\
+               about.html,\
+               build.properties,\
+               doc.zip,\
+               javadoc.xml,\
+               plugin.xml,\
+               toc.xml

Modified: trunk/org.prorefactor.javadoc/plugin.xml
===================================================================
--- trunk/org.prorefactor.javadoc/plugin.xml	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.javadoc/plugin.xml	2006-02-10 18:28:17 UTC (rev 44)
@@ -1,14 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <?eclipse version="3.0"?>
-<plugin
-   id="org.prorefactor.javadoc"
-   name="ProRefactor Javadoc"
-   version="1.2.4"
-   provider-name="ProRefactor.org">
-   <requires>
-      <import plugin="org.eclipse.help"/>
-   </requires>
-   <extension
+<plugin>
+    <extension
          point="org.eclipse.help.toc">
       <toc
             primary="true"

Modified: trunk/org.prorefactor.lib/.classpath
===================================================================
--- trunk/org.prorefactor.lib/.classpath	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.lib/.classpath	2006-02-10 18:28:17 UTC (rev 44)
@@ -2,6 +2,9 @@
 <classpath>
 	<classpathentry exported="true" kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
+	<classpathentry exported="true" sourcepath="antlr/antlrsrc.zip" kind="lib" path="antlr/antlr.jar"/>
+	<classpathentry exported="true" sourcepath="jakarta/commons-collections/src.zip" kind="lib" path="jakarta/commons-collections/commons-collections.jar"/>
+	<classpathentry exported="true" sourcepath="stringtemplate/src.zip" kind="lib" path="stringtemplate/stringtemplate.jar"/>
 	<classpathentry exported="true" kind="lib" path="hibernate/cglib-full-2.0.2.jar"/>
 	<classpathentry exported="true" kind="lib" path="hsqldb/hsqldb.jar"/>
 	<classpathentry exported="true" kind="lib" path="hibernate/commons-logging-1.0.4.jar"/>
@@ -12,9 +15,8 @@
 	<classpathentry exported="true" kind="lib" path="hibernate/odmg-3.0.jar"/>
 	<classpathentry exported="true" kind="lib" path="hibernate/xerces-2.4.0.jar"/>
 	<classpathentry exported="true" kind="lib" path="hibernate/xml-apis.jar"/>
-	<classpathentry exported="true" sourcepath="jakarta/commons-collections/src.zip" kind="lib" path="jakarta/commons-collections/commons-collections.jar"/>
 	<classpathentry exported="true" sourcepath="jakarta/commons-io/src.zip" kind="lib" path="jakarta/commons-io/commons-io.jar"/>
 	<classpathentry exported="true" sourcepath="jakarta/commons-lang/src.zip" kind="lib" path="jakarta/commons-lang/commons-lang.jar"/>
-	<classpathentry exported="true" sourcepath="stringtemplate/src.zip" kind="lib" path="stringtemplate/stringtemplate.jar"/>
+	<classpathentry exported="true" kind="lib" path="junit/junit.jar"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>

Added: trunk/org.prorefactor.lib/META-INF/MANIFEST.MF
===================================================================
--- trunk/org.prorefactor.lib/META-INF/MANIFEST.MF	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.lib/META-INF/MANIFEST.MF	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,180 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: ProRefactor required Libraries
+Bundle-SymbolicName: org.prorefactor.lib
+Bundle-Version: 1.3.0
+Bundle-ClassPath: antlr/antlr.jar,
+ jakarta/commons-collections/commons-collections.jar,
+ hibernate/cglib-full-2.0.2.jar,
+ hsqldb/hsqldb.jar,
+ hibernate/commons-logging-1.0.4.jar,
+ hibernate/dom4j-1.4.jar,
+ hibernate/ehcache-0.9.jar,
+ hibernate/jdbc2_0-stdext.jar,
+ hibernate/jta.jar,
+ hibernate/odmg-3.0.jar,
+ hibernate/xerces-2.4.0.jar,
+ hibernate/xml-apis.jar,
+ jakarta/commons-io/commons-io.jar,
+ jakarta/commons-lang/commons-lang.jar,
+ stringtemplate/stringtemplate.jar,
+ junit/junit.jar
+Bundle-Vendor: ProRefactor.org
+Bundle-Localization: plugin
+Export-Package: antlr,
+ antlr.ASdebug,
+ antlr.actions.cpp,
+ antlr.actions.csharp,
+ antlr.actions.java,
+ antlr.actions.python,
+ antlr.build,
+ antlr.collections,
+ antlr.collections.impl,
+ antlr.debug,
+ antlr.debug.misc,
+ antlr.preprocessor,
+ com.werken.saxpath,
+ javax.sql,
+ javax.transaction,
+ javax.transaction.xa,
+ javax.xml.parsers,
+ javax.xml.transform,
+ javax.xml.transform.dom,
+ javax.xml.transform.sax,
+ javax.xml.transform.stream,
+ junit.awtui,
+ junit.extensions,
+ junit.framework,
+ junit.runner,
+ junit.swingui,
+ junit.textui,
+ net.sf.cglib.beans,
+ net.sf.cglib.core,
+ net.sf.cglib.proxy,
+ net.sf.cglib.reflect,
+ net.sf.cglib.transform,
+ net.sf.cglib.transform.hook,
+ net.sf.cglib.transform.impl,
+ net.sf.cglib.util,
+ net.sf.ehcache,
+ net.sf.ehcache.config,
+ net.sf.ehcache.constructs.blocking,
+ net.sf.ehcache.hibernate,
+ net.sf.ehcache.store,
+ org.antlr.stringtemplate,
+ org.antlr.stringtemplate.language,
+ org.antlr.stringtemplate.misc,
+ org.antlr.stringtemplate.test,
+ org.apache.commons.collections,
+ org.apache.commons.collections.bag,
+ org.apache.commons.collections.bidimap,
+ org.apache.commons.collections.buffer,
+ org.apache.commons.collections.collection,
+ org.apache.commons.collections.comparators,
+ org.apache.commons.collections.functors,
+ org.apache.commons.collections.iterators,
+ org.apache.commons.collections.keyvalue,
+ org.apache.commons.collections.list,
+ org.apache.commons.collections.map,
+ org.apache.commons.collections.set,
+ org.apache.commons.io,
+ org.apache.commons.io.filefilter,
+ org.apache.commons.io.input,
+ org.apache.commons.io.output,
+ org.apache.commons.lang,
+ org.apache.commons.lang.builder,
+ org.apache.commons.lang.enum,
+ org.apache.commons.lang.exception,
+ org.apache.commons.lang.math,
+ org.apache.commons.lang.time,
+ org.apache.commons.logging,
+ org.apache.commons.logging.impl,
+ org.apache.html.dom,
+ org.apache.wml,
+ org.apache.wml.dom,
+ org.apache.xerces.dom,
+ org.apache.xerces.dom.events,
+ org.apache.xerces.dom3,
+ org.apache.xerces.dom3.as,
+ org.apache.xerces.dom3.bootstrap,
+ org.apache.xerces.impl,
+ org.apache.xerces.impl.dtd,
+ org.apache.xerces.impl.dtd.models,
+ org.apache.xerces.impl.dv,
+ org.apache.xerces.impl.dv.dtd,
+ org.apache.xerces.impl.dv.util,
+ org.apache.xerces.impl.dv.xs,
+ org.apache.xerces.impl.io,
+ org.apache.xerces.impl.msg,
+ org.apache.xerces.impl.validation,
+ org.apache.xerces.impl.xpath,
+ org.apache.xerces.impl.xpath.regex,
+ org.apache.xerces.impl.xs,
+ org.apache.xerces.impl.xs.dom,
+ org.apache.xerces.impl.xs.identity,
+ org.apache.xerces.impl.xs.models,
+ org.apache.xerces.impl.xs.opti,
+ org.apache.xerces.impl.xs.psvi,
+ org.apache.xerces.impl.xs.traversers,
+ org.apache.xerces.impl.xs.util,
+ org.apache.xerces.jaxp,
+ org.apache.xerces.parsers,
+ org.apache.xerces.util,
+ org.apache.xerces.xni,
+ org.apache.xerces.xni.grammars,
+ org.apache.xerces.xni.parser,
+ org.apache.xerces.xni.psvi,
+ org.apache.xml.serialize,
+ org.apache.xmlcommons,
+ org.dom4j,
+ org.dom4j.bean,
+ org.dom4j.datatype,
+ org.dom4j.dom,
+ org.dom4j.dtd,
+ org.dom4j.io,
+ org.dom4j.io.aelfred,
+ org.dom4j.persistence,
+ org.dom4j.persistence.nativ,
+ org.dom4j.rule,
+ org.dom4j.rule.pattern,
+ org.dom4j.swing,
+ org.dom4j.tree,
+ org.dom4j.util,
+ org.dom4j.xpath,
+ org.dom4j.xpp,
+ org.hsqldb,
+ org.hsqldb.index,
+ org.hsqldb.jdbc,
+ org.hsqldb.lib,
+ org.hsqldb.lib.java,
+ org.hsqldb.resources,
+ org.hsqldb.rowio,
+ org.hsqldb.scriptio,
+ org.hsqldb.store,
+ org.hsqldb.types,
+ org.hsqldb.util,
+ org.jaxen,
+ org.jaxen.dom4j,
+ org.jaxen.expr,
+ org.jaxen.expr.iter,
+ org.jaxen.function,
+ org.jaxen.function.ext,
+ org.jaxen.pattern,
+ org.jaxen.util,
+ org.objectweb.asm,
+ org.odmg,
+ org.saxpath,
+ org.saxpath.conformance,
+ org.saxpath.helpers,
+ org.w3c.dom,
+ org.w3c.dom.css,
+ org.w3c.dom.events,
+ org.w3c.dom.html,
+ org.w3c.dom.ls,
+ org.w3c.dom.ranges,
+ org.w3c.dom.stylesheets,
+ org.w3c.dom.traversal,
+ org.w3c.dom.views,
+ org.xml.sax,
+ org.xml.sax.ext,
+ org.xml.sax.helpers

Added: trunk/org.prorefactor.lib/antlr/LICENSE.txt
===================================================================
--- trunk/org.prorefactor.lib/antlr/LICENSE.txt	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.lib/antlr/LICENSE.txt	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,31 @@
+
+SOFTWARE RIGHTS
+
+ANTLR 1989-2005 Developed by Terence Parr
+Partially supported by University of San Francisco & jGuru.com
+
+We reserve no legal rights to the ANTLR--it is fully in the
+public domain. An individual or company may do whatever
+they wish with source code distributed with ANTLR or the
+code generated by ANTLR, including the incorporation of
+ANTLR, or its output, into commerical software.
+
+We encourage users to develop software with ANTLR. However,
+we do ask that credit is given to us for developing
+ANTLR. By "credit", we mean that if you use ANTLR or
+incorporate any source code into one of your programs
+(commercial product, research project, or otherwise) that
+you acknowledge this fact somewhere in the documentation,
+research report, etc... If you like ANTLR and have
+developed a nice tool with the output, please mention that
+you developed it using ANTLR. In addition, we ask that the
+headers remain intact in our source code. As long as these
+guidelines are kept, we expect to continue enhancing this
+system and expect to make other tools available as they are
+completed.
+
+The primary ANTLR guy:
+
+Terence Parr
+parrt at cs.usfca.edu
+parrt at antlr.org

Added: trunk/org.prorefactor.lib/antlr/README.txt
===================================================================
--- trunk/org.prorefactor.lib/antlr/README.txt	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.lib/antlr/README.txt	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,368 @@
+                            A N T L R 
+======================================================================
+ *SOFTWARE RIGHTS*
+
+ ANTLR 1989-2005 Developed by Terence Parr @ University of San Francisco
+
+ We reserve no legal rights to the ANTLR--it is fully in the
+ public domain. An individual or company may do whatever
+ they wish with source code distributed with ANTLR or the
+ code generated by ANTLR, including the incorporation of
+ ANTLR, or its output, into commerical software.
+
+ We encourage users to develop software with ANTLR. However,
+ we do ask that credit is given to us for developing
+ ANTLR. By "credit", we mean that if you use ANTLR or
+ incorporate any source code into one of your programs
+ (commercial product, research project, or otherwise) that
+ you acknowledge this fact somewhere in the documentation,
+ research report, etc... If you like ANTLR and have
+ developed a nice tool with the output, please mention that
+ you developed it using ANTLR. In addition, we ask that the
+ headers remain intact in our source code. As long as these
+ guidelines are kept, we expect to continue enhancing this
+ system and expect to make other tools available as they are
+ completed.
+
+ The primary ANTLR guy:
+
+ Terence Parr
+ parrt at cs.usfca.edu
+ parrt at antlr.org
+
+______________________________________________________________________
+
+WELCOME TO ANTLR!
+
+If you have problems or think you have found a bug in ANTLR, see the
+section BUGS in the ANTLR manual.
+
+Please consult the INSTALL.txt file for information on tested
+configurations.  If you have a comment about an already tested
+configuration, or have tried ANTKR on a new configuration, please let 
+us know as described in INSTALL.txt. Free software only works if we 
+all help out.
+
+Finally, we cannot guarantee that this release will not completely 
+wipe out all of your work from your system.  We do some simple testing 
+before each release, but you are completely on your own.  We recommend
+testing this release on a source repository that is not critical to 
+your work.  
+
+         THIS SOFTWARE IS SUPPLIED COMPLETELY "AS IS".  
+                       NO WARRANTY....
+
+Thanks for your support!
+
+  -The ANTLR Team-
+
+______________________________________________________________________
+
+WHAT IS ANTLR?
+
+ ANTLR, (AN)other (T)ool for (L)anguage (R)ecognition - formerly known 
+ as PCCTS - is a language tool that provides a framework for 
+ constructing recognizers, compilers, and translators from grammatical 
+ descriptions containing actions in the following languages:
+
+  Java, 
+  C++, 
+  C# or
+  Python
+ 
+ (You can use PCCTS 1.xx to generate C-based parsers).
+
+ Computer language translation has become a common task. While 
+ compilers and tools for traditional computer languages (such as C or 
+ Java) are still being built, their number is dwarfed by the thousands 
+ of mini-languages for which recognizers and translators are being 
+ developed. Programmers construct translators for database formats, 
+  graphical data files (e.g., PostScript, AutoCAD), text processing
+ files (e.g., HTML, SGML).  ANTLR is designed to handle all of your 
+ translation tasks.
+
+ Prof. Terence Parr has been working on ANTLR since 1989 and, together
+ with his colleagues, has made a number of fundamental contributions
+ to parsing theory and language tool construction, leading to the 
+ resurgence of LL(k)-based recognition tools.
+
+ Have a look at the history section at the end of this document on 
+ how ANTLR has evolved over time. For  most  up-to-date informaton 
+ read http://www.antlr.org/history.html.
+______________________________________________________________________
+
+UPGRADING?
+
+ See
+
+   http://www.antlr.org/blog/CHANGES-2.7.6.txt
+
+ for a description of features new in this version. There are no
+ incompatibilties known to a previous 2.7.x installation. If you found
+ a problem please let us know.
+
+______________________________________________________________________
+
+
+INSTALLATION?
+
+ Please read the INSTALL.txt file for installation instructions. The
+ brief summary is:
+
+  $ ./configure 
+  $ make
+  $ make test         # optional
+  $ su root           # optional
+  $ make install
+
+______________________________________________________________________
+
+ANTLR IS INSTALLED - WHAT'S NEXT?
+
+ Please read "doc/getting-started.html" on what you are supposed to
+ do. Here's a very brief summary for the impatient:
+
+ ANTLR is a command line tool. To run ANTLR you need to have JAVA
+ installed. The basic steps are:
+
+  a. write a grammar file - mygrammar.g
+
+  b. run ANTLR like
+
+       $ CLASSPATH=antlr.jar
+
+       $ java antlr.Tool mygrammar.g
+
+  c. write a driver program using source code generated by ANTLR, ie.
+     Main.java, main.cpp, Main.cs or main.py
+
+  d. link generated code, your driver code, ANTLR's core library and
+     any additional library you are using together to get an 
+     executable
+
+  f. run the executable on arbitrary input to be parsed
+
+ For a set of standard examples have a look into directory "examples"
+ and appropriate subdirectories.
+
+______________________________________________________________________
+
+WANT TO KNOW MORE?
+  
+ The documentation is in the "doc" subdirectory and "index.html" is 
+ the main entry point. 
+
+ Further information available at
+
+ http://www.antlr.org
+
+______________________________________________________________________
+
+WHO CONTRIBUTED TO THIS MESS?
+
+ Project Lead and Supreme Dictator Terence Parr, University of San 
+ Franciso
+
+ Help with initial coding John Lilly, Empathy Software 
+
+ C++ code generator by Peter Wells and Ric Klaren
+
+ C# code generation by Micheal Jordan, Kunle Odutola and Anthony 
+ Oguntimehin. 
+
+ Python's universe has been extended by Wolfgang H?felinger and Marq 
+ Kole
+
+ Substantial intellectual effort donated by Loring Craymer, Monty 
+ Zukowski, Jim Coker, Scott Stanchfield, John Mitchell, Chapman 
+ Flack (UNICODE, streams)
+
+ Source changes for Eclipse and NetBeans by Marco van Meegen and 
+ Brian Smith
+
+ Infrastructure support from Perforce - The world's best source 
+ code control system
+
+
+______________________________________________________________________
+
+WANNA KNOW ABOUT ANTLR's HISTORY?
+
+ The PCCTS project began as a parser-generator project for a graduate 
+ course at Purdue University in the Fall of 1988 taught by Hank Dietz
+ "translator-writing systems". Under the guidance of Professor Dietz, 
+ the parser generator, ANTLR (originally called YUCC), continued after
+ the termination of the course and eventually became the subject of 
+ Terence Parr?s Master?s thesis. Originally, lexical analysis was 
+ performed via a simple scanner generator which was soon replaced by 
+ Will Cohen?s DLG in the Fall of 1989 (DFA-based lexical-analyzer 
+ generator, also an offshoot of the graduate translation course). 
+
+ The alpha version of ANTLR was totally rewritten resulting in 1.00B. 
+ Version 1.00B was released via an internet newsgroup (comp.compilers) 
+ posting in February of 1990 and quickly gathered a large following. 
+ 1.00B generated only LL(1) parsers, but allowed the merged 
+ description of lexical and syntactic analysis. It had rudimentary 
+ attribute handling similar to that of YACC and did not incorporate 
+ rule parameters or return values; downward inheritance was very 
+ awkward. 1.00B-generated parsers terminated upon the first syntax 
+ error. Lexical classes (modes) were not allowed and DLG did not have
+ an interactive mode. 
+
+ Upon starting his Ph.D. at Purdue in the Fall of 1990, Terence Parr
+ began the second total rewrite of ANTLR. The method by which grammars
+ may be practically analyzed to generate LL(k) lookahead information 
+ was discovered in August of 1990 just before Terence's return to 
+ Purdue. Version 1.00 incorporated this algorithm and included the AST
+ mechanism, lexical classes, error classes, and automatic error 
+ recovery; code quality and portability were higher. In February of 
+ 1992 1.00 was released via an article in SIGPLAN Notices. Peter Dahl,
+ then Ph.D. candidate, and Professor Matt O'Keefe (both at the 
+ University of Minnesota) tested this version extensively. Dana 
+ Hoggatt (Micro Data Base Systems, Inc.) tested 1.00 heavily. 
+
+ Version 1.06 was released in December 1992 and represented a large 
+ feature enhancement over 1.00. For example, rudimentary semantic 
+ predicates were introduced, error messages were significantly 
+ improved for k>1 lookahead and ANTLR parsers could indicate that 
+ lookahead fetches were to occur only when necessary for the parse 
+ (normally, the lookahead "pipe" was constantly full). Russell Quong
+ joined the project in the Spring of 1992 to aid in the semantic 
+ predicate design. Beginning and advanced tutorials were created and
+ released as well. A makefile generator was included that sets up 
+ dependencies and such correctly for ANTLR and DLG. Very few 1.00 
+ incompatibilities were introduced (1.00 was quite different from 
+ 1.00B in some areas). 
+
+ Version 1.10 was released on August 31, 1993 after Terence?s release
+ from Purdue and incorporated bug fixes, a few feature enhancements 
+ and a major new capability -- an arbitrary lookahead operator 
+ (syntactic predicate), "(a)?b". This feature was codesigned with 
+ Professor Russell Quong also at Purdue. To support infinite 
+ lookahead, a preprocessor flag, ZZINF_LOOK, was created that forced
+ the ANTLR() macro to tokenize all input prior to parsing. Hence, at 
+ any moment, an action or predicate could see the entire input 
+ sentence. The predicate mechanism of 1.06 was extended to allow 
+ multiple predicates to be hoisted; the syntactic context of a 
+ predicate could also be moved along with the predicate. 
+
+ In February of 1994, SORCERER was released. This tool allowed the
+ user to parse child-sibling trees by specifying a grammar rather than
+ building a recursive-descent tree walker by hand. Aaron Sawdey at The
+ University of Minnesota became a second author of SORCERER after the 
+ initial release. On April 1, 1994, PCCTS 1.20 was released. This was 
+ the first version to actively support C++ output. It also included 
+ important fixes regarding semantic predicates and (..)+ subrules. 
+ This version also introduced token classes, the "not" operator, and 
+ token ranges. 
+
+ On June 19, 1994, SORCERER 1.00B9 was released. Gary Funck of 
+ Intrepid Technology joined the SORCERER team and provided very 
+ valuable suggestions regarding the "transform" mode of SORCERER. 
+
+ On August 8, 1994, PCCTS 1.21 was released. It mainly cleaned up the
+ C++ output and included a number of bug fixes. 
+
+ From the 1.21 release forward, the maintenance and support of all 
+ PCCTS tools was picked up by Parr Research Corporation. 
+
+ A sophisticated error handling mechanism called "parser exception 
+ handling" was released for version 1.30. 1.31 fixed a few bugs. 
+
+ Release 1.33 is the version corresponding to the initial book release. 
+
+ ANTLR 2.0.0 came out around May 1997 and was partially funded so 
+ Terence hired John Lilley, a maniac coder and serious ANTLR hacker, 
+ to build much of the initial version. Terence did the grammar 
+ analyzer, naturally. 
+
+ John Mitchell, Jim Coker, Scott Stanchfield, and Monty Zukowski 
+ donate lots of brain power to ANTLR 2.xx in general. 
+
+ ANTLR 2.1.0, July 1997, mainly improved parsing performance, 
+ decreased parser memory requirements, and added a lot of cool lexer
+ features including a case-insensitivity option. 
+
+ ANTLR 2.2.0, December 1997, saw the introduction of the new 
+ http://www.antlr.org website.  This release also added grammar 
+ inheritance, enhanced AST support, and enhanced lexical translation
+ support (each lexical rule now was considered to return a Token 
+ object even when referenced by another lexical rule). 
+
+ ANTLR 2.3.0, June 1998, was the first version to have Peter Wells
+ C++ code generator. 
+
+ ANTLR 2.4.0, September 1998, introduced the ParseView parser debugger
+ by Scott Stanchfield.  This version also had a semi-functional -html
+ option to generate HTML from your grammar for reading purposes. Scott
+ and Terence updated the file I/O to be JDK 1.1. 
+
+ ANTLR 2.5.0, November 1998, introduced the filter option for the lexer
+ that lets ANTLR behave like SED or AWK. 
+
+ ANTLR 2.6.0, March 1999, introduced token streams. Chapman Flack, 
+ Purdue Graduate student, pounded me at the right moment about streams,
+ nudging me in the right direction. 
+
+ MageLang Institute currently provides support and continues 
+ development of ANTLR. 
+
+ MageLang becomes jGuru.com as we quit doing Java training and start 
+ building the jGuru Java developer's website. 
+
+ 2.7.0 released January 19, 2000 had the following enhancements:
+
+  * Nongreedy subrules 
+  * Heterogeneous trees 
+  * Element options.  To support heterogeneous trees, elements such 
+    as token references may now include options. 
+  * Exception hierarchy redesign 
+  * XML serialization 
+  * Improved C++ code generator 
+  * New Sather code generator 
+
+ 2.7.1 released October 1, 2000 had the following enhancements 
+
+  * ANTLR now allows UNICODE characters because Terence made case-
+    statement expressions more efficient ;)  See the unicode example 
+    in the distribution and the brief blurb in the documentation. 
+  * Massively improved C++ code generator (Thanks to Ric Klaren). 
+  * Added automatic column setting support. 
+  * Ter added throws to tree and regular parsers . 
+
+ 2.7.2 release January 19, 2003 was mainly a bug fix release, 
+ 
+  * but also included a C# code generator by Micheal Jordan, Kunle 
+    Odutola and Anthony Oguntimehin. :) 
+  * I (who, Ter?) added an antlr.build.Tool 'cause I hate ANT. This
+    release does UNICODE properly now. Added limited lexical lookahead
+    hoisting. Sather code generator disappears. Source changes for 
+    Eclipse and NetBeans by Marco van Meegen and Brian Smith. 
+
+ 2.7.3 released March 22, 2004 was mainly a bug fix release, 
+
+  * but included the parse-tree/derivation code to aid in debugging 
+  * plus the cool TokenStreamRewriteEngine that makes rewriting or 
+    tweaking input files particularly easy. 
+
+ 2.7.4 released May 9, 2004 was mainly a bug fix release.
+
+ 2.7.5 release Xmas 2004 had the following enhancements:
+
+  * A Python code generator has been implemented and contributed
+    by Wolfang Haefelinger and Marq Kole.
+
+  * A new make/autoconf framework as been contributed by Wolfgang
+    Haefelinger
+
+  * A MSI based installer has been contributed by Wolfgang Haefelinger. 
+
+ 2.7.6 release xmas 2005 was mainly a bug fix release.
+
+  * Scott Stanchfield added file/line information for Java target and
+    cleaned up a bunch of classloader stuff.
+
+  * Added stuff to support Prashant Deva's cool ANTLRStudio.
+    
+======================================================================
+             README.txt - last update December 18th, 2004

Added: trunk/org.prorefactor.lib/antlr/antlr.jar
===================================================================
(Binary files differ)


Property changes on: trunk/org.prorefactor.lib/antlr/antlr.jar
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/org.prorefactor.lib/antlr/antlrsrc.zip
===================================================================
(Binary files differ)


Property changes on: trunk/org.prorefactor.lib/antlr/antlrsrc.zip
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/org.prorefactor.lib/antlr/version.txt
===================================================================
--- trunk/org.prorefactor.lib/antlr/version.txt	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.lib/antlr/version.txt	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1 @@
+Antlr version 2.7.6

Modified: trunk/org.prorefactor.lib/build.properties
===================================================================
--- trunk/org.prorefactor.lib/build.properties	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.lib/build.properties	2006-02-10 18:28:17 UTC (rev 44)
@@ -9,8 +9,10 @@
                jakarta/,\
                readme.txt,\
                bin/,\
-               prorefactor.lib.jar,\
-               stringtemplate/
+               stringtemplate/,\
+               antlr/,\
+               junit/,\
+               META-INF/
 src.includes = .classpath,\
                .project,\
                build.properties,\
@@ -35,7 +37,8 @@
                readme.txt,\
                jakarta/,\
                bin/,\
-               stringtemplate/
-jars.compile.order = prorefactor.lib.jar
-source.prorefactor.lib.jar = jakarta/commons-io-1.0/src/
-output.prorefactor.lib.jar = bin/
+               stringtemplate/,\
+               junit/,\
+               antlr/,\
+               META-INF/
+jars.compile.order = 

Added: trunk/org.prorefactor.lib/junit/about.html
===================================================================
--- trunk/org.prorefactor.lib/junit/about.html	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.lib/junit/about.html	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,39 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
+<html>
+<head>
+<title>About</title>
+<meta http-equiv=Content-Type content="text/html; charset=iso-8859-1">
+</head>
+<body lang="EN-US">
+<h2>About This Content</h2>
+
+<p>February 24, 2005</p>	
+<h3>License</h3>
+
+<p>The Eclipse Foundation makes available all content in this plug-in (&quot;Content&quot;).  Unless otherwise indicated below, the Content is provided to you under the terms and conditions of the
+Eclipse Public License Version 1.0 (&quot;EPL&quot;).  A copy of the EPL is available at <a href="http://www.eclipse.org/legal/epl-v10.html">http://www.eclipse.org/legal/epl-v10.html</a>.
+For purposes of the EPL, &quot;Program&quot; will mean the Content.</p>
+
+<p>If you did not receive this Content directly from the Eclipse Foundation, the Content is being redistributed by another party (&quot;Redistributor&quot;) and different terms and conditions may
+apply to your use of any object code in the Content.  Check the Redistributor's license that was provided with the Content.  If no such license exists, contact the Redistributor.  Unless otherwise
+indicated below, the terms and conditions of the EPL still apply to any source code in the Content.</p>
+
+<h3>Third Party Content</h3>
+
+<p>The Content includes items that have been sourced from third parties as follows:</p>
+
+<p><b>JUnit 3.8.1</b></p>
+
+<p>The plug-in is accompanied by software developed by JUnit.org.  The JUnit 3.8.1 code included with the plug-in includes no modifications.
+Your use of JUnit 3.8.1 in both source and binary code form contained in the plug-in is subject to the terms and conditions of the 
+Common Public License Version 1.0 (&quot;CPL&quot;).  A copy of the CPL is available at <a href="http://www.eclipse.org/legal/cpl-v10.html">http://www.eclipse.org/legal/cpl-v10.html</a>.
+The binary code is located in junit.jar and the source code is located in src.jar.</p>
+
+<p>i) IBM effectively disclaims on behalf of all Contributors all warranties and conditions, express and implied, including warranties or conditions of title and non-infringement, and implied warranties or conditions of merchantability and fitness for a particular purpose;</p>
+
+<p>ii) IBM effectively excludes on behalf of all Contributors all liability for damages, including direct, indirect, special, incidental and consequential damages, such as lost profits;</p>
+
+<p>iii) IBM states that any provisions which differ from the CPL are offered by that IBM alone and not by any other party.</p>
+
+</body>
+</html>
\ No newline at end of file

Added: trunk/org.prorefactor.lib/junit/junit.jar
===================================================================
(Binary files differ)


Property changes on: trunk/org.prorefactor.lib/junit/junit.jar
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/org.prorefactor.lib/plugin.xml
===================================================================
--- trunk/org.prorefactor.lib/plugin.xml	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.lib/plugin.xml	2006-02-10 18:28:17 UTC (rev 44)
@@ -1,57 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <?eclipse version="3.0"?>
-<plugin
-   id="org.prorefactor.lib"
-   name="ProRefactor required Libraries"
-   version="1.2.4"
-   provider-name="ProRefactor.org">
+<plugin>
 
-   <runtime>
-      <library name="hibernate/cglib-full-2.0.2.jar">
-         <export name="*"/>
-      </library>
-      <library name="hsqldb/hsqldb.jar">
-         <export name="*"/>
-      </library>
-      <library name="hibernate/commons-logging-1.0.4.jar">
-         <export name="*"/>
-      </library>
-      <library name="hibernate/dom4j-1.4.jar">
-         <export name="*"/>
-      </library>
-      <library name="hibernate/ehcache-0.9.jar">
-         <export name="*"/>
-      </library>
-      <library name="hibernate/jdbc2_0-stdext.jar">
-         <export name="*"/>
-      </library>
-      <library name="hibernate/jta.jar">
-         <export name="*"/>
-      </library>
-      <library name="hibernate/odmg-3.0.jar">
-         <export name="*"/>
-      </library>
-      <library name="hibernate/xerces-2.4.0.jar">
-         <export name="*"/>
-      </library>
-      <library name="hibernate/xml-apis.jar">
-         <export name="*"/>
-      </library>
-      <library name="prorefactor.lib.jar">
-         <export name="*"/>
-      </library>
-      <library name="jakarta/commons-collections/commons-collections.jar">
-         <export name="*"/>
-      </library>
-      <library name="jakarta/commons-io/commons-io.jar">
-         <export name="*"/>
-      </library>
-      <library name="jakarta/commons-lang/commons-lang.jar">
-         <export name="*"/>
-      </library>
-      <library name="stringtemplate/stringtemplate.jar">
-         <export name="*"/>
-      </library>
-   </runtime>
-
+   
 </plugin>

Modified: trunk/org.prorefactor.refactor/.classpath
===================================================================
--- trunk/org.prorefactor.refactor/.classpath	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.refactor/.classpath	2006-02-10 18:28:17 UTC (rev 44)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <classpath>
 	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
 	<classpathentry exported="true" kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>

Added: trunk/org.prorefactor.refactor/META-INF/MANIFEST.MF
===================================================================
--- trunk/org.prorefactor.refactor/META-INF/MANIFEST.MF	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.refactor/META-INF/MANIFEST.MF	2006-02-10 18:28:17 UTC (rev 44)
@@ -0,0 +1,28 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: ProRefactor Refactorings
+Bundle-SymbolicName: org.prorefactor.refactor
+Bundle-Version: 1.3.0
+Bundle-ClassPath: refactor.jar
+Bundle-Vendor: ProRefactor.org
+Bundle-Localization: plugin
+Export-Package: org.prorefactor.refactor,
+ org.prorefactor.refactor.action,
+ org.prorefactor.refactor.appendprogram,
+ org.prorefactor.refactor.bubbledecs,
+ org.prorefactor.refactor.macrolevel,
+ org.prorefactor.refactor.messages,
+ org.prorefactor.refactor.noundo,
+ org.prorefactor.refactor.settings,
+ org.prorefactor.refactor.source,
+ org.prorefactor.refactor.substitute,
+ org.prorefactor.refactor.tfnames,
+ org.prorefactor.refactor.unittest,
+ org.prorefactor.refactor.util,
+ org.prorefactor.refactor.wrapproc,
+ org.prorefactor.treeparser03
+Require-Bundle: org.prorefactor.lib;visibility:=reexport,
+ org.prorefactor.core;visibility:=reexport,
+ org.eclipse.jface.text;visibility:=reexport,
+ org.eclipse.swt;visibility:=reexport,
+ org.eclipse.jface;visibility:=reexport

Modified: trunk/org.prorefactor.refactor/build.properties
===================================================================
--- trunk/org.prorefactor.refactor/build.properties	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.refactor/build.properties	2006-02-10 18:28:17 UTC (rev 44)
@@ -1,15 +1,23 @@
 bin.includes = plugin.xml,\
                *.jar,\
-               *.zip,\
                icons/,\
                data/,\
                prorefactor/,\
                *.html,\
-               4gl/
+               4gl/,\
+               META-INF/,\
+               .classpath,\
+               .project,\
+               build.properties
 source.refactor.jar = src/
 src.includes = *.html,\
-               src/,\
                prorefactor/,\
                plugin.xml,\
                data/,\
-               4gl/
+               4gl/,\
+               refactor.jar,\
+               refactorsrc.zip,\
+               META-INF/,\
+               build.properties,\
+               .project,\
+               .classpath

Deleted: trunk/org.prorefactor.refactor/build.xml
===================================================================
--- trunk/org.prorefactor.refactor/build.xml	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.refactor/build.xml	2006-02-10 18:28:17 UTC (rev 44)
@@ -1,179 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project name="org.prorefactor.refactor" default="build.jars" basedir=".">
-
-	<property name="basews" value="${ws}"/>
-	<property name="baseos" value="${os}"/>
-	<property name="basearch" value="${arch}"/>
-	<property name="basenl" value="${nl}"/>
-
-	<!-- Compiler settings. -->
-	<property name="javacFailOnError" value="false"/>
-	<property name="javacDebugInfo" value="on"/>
-	<property name="javacVerbose" value="true"/>
-	<property name="javacSource" value="1.3"/>
-	<property name="javacTarget" value="1.2"/>
-	<property name="compilerArg" value=""/>
-	<path id="path_bootclasspath">
-		<fileset dir="${java.home}/lib">
-			<include name="*.jar"/>
-		</fileset>
-	</path>
-	<property name="bootclasspath" refid="path_bootclasspath"/>
-
-	<target name="init" depends="properties">
-		<condition property="pluginTemp" value="${buildTempFolder}/plugins">
-			<isset property="buildTempFolder"/>
-		</condition>
-		<property name="pluginTemp" value="${basedir}"/>
-		<condition property="build.result.folder" value="${pluginTemp}/org.prorefactor.refactor">
-			<isset property="buildTempFolder"/>
-		</condition>
-		<property name="build.result.folder" value="${basedir}"/>
-		<property name="temp.folder" value="${basedir}/temp.folder"/>
-		<property name="plugin.destination" value="${basedir}"/>
-	</target>
-
-	<target name="properties" if="eclipse.running">
-		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
-
-	</target>
-
-	<target name="build.update.jar" depends="init" description="Build the plug-in: org.prorefactor.refactor for an update site.">
-		<delete dir="${temp.folder}"/>
-		<mkdir dir="${temp.folder}"/>
-		<antcall target="build.jars"/>
-		<antcall target="gather.bin.parts">
-			<param name="destination.temp.folder" value="${temp.folder}/"/>
-		</antcall>
-		<zip destfile="${plugin.destination}/org.prorefactor.refactor_1.2.4.jar" basedir="${temp.folder}/org.prorefactor.refactor_1.2.4" filesonly="false" whenempty="skip" update="false"/>
-		<delete dir="${temp.folder}"/>
-	</target>
-
-	<target name="refactor.jar" depends="init" unless="refactor.jar" description="Create jar: org.prorefactor.refactor refactor.jar.">
-		<delete dir="${temp.folder}/refactor.jar.bin"/>
-		<mkdir dir="${temp.folder}/refactor.jar.bin"/>
-		<!-- compile the source code -->
-		<javac destdir="${temp.folder}/refactor.jar.bin" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bootclasspath}" source="${javacSource}" target="${javacTarget}"		>
-			<compilerarg line="${compilerArg}"/>
-			<classpath>
-				<pathelement path="../org.prorefactor.core/bin"/>
-				<pathelement path="../org.prorefactor.core/core.jar"/>
-				<pathelement path="../../../progfile/eclipse/plugins/org.junit_3.8.1/progfile/eclipse/plugins/org.junit_3.8.1/junit.jar"/>
-				<pathelement path="../../../progfile/eclipse/plugins/org.junit_3.8.1/junit.jar"/>
-				<pathelement path="../org.prorefactor.antlr/antlr.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/cglib-full-2.0.2.jar"/>
-				<pathelement path="../org.prorefactor.lib/hsqldb/hsqldb.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/commons-logging-1.0.4.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/dom4j-1.4.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/ehcache-0.9.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/jdbc2_0-stdext.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/jta.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/odmg-3.0.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/xerces-2.4.0.jar"/>
-				<pathelement path="../org.prorefactor.lib/hibernate/xml-apis.jar"/>
-				<pathelement path="../org.prorefactor.lib/jakarta/commons-collections/commons-collections.jar"/>
-				<pathelement path="../org.prorefactor.lib/jakarta/commons-io/commons-io.jar"/>
-				<pathelement path="../org.prorefactor.lib/jakarta/commons-lang/commons-lang.jar"/>
-				<pathelement path="../org.prorefactor.lib/stringtemplate/stringtemplate.jar"/>
-				<pathelement path="../org.prorefactor.lib/bin/"/>
-				<pathelement path="../org.prorefactor.lib/prorefactor.lib.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.swt/@dot"/>
-				<pathelement path="..\..\..\progfile\eclipse\plugins\org.eclipse.swt.win32.win32.x86_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.jface/progfile/eclipse/plugins/org.eclipse.jface_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.jface/org.eclipse.jface_3.1.0.jar"/>
-				<pathelement path="..\..\..\progfile\eclipse\plugins\org.eclipse.core.commands_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.runtime/progfile/eclipse/plugins/org.eclipse.core.runtime_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.runtime/org.eclipse.core.runtime_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.osgi/progfile/eclipse/plugins/org.eclipse.osgi_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.osgi/org.eclipse.osgi_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.jface.text/progfile/eclipse/plugins/org.eclipse.jface.text_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.jface.text/org.eclipse.jface.text_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.text/progfile/eclipse/plugins/org.eclipse.text_3.1.0.jar"/>
-				<pathelement path="../../prorefactor_work/workspace/org.eclipse.text/org.eclipse.text_3.1.0.jar"/>
-			</classpath>
-			<src path="src/"			/>
-			</javac>
-		<!-- Copy necessary resources -->
-		<copy todir="${temp.folder}/refactor.jar.bin" failonerror="true" overwrite="false">
-			<fileset dir="src/" excludes="**/*.java, **/package.htm*,null"			/>
-		</copy>
-		<mkdir dir="${build.result.folder}"/>
-		<jar destfile="${build.result.folder}/refactor.jar" basedir="${temp.folder}/refactor.jar.bin"/>
-		<delete dir="${temp.folder}/refactor.jar.bin"/>
-	</target>
-
-	<target name="refactorsrc.zip" depends="init" unless="refactorsrc.zip">
-		<mkdir dir="${build.result.folder}"/>
-		<zip destfile="${build.result.folder}/refactorsrc.zip" filesonly="false" whenempty="skip" update="false">
-			<fileset dir="src/" includes="**/*.java"			/>
-		</zip>
-	</target>
-
-	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: org.prorefactor.refactor.">
-		<available property="refactor.jar" file="${build.result.folder}/refactor.jar"/>
-		<antcall target="refactor.jar"/>
-	</target>
-
-	<target name="build.sources" depends="init">
-		<available property="refactorsrc.zip" file="${build.result.folder}/refactorsrc.zip"/>
-		<antcall target="refactorsrc.zip"/>
-	</target>
-
-	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
-		<mkdir dir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4"/>
-		<copy todir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4" failonerror="true" overwrite="false">
-			<fileset dir="${build.result.folder}" includes="refactor.jar"			/>
-		</copy>
-		<copy todir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4" failonerror="true" overwrite="false">
-			<fileset dir="${basedir}" includes="plugin.xml,*.jar,*.zip,icons/,data/,prorefactor/,*.html,4gl/"			/>
-		</copy>
-	</target>
-
-	<target name="build.zips" depends="init">
-	</target>
-
-	<target name="gather.sources" depends="init" if="destination.temp.folder">
-		<mkdir dir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4"/>
-		<copy file="${build.result.folder}/refactorsrc.zip" todir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4" failonerror="false" overwrite="false"/>
-		<copy todir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4" failonerror="false" overwrite="false">
-			<fileset dir="${basedir}" includes="*.html,src/,prorefactor/,plugin.xml,data/,4gl/"			/>
-		</copy>
-	</target>
-
-	<target name="gather.logs" depends="init" if="destination.temp.folder">
-		<mkdir dir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4"/>
-		<copy file="${temp.folder}/refactor.jar.bin.log" todir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4" failonerror="false" overwrite="false"/>
-	</target>
-
-	<target name="clean" depends="init" description="Clean the plug-in: org.prorefactor.refactor of all the zips, jars and logs created.">
-		<delete file="${build.result.folder}/refactor.jar"/>
-		<delete file="${build.result.folder}/refactorsrc.zip"/>
-		<delete file="${plugin.destination}/org.prorefactor.refactor_1.2.4.jar"/>
-		<delete file="${plugin.destination}/org.prorefactor.refactor_1.2.4.zip"/>
-		<delete dir="${temp.folder}"/>
-	</target>
-
-	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
-		<eclipse.convertPath fileSystemPath="C:/work/prorefactor/org.prorefactor.refactor" property="resourcePath"/>
-		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
-	</target>
-
-	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: org.prorefactor.refactor.">
-		<delete dir="${temp.folder}"/>
-		<mkdir dir="${temp.folder}"/>
-		<antcall target="build.jars"/>
-		<antcall target="build.sources"/>
-		<antcall target="gather.bin.parts">
-			<param name="destination.temp.folder" value="${temp.folder}/"/>
-		</antcall>
-		<antcall target="gather.sources">
-			<param name="destination.temp.folder" value="${temp.folder}/"/>
-		</antcall>
-		<delete>
-			<fileset dir="${temp.folder}" includes="**/*.bin.log"			/>
-		</delete>
-		<zip destfile="${plugin.destination}/org.prorefactor.refactor_1.2.4.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip" update="false"/>
-		<delete dir="${temp.folder}"/>
-	</target>
-
-</project>

Modified: trunk/org.prorefactor.refactor/plugin.xml
===================================================================
--- trunk/org.prorefactor.refactor/plugin.xml	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.refactor/plugin.xml	2006-02-10 18:28:17 UTC (rev 44)
@@ -1,23 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <?eclipse version="3.0"?>
-<plugin
-   id="org.prorefactor.refactor"
-   name="ProRefactor Refactorings"
-   version="1.2.4"
-   provider-name="ProRefactor.org"
-   >
+<plugin>
 
-   <runtime>
-      <library name="refactor.jar">
-         <export name="*"/>
-      </library>
-   </runtime>
-
-   <requires>
-      <import plugin="org.prorefactor.core" export="true"/>
-      <import plugin="org.eclipse.swt" export="true"/>
-      <import plugin="org.eclipse.jface" export="true"/>
-      <import plugin="org.eclipse.jface.text" export="true"/>
-   </requires>
-
 </plugin>

Modified: trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/ReviewChangesDialog.java
===================================================================
--- trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/ReviewChangesDialog.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/ReviewChangesDialog.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -97,11 +97,12 @@
 
 
 
-	void createShell(Display display) {
+	void createShell(Display displayIn) {
 
 		GridData griddata;
 
-		shell = new Shell(display, SWT.TITLE | SWT.RESIZE | SWT.APPLICATION_MODAL);
+		shell = new Shell(displayIn, SWT.TITLE | SWT.RESIZE | SWT.APPLICATION_MODAL);
+		shell.setLayout(new GridLayout(1, false));
 
 		GridLayout gridLayout = new GridLayout();
 		gridLayout.numColumns = 1;
@@ -113,9 +114,9 @@
 		griddata.horizontalSpan = 2;
 		sashForm.setLayoutData(griddata);
 		
-		font = new Font(display, "Courier New", 9, SWT.NORMAL);
+		font = new Font(displayIn, "Courier New", 9, SWT.NORMAL);
 
-		highlightColor = new Color(display, 255, 255, 0);
+		highlightColor = new Color(displayIn, 255, 255, 0);
 
 		// The two text widgets
 		text1 = createText(sashForm);
@@ -199,17 +200,17 @@
 		});
 
 		// Window dressing - the icon
-		windowIcon = new Image(display,
+		windowIcon = new Image(displayIn,
 			getClass().getClassLoader().getResourceAsStream("icons/joanju.gif"));
 
 		// Shell settings
-		int useWidth = (display.getClientArea().width * 4) / 5;
+		int useWidth = (displayIn.getClientArea().width * 4) / 5;
 		shell.setSize(useWidth, 700);
 		// Use a fixed position.
 		// It's annoying to have Windows pop it up in a different spot every time.
 		shell.setLocation(85, 60);
 		shell.setText(windowTitle + " - " + filename1);
-		shell.setLayout(gridLayout);
+		// shell.setLayout(gridLayout);
 		shell.setImage(windowIcon);
 		shell.addDisposeListener(new DisposeListener() {
 			public void widgetDisposed(DisposeEvent e) {

Modified: trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/util/Strings.java
===================================================================
--- trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/util/Strings.java	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.refactor/src/org/prorefactor/refactor/util/Strings.java	2006-02-10 18:28:17 UTC (rev 44)
@@ -10,7 +10,12 @@
  */
 package org.prorefactor.refactor.util;
 
+import org.eclipse.jface.text.BadLocationException;
+import org.eclipse.jface.text.DefaultLineTracker;
+import org.eclipse.jface.text.ILineTracker;
+import org.eclipse.jface.text.IRegion;
 
+
 /*******************************************************************************
  * Copyright (c) 2000, 2003 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials 
@@ -22,11 +27,6 @@
  *     IBM Corporation - initial API and implementation
  *******************************************************************************/
 
-import org.eclipse.jface.text.BadLocationException;
-import org.eclipse.jface.text.DefaultLineTracker;
-import org.eclipse.jface.text.ILineTracker;
-import org.eclipse.jface.text.IRegion;
-
 /**
  * Helper class to provide String manipulation functions not available in standard JDK.
  * Copied from org.eclipse.jdt.internal.corext.util.Strings.


Property changes on: trunk/org.prorefactor.update
___________________________________________________________________
Name: svn:ignore
   - features
plugins
.sitebuild

   + features
plugins
.sitebuild
logs.zip


Modified: trunk/org.prorefactor.update/site.xml
===================================================================
--- trunk/org.prorefactor.update/site.xml	2006-02-07 17:58:12 UTC (rev 43)
+++ trunk/org.prorefactor.update/site.xml	2006-02-10 18:28:17 UTC (rev 44)
@@ -1,15 +1,14 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <site>
-
    <description url="http://prorefactor.org/update/">
       ProRefactor Update Site
    </description>
-   <feature url="features/org.prorefactor_1.2.4.jar" id="org.prorefactor" version="1.2.4">
+   <feature url="features/org.prorefactor_1.3.0.jar" id="org.prorefactor" version="1.3.0">
       <category name="ProRefactor.org"/>
    </feature>
    <category-def name="ProRefactor.org" label="ProRefactor.org">
       <description>
-         Analysis and refactoring for Progress 4GL source code.
+         Analysis and refactoring for Progress OE ABL source code.
       </description>
    </category-def>
 </site>



From johnallengreen at berlios.de  Fri Feb 10 23:36:26 2006
From: johnallengreen at berlios.de (johnallengreen at BerliOS)
Date: Fri, 10 Feb 2006 23:36:26 +0100
Subject: [Prorefactor-svn] r45 - in trunk: org.prolint.core org.prorefactor.core org.prorefactor.doc org.prorefactor.eclipse org.prorefactor.javadoc org.prorefactor.lib org.prorefactor.refactor
Message-ID: <200602102236.k1AMaQH1020586@sheep.berlios.de>

Author: johnallengreen
Date: 2006-02-10 23:36:25 +0100 (Fri, 10 Feb 2006)
New Revision: 45

Modified:
   trunk/org.prolint.core/build.properties
   trunk/org.prorefactor.core/build.properties
   trunk/org.prorefactor.doc/build.properties
   trunk/org.prorefactor.doc/manual.xml
   trunk/org.prorefactor.eclipse/build.properties
   trunk/org.prorefactor.javadoc/build.properties
   trunk/org.prorefactor.lib/build.properties
   trunk/org.prorefactor.refactor/build.properties
Log:
Changed build.properties - don't deploy .project or .classpath. It makes importing the ProRefactor projects using "import external project" more messy, with incorrect hard-coded path to the source "src" folder.

Modified: trunk/org.prolint.core/build.properties
===================================================================
--- trunk/org.prolint.core/build.properties	2006-02-10 18:28:17 UTC (rev 44)
+++ trunk/org.prolint.core/build.properties	2006-02-10 22:36:25 UTC (rev 45)
@@ -3,13 +3,9 @@
 bin.includes = plugin.xml,\
                core.jar,\
                hibernate2.jar,\
-               .classpath,\
-               .project,\
                META-INF/,\
                build.properties
 src.includes = hibernate2.jar,\
-               .classpath,\
-               .project,\
                META-INF/,\
                build.properties,\
                plugin.xml

Modified: trunk/org.prorefactor.core/build.properties
===================================================================
--- trunk/org.prorefactor.core/build.properties	2006-02-10 18:28:17 UTC (rev 44)
+++ trunk/org.prorefactor.core/build.properties	2006-02-10 22:36:25 UTC (rev 45)
@@ -1,5 +1,4 @@
-bin.includes = *.jar,\
-               proparse.dll,\
+bin.includes = proparse.dll,\
                proparse_jni.dll,\
                *.txt,\
                plugin.xml,\
@@ -8,8 +7,6 @@
                *.zip,\
                *.html,\
                META-INF/,\
-               .classpath,\
-               .project,\
                build.properties
 source.core.jar = src/
 src.includes = proparse_jni.dll,\
@@ -18,9 +15,7 @@
                plugin.xml,\
                data/,\
                about.html,\
-               .classpath,\
-               .project,\
                META-INF/,\
                build.properties,\
-               core.jar
+               src/
 jars.compile.order = 

Modified: trunk/org.prorefactor.doc/build.properties
===================================================================
--- trunk/org.prorefactor.doc/build.properties	2006-02-10 18:28:17 UTC (rev 44)
+++ trunk/org.prorefactor.doc/build.properties	2006-02-10 22:36:25 UTC (rev 45)
@@ -10,12 +10,10 @@
                joanjupdf.xsl,\
                toc.xml,\
                doc.zip,\
-               .project,\
                META-INF/,\
                images/,\
                screenshots/
-src.includes = .project,\
-               META-INF/,\
+src.includes = META-INF/,\
                Makefile,\
                about.html,\
                build.properties,\

Modified: trunk/org.prorefactor.doc/manual.xml
===================================================================
--- trunk/org.prorefactor.doc/manual.xml	2006-02-10 18:28:17 UTC (rev 44)
+++ trunk/org.prorefactor.doc/manual.xml	2006-02-10 22:36:25 UTC (rev 45)
@@ -991,79 +991,27 @@
 
       <orderedlist>
         <listitem>
-          <para>If you don't want to pollute your existing workspace, start
-          Eclipse with an empty workspace (use: <option>-data
-          <replaceable>new_workspace_location</replaceable></option> on the
-          command line).</para>
+          <para>In <guimenuitem>Window &gt; Preferences &gt; Java &gt;
+          Compiler</guimenuitem>, set the compliance level to 5.0. While in
+          Java preferences, also go to <guilabel>Installed JREs</guilabel>,
+          and edit your default JRE. Add <option>-ea -Xss2M</option> to the
+          default VM args. This enables assertions, and sets the stack size to
+          be large enough for recursively descending large syntax
+          trees.</para>
         </listitem>
 
         <listitem>
-          <para>We make use of the Java version 1.4 <literal>assert</literal>
-          statement. In <guimenuitem>Window &gt; Preferences &gt; Java &gt;
-          Compiler &gt; Compliance</guimenuitem>, set source and class
-          compatibility to version 1.4. While in Java preferences, also go to
-          <guilabel>Installed JREs</guilabel>, and edit your default JRE. Add
-          <option>-ea -Xss2M</option> to the default VM args. This enables
-          assertions, and sets the stack size to be large enough for
-          recursively descending large syntax trees.</para>
-        </listitem>
-
-        <listitem>
           <para>Switch to the Java perspective.</para>
         </listitem>
-
-        <listitem>
-          <para>Choose <guimenuitem>File &gt; Import... &gt; External Plug-ins
-          and Fragments</guimenuitem>.</para>
-        </listitem>
-
-        <listitem>
-          <para>All of the defaults should be fine for the first page. You
-          want to import from the target platform, all plug-ins and fragments,
-          binary projects with linked content. Click
-          <guibutton>Next</guibutton>.</para>
-        </listitem>
-
-        <listitem>
-          <para>On the <guilabel>Selection</guilabel> page add all
-          <literal>org.eclipse</literal> and the <literal>org.junit</literal>
-          plug-ins. Do not select the <literal>org.prorefactor.*</literal>
-          plug-ins. We will come back to those.</para>
-        </listitem>
-
-        <listitem>
-          <para>Click <guibutton>Finish</guibutton>. The plug-ins will be
-          imported into binary projects and their build class paths
-          initialized. You can now browse and search the full Eclipse
-          source.</para>
-        </listitem>
-
-        <listitem>
-          <para>Switch to the Package Explorer view. Most of the time, you
-          don't want to see the binary projects. Select
-          <guimenuitem>Filters</guimenuitem> from the Package Explorer view
-          pull-down menu. Select <guilabel>Binary plug-in and feature
-          projects</guilabel> in the subsequent dialog. If you started Eclipse
-          in a clean workspace, the Package Explorer will be empty after you
-          invoke the filter because you haven't created any source plug-in
-          projects yet.</para>
-        </listitem>
-
-        <listitem>
-          <para>One thing to keep in mind when you install a new version of
-          Eclipse (or ProRefactor.org plug-ins): Do not forget to re-import
-          the plug-ins. To do so, click the <guibutton>Existing Binary
-          Projects</guibutton> button on the import wizard's plug-in selection
-          page. This will replace your existing binary projects with the code
-          for the new versions.</para>
-        </listitem>
       </orderedlist>
 
       <para>You now have two choices for importing ProRefactor source. If you
-      want read-only access to ProRefactor, then follow the steps under <link
+      want to use the latest released version of ProRefactor as a library or
+      framework, then follow the steps under <link
       linkend="sec_import_source">"Option One"</link>, below. If you want
-      access to the version control repository, then follow the steps under
-      <link linkend="sec_checkout_source">"Option Two"</link>, below.</para>
+      access to the version control repository for the very latest source code
+      "as it happens", then follow the steps under <link
+      linkend="sec_checkout_source">"Option Two"</link>, below.</para>
     </section>
 
     <section id="sec_import_source">
@@ -1079,33 +1027,16 @@
         </listitem>
 
         <listitem>
-          <para>This time, you want to import the projects with source
-          folders, rather than just a binary with linked content.</para>
+          <para>Choose <guilabel>The target platform</guilabel>,
+          <guilabel>Select from all plug-ins</guilabel>, and
+          <guilabel>Projects with source folders</guilabel>. Click
+          <guibutton>Next</guibutton>.</para>
         </listitem>
 
         <listitem>
           <para>Select the <literal>org.prorefactor.*</literal> plug-ins, and
           click <guibutton>Finish</guibutton>.</para>
         </listitem>
-
-        <listitem>
-          <para>If you started from a clean workspace, the only projects
-          visible in the Package Explorer should now be the ProRefactor.org
-          projects which contain source code. You can browse and search the
-          source in those projects.</para>
-        </listitem>
-
-        <listitem>
-          <para>In <guimenuitem>Window &gt; Preferences &gt; Java &gt;
-          Compiler &gt; Installed JRE</guimenuitem>s, edit your default JRE.
-          Add
-          <option>-Djava.library.path=<replaceable>/your/path</replaceable></option>
-          to the default VM args, where
-          <filename><replaceable>/your/path</replaceable></filename> is the
-          <filename>org.prorefactor.core</filename> plug-in directory (which
-          is where <filename>proparse.dll</filename> and
-          <filename>proparse_jni.dll</filename> can be found).</para>
-        </listitem>
       </orderedlist>
     </section>
 
@@ -1140,24 +1071,33 @@
       <para>From the Eclipse menu, choose <guimenuitem>File &gt; Import...
       &gt; Existing Project into Workspace</guimenuitem> for each of the
       <literal>org.prorefactor</literal> project directories in the following
-      order: <literal>antlr</literal>, <literal>lib</literal>,
-      <literal>core</literal>, <literal>refactor</literal>,
-      <literal>eclipse</literal>, <literal>javadoc</literal>,
-      <literal>doc</literal>, <literal>feature</literal>,
-      <literal>update</literal>. Eclipse will automatically build (compile)
-      each project as you import it.</para>
+      order: <literal>lib</literal>, <literal>core</literal>,
+      <literal>refactor</literal>, <literal>eclipse</literal>, and then the
+      rest. Eclipse will automatically build (compile) each project as you
+      import it.</para>
+    </section>
 
-      <para>In <guilabel>Window &gt; Preferences &gt; Java &gt; Installed
-      JREs</guilabel>, edit your default JRE. Add:
+    <section>
+      <title>Assigning java.library.path</title>
+
+      <para>In order for <filename>proparse.dll</filename> and
+      <filename>proparse_jni.dll</filename> to be found, they must be in the
+      Java library path. Those two DLLs are found in the
+      <literal>org.prorefactor.core</literal> project directory. Select that
+      project, and choose <guilabel>Properties &gt; Info</guilabel> and copy
+      the project location (full path). In <guilabel>Window &gt; Preferences
+      &gt; Java &gt; Installed JREs</guilabel>, edit your default JRE. Add:
       <option>-Djava.library.path=<replaceable>/your/path</replaceable></option>
       to the default VM args, where <replaceable>/your/path</replaceable> is
-      your <filename>org.prorefactor.core</filename> project directory, where
-      <filename>proparse.dll</filename> and
-      <filename>proparse_jni.dll</filename> can be found.</para>
+      your <filename>org.prorefactor.core</filename> project directory.</para>
+    </section>
 
-      <para>Now you can run the regression tests. You can navigate to the
-      following two source files, and run them as JUnit tests:</para>
+    <section>
+      <title>Unit Tests and Run-time Workbench</title>
 
+      <para>Now you can run the unit tests. You can navigate to the following
+      two source files, and run them as JUnit tests:</para>
+
       <itemizedlist>
         <listitem>
           <para><filename>org.prorefactor.core.unittest.AllPRCoreTests.java</filename></para>
@@ -1169,7 +1109,7 @@
       </itemizedlist>
 
       <para>To launch the Run-time Workbench, choose <guimenuitem>Run &gt; Run
-      As &gt; Run-time Workbench</guimenuitem>. From the Run-time Workbench,
+      As &gt; Eclipse Application</guimenuitem>. From the Run-time Workbench,
       you should be able to select the ProRefactor perspective, create test
       projects, and launch the ProRefactor menu actions. This is where you
       would test any changes or additions that you make to ProRefactor or your

Modified: trunk/org.prorefactor.eclipse/build.properties
===================================================================
--- trunk/org.prorefactor.eclipse/build.properties	2006-02-10 18:28:17 UTC (rev 44)
+++ trunk/org.prorefactor.eclipse/build.properties	2006-02-10 22:36:25 UTC (rev 45)
@@ -10,9 +10,7 @@
                plugin.properties,\
                build.properties,\
                META-INF/,\
-               .template,\
-               .project,\
-               .classpath
+               .template
 source.eclipse.jar = src/
 src.includes = *.html,\
                about.ini,\
@@ -24,8 +22,6 @@
                icons/,\
                eclipse.jar,\
                plugin.xml,\
-               .classpath,\
-               .project,\
                .template,\
                META-INF/,\
                build.properties

Modified: trunk/org.prorefactor.javadoc/build.properties
===================================================================
--- trunk/org.prorefactor.javadoc/build.properties	2006-02-10 18:28:17 UTC (rev 44)
+++ trunk/org.prorefactor.javadoc/build.properties	2006-02-10 22:36:25 UTC (rev 45)
@@ -2,13 +2,11 @@
                *.html,\
                *.zip,\
                toc.xml,\
-               .project,\
                build.properties,\
                build.xml,\
                javadoc.xml,\
                META-INF/
-src.includes = .project,\
-               META-INF/,\
+src.includes = META-INF/,\
                about.html,\
                build.properties,\
                doc.zip,\

Modified: trunk/org.prorefactor.lib/build.properties
===================================================================
--- trunk/org.prorefactor.lib/build.properties	2006-02-10 18:28:17 UTC (rev 44)
+++ trunk/org.prorefactor.lib/build.properties	2006-02-10 22:36:25 UTC (rev 45)
@@ -1,8 +1,6 @@
 bin.includes = plugin.xml,\
                lib/,\
                build.properties,\
-               .project,\
-               .classpath,\
                src/,\
                hibernate/,\
                hsqldb/,\
@@ -13,9 +11,7 @@
                antlr/,\
                junit/,\
                META-INF/
-src.includes = .classpath,\
-               .project,\
-               build.properties,\
+src.includes = build.properties,\
                lib/,\
                plugin.xml,\
                src/,\

Modified: trunk/org.prorefactor.refactor/build.properties
===================================================================
--- trunk/org.prorefactor.refactor/build.properties	2006-02-10 18:28:17 UTC (rev 44)
+++ trunk/org.prorefactor.refactor/build.properties	2006-02-10 22:36:25 UTC (rev 45)
@@ -6,8 +6,6 @@
                *.html,\
                4gl/,\
                META-INF/,\
-               .classpath,\
-               .project,\
                build.properties
 source.refactor.jar = src/
 src.includes = *.html,\
@@ -18,6 +16,4 @@
                refactor.jar,\
                refactorsrc.zip,\
                META-INF/,\
-               build.properties,\
-               .project,\
-               .classpath
+               build.properties



From johnallengreen at berlios.de  Sat Feb 11 01:57:34 2006
From: johnallengreen at berlios.de (johnallengreen at BerliOS)
Date: Sat, 11 Feb 2006 01:57:34 +0100
Subject: [Prorefactor-svn] r46 - in trunk: org.prorefactor.doc org.prorefactor.javadoc
Message-ID: <200602110057.k1B0vY8v002290@sheep.berlios.de>

Author: johnallengreen
Date: 2006-02-11 01:57:26 +0100 (Sat, 11 Feb 2006)
New Revision: 46

Modified:
   trunk/org.prorefactor.doc/build.properties
   trunk/org.prorefactor.doc/manual.xml
   trunk/org.prorefactor.javadoc/javadoc.xml
Log:
Candidate for last commit before 1.3 release.
A few last minute doc touch ups.

Modified: trunk/org.prorefactor.doc/build.properties
===================================================================
--- trunk/org.prorefactor.doc/build.properties	2006-02-10 22:36:25 UTC (rev 45)
+++ trunk/org.prorefactor.doc/build.properties	2006-02-11 00:57:26 UTC (rev 46)
@@ -10,21 +10,17 @@
                joanjupdf.xsl,\
                toc.xml,\
                doc.zip,\
-               META-INF/,\
-               images/,\
-               screenshots/
+               META-INF/
 src.includes = META-INF/,\
                Makefile,\
                about.html,\
                build.properties,\
                doc.zip,\
                helpcontexts.xml,\
-               images/,\
                joanju.css,\
                joanju.xsl,\
                joanjupdf.xsl,\
                manual.xml,\
                plugin.xml,\
-               screenshots/,\
                toc.xml,\
                pdf.bat

Modified: trunk/org.prorefactor.doc/manual.xml
===================================================================
--- trunk/org.prorefactor.doc/manual.xml	2006-02-10 22:36:25 UTC (rev 45)
+++ trunk/org.prorefactor.doc/manual.xml	2006-02-11 00:57:26 UTC (rev 46)
@@ -1062,19 +1062,13 @@
 
       <programlisting>svn checkout svn://svn.berlios.de/prorefactor/trunk</programlisting>
 
-      <para>This will create several directories named
-      <filename>org.prorefactor.*</filename>.</para>
+      <para>This will create a directory named <filename>trunk</filename> and
+      several directories named <filename>org.prorefactor.*</filename>.</para>
 
-      <para>Once you have checked the source out from the repository, you are
-      ready to load that source into Eclipse projects.</para>
-
       <para>From the Eclipse menu, choose <guimenuitem>File &gt; Import...
-      &gt; Existing Project into Workspace</guimenuitem> for each of the
-      <literal>org.prorefactor</literal> project directories in the following
-      order: <literal>lib</literal>, <literal>core</literal>,
-      <literal>refactor</literal>, <literal>eclipse</literal>, and then the
-      rest. Eclipse will automatically build (compile) each project as you
-      import it.</para>
+      &gt; Existing Project into Workspace</guimenuitem>. Browse to select
+      <filename>trunk</filename> as the root directory, and then Eclipse will
+      allow you to import all of the projects at once.</para>
     </section>
 
     <section>
@@ -1569,6 +1563,12 @@
               Prolint/Eclipse is in early development, and not yet generally
               useful for real work.</para>
             </listitem>
+
+            <listitem>
+              <para>The instructions for "Extending ProRefactor" are now much
+              simpler. The same applies for extending Prolint/Eclipse. No
+              excuses. :)</para>
+            </listitem>
           </itemizedlist>
         </listitem>
       </varlistentry>

Modified: trunk/org.prorefactor.javadoc/javadoc.xml
===================================================================
--- trunk/org.prorefactor.javadoc/javadoc.xml	2006-02-10 22:36:25 UTC (rev 45)
+++ trunk/org.prorefactor.javadoc/javadoc.xml	2006-02-11 00:57:26 UTC (rev 46)
@@ -3,7 +3,7 @@
   <target name="javadoc" description="Build javadoc dir">
 	  <javadoc 
 	           destdir="javadoc"
-	           source="1.4"
+	           source="5.0"
 	           author="true"
 	           version="true"
 	           use="true"
@@ -24,8 +24,8 @@
 	    <fileset dir="../org.prorefactor.eclipse/src" defaultexcludes="yes">
 	      <include name="**/*.java"/>
 	    </fileset>
-	    <doctitle><![CDATA[<h1>ProRefactor 1.2.3</h1>]]></doctitle>
-	    <bottom><![CDATA[<i>Copyright &#169; 2002-2005 Joanju and others. All Rights Reserved.</i>]]></bottom>
+	    <doctitle><![CDATA[<h1>ProRefactor 1.3.0</h1>]]></doctitle>
+	    <bottom><![CDATA[<i>Copyright &#169; 2002-2006 Joanju and others. All Rights Reserved.</i>]]></bottom>
 	    <tag name="todo" scope="all" description="To do:" />
 	  </javadoc>
       <zip zipfile="doc.zip" basedir="javadoc" filesonly="false" whenempty="skip" update="false"/>



